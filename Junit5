import com.fasterxml.jackson.core.JsonProcessingException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.junit.jupiter.MockitoExtension;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.annotation.XmlRootElement;
import java.io.StringReader;

@ExtendWith(MockitoExtension.class)
class BatchLoaderUtilsTest {

    @InjectMocks
    private BatchLoaderUtils batchLoaderUtils;

    @Test
    void testConvertToObject_ValidInput() throws JsonProcessingException, JAXBException {
        // Arrange
        String xml = "<TestClass><value>hello</value></TestClass>";
        Class<TestClass> clazz = TestClass.class;

        // Act
        TestClass result = batchLoaderUtils.convertToObject(xml, clazz);

        // Assert
        Assertions.assertNotNull(result);
        Assertions.assertEquals("hello", result.getValue());
    }

    @Test
    void testConvertToObject_InvalidInput() throws JsonProcessingException, JAXBException {
        // Arrange
        String xml = null;
        Class<TestClass> clazz = TestClass.class;

        // Act and Assert
        Assertions.assertThrows(NullPointerException.class, () -> {
            batchLoaderUtils.convertToObject(xml, clazz);
        });
    }

    @Test
    void testConvertToObject_JAXBException() throws JsonProcessingException, JAXBException {
        // Arrange
        String xml = "<test>hello</test>";
        Class<InvalidClass> clazz = InvalidClass.class;

        // Act and Assert
        Assertions.assertThrows(JAXBException.class, () -> {
            batchLoaderUtils.convertToObject(xml, clazz);
        });
    }

    // Other test cases remain the same
}

@XmlRootElement(name = "TestClass")
class TestClass {
    private String value;

    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }
}

class InvalidClass {
    // This class is not annotated with @XmlRootElement, causing a JAXBException
}