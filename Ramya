package org.vdsi.space.collections.customauditengine.controllers;

import org.json.JSONException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.vdsi.space.collections.customauditengine.model.SpaceCollector;
import org.vdsi.space.collections.customauditengine.services.AuditService;
import org.vdsi.space.collections.customauditengine.utils.Transformer;

import java.util.List;

@RestController
@RequestMapping("/custom-audit-engine")
public class CollectionAuditController {

    @Autowired
    private AuditService auditService;

    @Autowired
    private Transformer transformer;

    @GetMapping("/checkStatus")
    public ResponseEntity<List<SpaceCollector>> checkStatus(@RequestParam("host") String host) {
        try {
            // Fetch space collectors data
            List<SpaceCollector> spaceCollectors = auditService.checkStatus(host);

            // Update response with additional fields
            for (SpaceCollector spaceCollector : spaceCollectors) {
                // Format and add lastCollectionSuccessful and lastTransformationSuccessful fields
                JSONObject lastProcessedData = transformer.getLastProcessedData(spaceCollector.getUrl());
                spaceCollector.setLastCollectionSuccessful(lastProcessedData.getString("lastCollectionSuccessful"));
                spaceCollector.setLastTransformationSuccessful(lastProcessedData.getString("lastTransformationSuccessful"));
            }

            return new ResponseEntity<>(spaceCollectors, HttpStatus.OK);
        } catch (JSONException e) {
            return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }
}
