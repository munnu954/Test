I understand the issue you are facing. Let's make sure we explicitly configure the message converters to handle JSON responses correctly. Here are the revised code changes to address the "UnknownContentTypeException" error:

### Code Changes:

#### 1. **Update AppConfig Class**:
   
```java
@Configuration
public class AppConfig {

    @Bean
    public RestTemplate restTemplate(RestTemplateBuilder builder) {
        RestTemplate restTemplate = builder.build();
        restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
        restTemplate.getMessageConverters().add(new StringHttpMessageConverter());
        return restTemplate;
    }
}
```

#### 2. **Update LinkAggregationUtil Class** (Assuming you are using `RestTemplate` here):
   
```java
@Component
public class LinkAggregationUtil {

    private final RestTemplate restTemplate;

    @Autowired
    public LinkAggregationUtil(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    // Your method that makes the HTTP request
    public ResponseEntity<String> getLinkAggregationData(String url) {
        ResponseEntity<String> responseEntity = restTemplate.exchange(url, HttpMethod.GET, null, String.class);
        return responseEntity;
    }
}
```

#### 3. **Update LinkAggConfigService Class** (Wherever you are processing the response):

Ensure that the response entity is correctly handled in your service classes.

#### 4. **Update LinkAggregationService Class** (If needed):

Make sure that the response entity is properly handled and converted to `LinkAggregationResponse` objects in the service logic.

#### 5. **Update LinkAggregationController Class**:

Similarly, update how the response entity is consumed and processed in your controller methods.

### Places where the code changes were made:

1. **AppConfig**:
   - Added `MappingJackson2HttpMessageConverter` and `StringHttpMessageConverter` to the `RestTemplate` bean.

2. **LinkAggregationUtil**:
   - Updated to ensure proper injection of `RestTemplate` and handling of response entities as strings.

3. **Other Service Classes (e.g., LinkAggConfigService, LinkAggregationService)**:
   - Verify that the response entity is correctly processed.

4. **LinkAggregationController**:
   - Adjust methods to handle response entities appropriately.

By incorporating these modifications, Spring should now be able to handle the conversion of JSON responses to strings correctly. If you encounter any further challenges or require additional assistance, please let me know!