import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;
import com.google.gson.JsonObject;
import com.google.gson.JsonArray;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] lines = input.split(System.lineSeparator());
        JsonArray resultArray = new JsonArray();
        JsonObject currentObject = null;

        for (int i = 0; i < lines.length; i++) {
            String[] arr = lines[i].split(",");

            if (arr.length > 2 && !arr[2].isEmpty()) {
                // This is the line containing ObjectName
                if (currentObject != null) {
                    resultArray.add(currentObject);
                }

                currentObject = new JsonObject();
                currentObject.addProperty("ObjectName", arr[2].trim());

                // Fetching EndDate and Ticket Number
                if (i + 2 < lines.length) {
                    currentObject.addProperty("Begin Date", arr[1].trim());

                    // Check if there are enough columns to fetch EndDate and Ticket Number
                    String[] endDateArr = lines[i + 1].split(",");
                    String[] ticketNumberArr = lines[i + 2].split(",");
                    if (endDateArr.length > 1 && ticketNumberArr.length > 1) {
                        currentObject.addProperty("End Date", endDateArr[1].trim());
                        currentObject.addProperty("Ticket Number", ticketNumberArr[1].trim());
                    } else {
                        currentObject.addProperty("End Date", "");
                        currentObject.addProperty("Ticket Number", "");
                    }
                }
            } else if (arr.length > 0 && !arr[0].isEmpty() && !arr[0].equals("TICKET NUMBER")) {
                // This is a line containing SectionName, skip rows with "TICKET NUMBER"
                String sectionName = arr[0].trim();
                JsonObject sectionObject = new JsonObject();

                sectionObject.addProperty("Min", arr.length > 3 ? arr[3].trim() : "");
                sectionObject.addProperty("Average", arr.length > 4 ? arr[4].trim() : "");
                sectionObject.addProperty("Max", arr.length > 5 ? arr[5].trim() : "");
                sectionObject.addProperty("Cumulative Counter Value", arr.length > 6 ? arr[6].trim() : "");

                currentObject.add(sectionName, sectionObject);
            }
        }

        // Add the final JSON structure for the last object
        if (currentObject != null) {
            resultArray.add(currentObject);
        }

        collector.collect(resultArray.toString());
    }
}
