Here's an example of how you can achieve this in Spring Boot:

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.util.ResourceUtils;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

@Service
public class CsvService {

    @Value("${csv.filepath}")
    private String filepath;

    public void writeCsvFile() {
        try {
            File file = ResourceUtils.getFile(filepath);
            FileWriter writer = new FileWriter(file);
            // Write CSV data to the file
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public File retrieveCsvFile() {
        try {
            return ResourceUtils.getFile(filepath);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    public void deleteCsvFile() {
        try {
            File file = ResourceUtils.getFile(filepath);
            file.delete();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}


In your application.yml file, you would define the csv.filepath property like this:

csv:
  filepath: /path/to/your/csv/file.csv


This way, you can easily change the file path without modifying the code.