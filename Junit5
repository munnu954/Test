To achieve 100% branch coverage for the conditional statements in the `IVAPPDeviceUtil` class, we need to create test cases for the following scenarios:

1. `deviceResponse` is null.
2. `deviceNode` is null, even when `deviceResponse.get("equipmentLst")` is not null.

Here are the additional test cases:

```java
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Before;
import org.junit.Test;
import org.mockito.MockitoAnnotations;

public class IVAPPDeviceUtilBranchCoverageTest {

    private IVAPPDeviceUtil ivappDeviceUtil;
    private ObjectMapper objectMapper;

    @Before
    public void setUp() {
        MockitoAnnotations.openMocks(this);
        ivappDeviceUtil = new IVAPPDeviceUtil();
        objectMapper = new ObjectMapper();
    }

    @Test(expected = NoDataFoundException.class)
    public void testCovertv3formatWithNullDeviceResponse() throws Exception {
        // Pass a null deviceResponse
        JsonNode deviceResponse = null;

        // This should throw NoDataFoundException due to null deviceResponse
        ivappDeviceUtil.covertv3format(deviceResponse);
    }

    @Test
    public void testCovertv3formatWithNullDeviceNode() throws Exception {
        // Create a JSON with equipmentLst present but equipmentContainer is empty
        String json = "{ \"equipmentLst\": {} }";
        JsonNode deviceResponse = objectMapper.readTree(json);

        // This should return an empty UTSEquipmentList without throwing an exception
        UTSEquipmentList result = ivappDeviceUtil.covertv3format(deviceResponse);

        // Assert that the result has an empty equipment list
        assertNotNull(result);
        assertNotNull(result.getEquipmentLst());
        assertEquals(0, result.getEquipmentLst().getEquipmentContainer().size());
    }
}
```

### Explanation:

1. **Test `testCovertv3formatWithNullDeviceResponse()`**:
   - This test case handles the scenario where `deviceResponse` is null, which is the first branch of the statement `if (null != deviceResponse && null != deviceResponse.get("equipmentLst"))`.
   - It expects a `NoDataFoundException` to be thrown.

2. **Test `testCovertv3formatWithNullDeviceNode()`**:
   - This test case checks when `deviceNode` is null, which means `deviceResponse.get("equipmentLst")` is not null, but it is an empty object.
   - The method should return an empty `UTSEquipmentList` without throwing an exception, covering the branch where `deviceNode` is null.

These tests should provide full coverage for all branches of the conditional statements in the `IVAPPDeviceUtil` class.