Here are some additional Junit5 test cases to achieve 100% code coverage for the `createAlarm(String msg)` method in the `AlarmRepositoryImpl` class:

```java
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class AlarmRepositoryImplTest {

    @Test
    public void testCreateAlarmWithValidMessage() {
        AlarmRepositoryImpl repository = new AlarmRepositoryImpl();
        String message = "Test Alarm";
        Alarm alarm = repository.createAlarm(message);
        assertNotNull(alarm);
        assertEquals(message, alarm.getMessage());
    }

    @Test
    public void testCreateAlarmWithNullMessage() {
        AlarmRepositoryImpl repository = new AlarmRepositoryImpl();
        assertThrows(IllegalArgumentException.class, () -> {
            repository.createAlarm(null);
        });
    }

    @Test
    public void testCreateAlarmWithEmptyMessage() {
        AlarmRepositoryImpl repository = new AlarmRepositoryImpl();
        assertThrows(IllegalArgumentException.class, () -> {
            repository.createAlarm("");
        });
    }

    @Test
    public void testCreateAlarmWithWhitespaceMessage() {
        AlarmRepositoryImpl repository = new AlarmRepositoryImpl();
        assertThrows(IllegalArgumentException.class, () -> {
            repository.createAlarm("   ");
        });
    }

    @Test
    public void testCreateAlarmWithLongMessage() {
        AlarmRepositoryImpl repository = new AlarmRepositoryImpl();
        String message = "This is a very long alarm message that exceeds the maximum allowed length";
        assertThrows(IllegalArgumentException.class, () -> {
            repository.createAlarm(message);
        });
    }

}
```

These test cases cover various scenarios such as creating an alarm with a valid message, creating an alarm with a null, empty, or whitespace message, and creating an alarm with a message that exceeds the maximum allowed length. By running these test cases, you should be able to achieve 100% code coverage for the `createAlarm(String msg)` method in the `AlarmRepositoryImpl` class.