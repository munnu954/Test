import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import java.util.HashMap;
import java.util.Map;
import static org.junit.jupiter.api.Assertions.assertEquals;

class AlarmPostingUtilsTest {

    private Map<String, Object> srcMap;
    
    @BeforeEach
    void setUp() {
        srcMap = new HashMap<>();
        srcMap.put("testList", List.of("value1", "value2", "value3"));
        srcMap.put("testMap", Map.of("key1", "val1", "key2", "val2"));
    }

    @Test
    void testParse_withSimpleAttribute() throws JsonMappingException, JsonProcessingException {
        String value = "%test%";
        String result = AlarmPostingUtils.parse(value, srcMap, "test");
        assertEquals("value", result);
    }

    @Test
    void testParse_withNestedAttribute() throws JsonMappingException, JsonProcessingException {
        String value = "%testMap:key1%";
        String result = AlarmPostingUtils.parse(value, srcMap, "test");
        assertEquals("val1", result);
    }

    @Test
    void testParse_withNestedListAttribute() throws JsonMappingException, JsonProcessingException {
        String value = "%testList[1]%";
        String result = AlarmPostingUtils.parse(value, srcMap, "test");
        assertEquals("value2", result);
    }

    @Test
    void testParse_withInvalidAttribute_shouldReturnEmptyString() throws JsonMappingException, JsonProcessingException {
        String value = "%invalid%";
        String result = AlarmPostingUtils.parse(value, srcMap, "test");
        assertEquals("", result);
    }

    @Test
    void testParse_withInvalidNestedAttribute_shouldReturnEmptyString() throws JsonMappingException, JsonProcessingException {
        String value = "%testMap:invalid%";
        String result = AlarmPostingUtils.parse(value, srcMap, "test");
        assertEquals("", result);
    }

    @Test
    void testParse_withInvalidListIndex_shouldReturnEmptyString() throws JsonMappingException, JsonProcessingException {
        String value = "%testList[5]%";
        String result = AlarmPostingUtils.parse(value, srcMap, "test");
        assertEquals("", result);
    }
}