Sure, here is the updated code:


public static class CsvtoJsonDRAnTransformer extends RichFlatMapFunction<String, String> {
    private String[] headers;
    private IntCounter successIntCounter = new IntCounter();
    private IntCounter failureIntCounter = new IntCounter();
    private String fileName;
    public CsvtoJsonDRAnTransformer(String fileName) {
        this.fileName = fileName;
    }

    @Override
    public void open(Configuration parameters) throws Exception {
        getRuntimeContext().addAccumulator("successIntCounter", this.successIntCounter);
        getRuntimeContext().addAccumulator("failureIntCounter", this.failureIntCounter);
    }

    @Override
    public void flatMap(String s, Collector<String> collector) throws Exception {
        String[] lines = s.split(System.lineSeparator());
        headers = lines[12].split(",");
        for (int i = 13; i < lines.length; i++) {
            String str = lines[i];
            String[] arr = str.split(",");
            if (headers == null || headers.length != arr.length) {               this.failureIntCounter.add(1);
                continue;
            }
            JSONObject obj = new JSONObject();
            obj.put("FILENAME", fileName);
            for (int j = 0; j < arr.length; j++) {
                String jsonkey = headers[j].trim().replace("\"‌", "");
                String jsonvalue = arr[j].trim().replace("\""‌, "");
                obj.put(jsonkey, jsonvalue);
            }            this.successIntCounter.add(1);           collector.collect(obj.toString());
        }
    }
}


I have modified the code to pick up and process the headers from line number 13, instead of line number 3. I have also added a check to ensure that the number of headers matches the number of columns in the data