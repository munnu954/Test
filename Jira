To write JUnit5 test cases in Spring Boot with mocking, we can use Mockito for mocking KafkaProducer and KafkaConsumer classes.

Here's an example of JUnit5 test cases for KafkaProducer and KafkaConsumer classes:

```java
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@SpringBootTest
public class KafkaTest {

    @InjectMocks
    private KafkaProducer kafkaProducer;

    @Mock
    private KafkaTemplate<String, SpaceCollector> kafkaTemplate;

    @Value("${spring.kafka.producer.topic-name}")
    private String topicName;

    @Test
    public void testKafkaProducer() {
        SpaceCollector message = new SpaceCollector(1, "url", 8080, "input.csv", "output.csv", ",", "CSV");

        doNothing().when(kafkaTemplate).send(topicName, message);
        kafkaProducer.sendMessage(message);

        verify(kafkaTemplate, times(1)).send(topicName, message);

        // Assertions
        assertNotNull(message);
        assertEquals(message.getId(), 1);
        assertEquals(message.getPort(), 8080);
        assertEquals(message.getInputFilePath(), "input.csv");
        assertEquals(message.getOutputFilePath(), "output.csv");
    }

    @InjectMocks
    private KafkaConsumer kafkaConsumer;

    @Mock
    private FlinkApiController flinkApi;

    @Value("${file.source}")
    private String sourceFilePath;

    @Value("${file.destination}")
    private String destinationFolderPath;

    @Test
    public void testKafkaConsumer() throws IOException, CsvValidationException {

        SpaceCollector message = new SpaceCollector(1, "url", 8080, "input.csv", "output.csv", ",", "CSV");

        when(flinkApi.triggerJob(message)).thenReturn("flink-response");

        kafkaConsumer.consume(message);

        // Assertions
        assertNotNull(message.getSourceFilePath());
        assertEquals(message.getSourceFilePath(), sourceFilePath);

        // Verify the methods were called
        verify(flinkApi, times(1)).triggerJob(message);
    }
}
```

Note: Make sure you have set up the Spring Boot environment for writing JUnit5 test cases.