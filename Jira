import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.test.util.ReflectionTestUtils;

class KafkaConsumerServiceTest 

  @Mock
  private KafkaTemplate<String, SpaceCollector> kafkaTemplate;

  @InjectMocks
  private KafkaConsumerService kafkaConsumerService;

  @Test
  void testConsumeValidSpaceCollectorMessage() 
    SpaceCollector spaceCollector = new SpaceCollector(1, "http://example.com", 8080, "input.txt", "output.txt", ",");
    ReflectionTestUtils.setField(kafkaConsumerService, "topicName", "test-topic");
    
    kafkaConsumerService.consumeMessage(spaceCollector);
    
    Mockito.verify(kafkaTemplate, Mockito.times(1)).send("test-topic", spaceCollector);
  

  @Test
  void testConsumeNullMessage() 
    SpaceCollector spaceCollector = null;
    ReflectionTestUtils.setField(kafkaConsumerService, "topicName", "test-topic");
    
    assertThrows(IllegalArgumentException.class, () -> kafkaConsumerService.consumeMessage(spaceCollector));