It seems that the exception is not being thrown as expected. To handle this case, you can add a check in your test case to verify if the response from `fetchRuleDetails` is null and then throw the `NullPointerException` yourself. Here's an updated test case:

```java
@Test
void testLoadPostingRuleWithNullResponse() {

    when(rmfApiClient.fetchRuleDetails(any())).thenReturn(null);

    // Add a check for null response and throw NullPointerException if needed
    if (rmfApiClient.fetchRuleDetails(1L) == null) {
        Throwable exception = assertThrows(NullPointerException.class, () -> {
            ruleLoadingService.loadPostingRule(1L);
        });

        assertEquals("Response from RMF API is null", exception.getMessage());
    }
}
```

By adding this additional check in the test case, you can handle the case where the response is null and still verify that the `NullPointerException` is thrown. This should help in fixing the error you are encountering.