import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.junit.runner.RunWith;
import org.powermock.modules.junit4.PowerMockRunner;

// Add this annotation to your test class
@RunWith(PowerMockRunner.class)
@PrepareForTest({ZipUtil.class})
public class NestedFilesValidationSteps {

    // Existing code

    @Given("the ZIP file {string} contains the following files")
    public void givenTheZIPFileContainsTheFollowingFiles(String zipFile, io.cucumber.datatable.DataTable dataTable) throws Exception {
        // Mock the ZIP file extraction
        List<String> nestedFiles = new ArrayList<>();
        for (Map<String, String> row : dataTable.asMaps()) {
            nestedFiles.add("/local/path/Sample/" + row.get("filename"));
        }

        // Mock the static method call using PowerMockito
        PowerMockito.mockStatic(ZipUtil.class);
        PowerMockito.doNothing().when(ZipUtil.class, "extract", anyString(), anyString());

        when(FileUtil.readFilesInDirectory(anyString())).thenReturn(nestedFiles);
        when(ZipUtil.isZipFile(anyString())).thenReturn(true);
    }

    // Remaining code
}
