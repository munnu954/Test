Sure, let's add additional test cases to cover the missing branches in the `else if` block. Here are the new test cases to ensure 100% code coverage:

```java
@Test
void testCreateAlarm_withNullPerceivedSeverityAndClearedState() throws Exception {
    ObjectMapper obj = new ObjectMapper();
    String nullPerceivedSeverityJson = "{ \"externalAlarmId\":\"abcd\", \"State\":\"cleared\", \"sequenceId\":\"12345\"}";
    JsonNode json = obj.readTree(nullPerceivedSeverityJson);

    Map<String, Integer> percMap = new HashMap<>();
    Map<String, Integer> stateMap = new HashMap<>();
    Map<String, Integer> typeMap = new HashMap<>();
    percMap.put("Indeterminate", 1);
    stateMap.put("cleared", 1);  // Cleared state
    typeMap.put("Other", 1);

    when(postgresConf.getAlarmTypeMap()).thenReturn(typeMap);
    when(postgresConf.getPerceivedSeverityMap()).thenReturn(percMap);
    when(postgresConf.getAlarmStateMap()).thenReturn(stateMap);
    when(postgresConf.getAlarmTypeOther()).thenReturn("Other");
    when(postgresConf.getAlarmStateNew()).thenReturn("new");
    when(postgresConf.getPerceivedSeverityIndeterminate()).thenReturn("Indeterminate");
    when(postgresConf.getAlarmStateCleared()).thenReturn("cleared");

    alarmRepositoryImpl.createAlarm(nullPerceivedSeverityJson);
}

@Test
void testCreateAlarm_withEmptyPerceivedSeverityAndClearedState() throws Exception {
    ObjectMapper obj = new ObjectMapper();
    String emptyPerceivedSeverityJson = "{ \"externalAlarmId\":\"abcd\", \"State\":\"cleared\", \"sequenceId\":\"12345\", \"perceivedSeverity\":\"\"}";
    JsonNode json = obj.readTree(emptyPerceivedSeverityJson);

    Map<String, Integer> percMap = new HashMap<>();
    Map<String, Integer> stateMap = new HashMap<>();
    Map<String, Integer> typeMap = new HashMap<>();
    percMap.put("Indeterminate", 1);
    percMap.put("", 1);  // Adding perceived severity value that is empty
    stateMap.put("cleared", 1);  // Cleared state
    typeMap.put("Other", 1);

    when(postgresConf.getAlarmTypeMap()).thenReturn(typeMap);
    when(postgresConf.getPerceivedSeverityMap()).thenReturn(percMap);
    when(postgresConf.getAlarmStateMap()).thenReturn(stateMap);
    when(postgresConf.getAlarmTypeOther()).thenReturn("Other");
    when(postgresConf.getAlarmStateNew()).thenReturn("new");
    when(postgresConf.getPerceivedSeverityIndeterminate()).thenReturn("Indeterminate");
    when(postgresConf.getAlarmStateCleared()).thenReturn("cleared");

    alarmRepositoryImpl.createAlarm(emptyPerceivedSeverityJson);
}
```

### Summary of Test Cases

1. **testCreateAlarm_withNullPerceivedSeverityAndClearedState**: Covers the branch where `perceivedSeverity` is `null` and `stateValue` equals `cleared`.
2. **testCreateAlarm_withEmptyPerceivedSeverityAndClearedState**: Covers the branch where `perceivedSeverity` is an empty string and `stateValue` equals `cleared`.

With these additional test cases, you should achieve 100% code coverage for the `else if` block specified.