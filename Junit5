```java

.getTarget());
    }

    @Test
    void testProcess_previousComponentIsPath_prevLinkTargetNull() {
        // Given
        List<Node> nodes = new ArrayList<>();
        Node node = new Node();
        node.setPortId("port1");
        nodes.add(node);
        List<Link> links = new ArrayList<>();
        Link prevLink = new Link();
        prevLink.setTarget("port1");
        links.add(prevLink);
        ClrComponent clrComponent = createClrComponent();
        ClrComponent prevClrComponent = createPath();
        prevClrComponent.setCircuitComp(List.of(createCircuitInfoWithNullCreatedBySys()));
        List<ClrComponent> clrComponentList = new ArrayList<>();
        clrComponentList.add(prevClrComponent);
        Map<String, List<Node>> clliNodeMap = Map.of();
        int i = 1;
        AtomicInteger ukCount = new AtomicInteger(0);
        String sourceSys = "TEST_SOURCE";

        // When
        pathProcessor.process(nodes, links, clrComponent, clrComponentList, clliNodeMap, i, ukCount, sourceSys);

        // Then
        Assertions.assertEquals(3, links.size());
        Assertions.assertEquals("port1", links.get(2).getSource());
        Assertions.assertEquals("Unknown1", links.get(2).getTarget());
    }

    @Test
    void testProcess_previousComponentIsPath_prevLinkTargetNotNull() {
        // Given
        List<Node> nodes = new ArrayList<>();
        List<Link> links = new ArrayList<>();
        Link prevLink = new Link();
        prevLink.setTarget("Unknown0");
        links.add(prevLink);
        ClrComponent clrComponent = createClrComponent();
        ClrComponent prevClrComponent = createPath();
        prevClrComponent.setCircuitComp(List.of(createCircuitInfoWithNullCreatedBySys()));
        List<ClrComponent> clrComponentList = new ArrayList<>();
        clrComponentList.add(prevClrComponent);
        Map<String, List<Node>> clliNodeMap = Map.of();
        int i = 1;
        AtomicInteger ukCount = new AtomicInteger(0);
        String sourceSys = "TEST_SOURCE";

        // When
        pathProcessor.process(nodes, links, clrComponent, clrComponentList, clliNodeMap, i, ukCount, sourceSys);

        // Then
        Assertions.assertEquals(2, links.size());
        Assertions.assertEquals("Unknown0", links.get(1).getSource());
        Assertions.assertEquals("Unknown1", links.get(1).getTarget());
    }

    private ClrComponent createClrComponent() {
        ClrComponent clrComponent = new ClrComponent();
        CircuitComp circuitComp = new CircuitComp();
        circuitComp.setCircuitInfo(List.of(createCircuitInfoWithNullCreatedBySys()));
        clrComponent.setCircuitComp(List.of(circuitComp));
        return clrComponent;
    }

    private ClrComponent createPreviousClrComponent() {
        ClrComponent prevClrComponent = new ClrComponent();
        EquipmentComp equipmentComp = new EquipmentComp();
        equipmentComp.setPortRef(List.of(createPortRef()));
        prevClrComponent.setEquipmentComp(List.of(equipmentComp));
        return prevClrComponent;
    }

    private ClrComponent createPreviousTrail() {
        ClrComponent prevClrComponent = new ClrComponent();
        CircuitComp circuitComp = new CircuitComp();
        circuitComp.setCircuitInfo(List.of(createCircuitInfoWithNullCreatedBySys()));
        prevClrComponent.setCircuitComp(List.of(circuitComp));
        return prevClrComponent;
    }

    private ClrComponent createSegment() {
        ClrComponent prevClrComponent = new ClrComponent();
        CircuitComp circuitComp = new CircuitComp();
        circuitComp.setCircuitInfo(List.of(createCircuitInfoWithNullCreatedBySys()));
        prevClrComponent.setCircuitComp(List.of(circuitComp));
        prevClrComponent.setCableComp(List.of(createCableCompWithNullLocationZ()));
        return prevClrComponent;
    }

    private ClrComponent createCable() {
        ClrComponent prevClrComponent = new ClrComponent();
        CircuitComp circuitComp = new CircuitComp();
        circuitComp.setCircuitInfo(List.of(createCircuitInfoWithNullCreatedBySys()));
        prevClrComponent.setCircuitComp(List.of(circuitComp));
        prevClrComponent.setCableComp(List.of(createCableCompWithNotNullLocationZ()));
        return prevClrComponent;
    }

    private ClrComponent createPath() {
        ClrComponent prevClrComponent = new ClrComponent();
        CircuitComp circuitComp = new CircuitComp();
        circuitComp.setCircuitInfo(List.of(createCircuitInfoWithNullCreatedBySys()));
        prevClrComponent.setCircuitComp(List.of(circuitComp));
        prevClrComponent.setCableComp(List.of(createCableCompWithNullLocationZ()));
        return prevClrComponent;
    }

    private CircuitInfo createCircuitInfoWithNullCreatedBySys() {
        CircuitInfo circuitInfo = new CircuitInfo();
        circuitInfo.setCircuitName("circuit-1");
        circuitInfo.setType("type-1");
        circuitInfo.setStatus("status-1");
        circuitInfo.setServiceType("service-type-1");
        circuitInfo.setBw("100");
        return circuitInfo;
    }

    private CableComp createCableCompWithNullLocationZ() {
        CableComp cableComp = new CableComp();
        cableComp.setLocationA("locationA");
        return cableComp;
    }

    private CableComp createCableCompWithNotNullLocationZ() {
        CableComp cableComp = new CableComp();
        cableComp.setLocationA("locationA");
        cableComp.setLocationZ("locationZ");
        return cableComp;
    }

    private PortRef createPortRef() {
        PortRef portRef = new PortRef();
        portRef.setPortID("port1");
        return portRef;
    }
}
```