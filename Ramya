public ResponseEntity<Map<String, List<?>>> checkStatus(String url) {
    try {
        JSONObject jsonObject = new JSONObject();
        jsonObject.put("url", url);

        JSONObject transformedToLucene = transformer.transformToLucene(jsonObject);
        System.out.println("Transformed query: " + transformedToLucene.toString());

        List<SpaceCollector> spaceCollectorList = spaceCollectorLuceneRepository.findByQuery(transformedToLucene.toString());

        String collectionSuccessQuery = "{\"query\": {\"bool\": {\"must\": [{\"term\": {\"url\": \"" + url + "\"}}, {\"term\": {\"jobstatus\": \"" + JobStatus.COLLECTION_SUCCESSFUL + "\"}}]}, \"sort\": [{\"dateProcessed\": \"desc\"}]}}";
        List<CollectionAudit> collectionSuccessList = collectionAuditLuceneRepository.findByQuery(collectionSuccessQuery);

        String flinkJobSuccessQuery = "{\"query\": {\"bool\": {\"must\": [{\"term\": {\"url\": \"" + url + "\"}}, {\"term\": {\"jobstatus\": \"" + JobStatus.FLINK_JOB_SUCCESSFUL + "\"}}]}, \"sort\": [{\"dateProcessed\": \"desc\"}]}}";
        List<CollectionAudit> flinkJobSuccessList = collectionAuditLuceneRepository.findByQuery(flinkJobSuccessQuery);

        // Concatenate all lists into one
        List<Object> resultList = new ArrayList<>();
        resultList.addAll(collectionSuccessList);
        resultList.addAll(flinkJobSuccessList);
        resultList.addAll(spaceCollectorList);

        Map<String, List<?>> response = new HashMap<>();
        response.put("result", resultList);

        return new ResponseEntity<>(response, HttpStatus.OK);
    } catch (Exception e) {
        e.printStackTrace();
        return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
    }
}
