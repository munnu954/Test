import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

public class SegmentProcessorTest {

    @Test
    void testProcess_IfBranch() {
        // Setup
        SegmentProcessor segmentProcessor = SegmentProcessor.getInstance();
        List<Node> nodes = new ArrayList<>();
        List<Link> links = new ArrayList<>();
        ClrComponent clrComponent = new ClrComponent();
        List<ClrComponent> clrComponentList = new ArrayList<>();
        Map<String, List<Node>> clliNodeMap = new HashMap<>();
        AtomicInteger ukCount = new AtomicInteger();
        
        CircuitInfo circuitInfo = new CircuitInfo();
        circuitInfo.setType("NAUTILUS SEGMENT");

        ClrComponent clrComponentMock = mock(ClrComponent.class);
        when(clrComponentMock.getCircuitComp()).thenReturn(Collections.singletonList(circuitInfo));
        clrComponentList.add(clrComponentMock);

        Node node = new Node();
        String aclli = "aclli";
        clliNodeMap.put(aclli, Collections.singletonList(node));

        // Test
        segmentProcessor.process(nodes, links, clrComponent, clrComponentList, clliNodeMap, 0, ukCount);

        // Verify
        // Add your verification/assertion logic here
    }

    @Test
    void testProcess_ElseIfBranch() {
        // Setup
        SegmentProcessor segmentProcessor = SegmentProcessor.getInstance();
        List<Node> nodes = new ArrayList<>();
        List<Link> links = new ArrayList<>();
        ClrComponent clrComponent = new ClrComponent();
        List<ClrComponent> clrComponentList = new ArrayList<>();
        Map<String, List<Node>> clliNodeMap = new HashMap<>();
        AtomicInteger ukCount = new AtomicInteger();
        
        CircuitInfo circuitInfo = new CircuitInfo();
        circuitInfo.setType("Some other type");

        ClrComponent clrComponentMock = mock(ClrComponent.class);
        when(clrComponentMock.getCircuitComp()).thenReturn(Collections.singletonList(circuitInfo));
        clrComponentList.add(clrComponentMock);

        Node node = new Node();
        String zclli = "zclli";
        clliNodeMap.put(zclli, Collections.singletonList(node));

        // Test
        segmentProcessor.process(nodes, links, clrComponent, clrComponentList, clliNodeMap, 0, ukCount);

        // Verify
        // Add your verification/assertion logic here
    }
}