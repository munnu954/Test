To resolve the "UnknownContentTypeException" error and ensure that Spring can correctly convert the JSON response to `LinkAggregationResponse` objects, please follow the code changes below:

### Code Changes:

#### 1. **Update AppConfig Class**:
   
```java
@Configuration
public class AppConfig {

    @Bean
    public RestTemplate restTemplate(RestTemplateBuilder builder) {
        RestTemplate restTemplate = builder
                .setConnectTimeout(Duration.ofMillis(20000))
                .setReadTimeout(Duration.ofMillis(100000))
                .build();
        restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
        return restTemplate;
    }
}
```

#### 2. **Update LinkAggregationUtil Class** (Assuming you are using `RestTemplate` here):
   
```java
@Component
public class LinkAggregationUtil {

    private final RestTemplate restTemplate;

    @Autowired
    public LinkAggregationUtil(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    // Your method that makes the HTTP request
    public LinkAggregationResponse getLinkAggregationData(String url) {
        ResponseEntity<LinkAggregationResponse> responseEntity = restTemplate.exchange(url, HttpMethod.GET, null, LinkAggregationResponse.class);
        return responseEntity.getBody();
    }
}
```

#### 3. **Update LinkAggConfigService Class** (Wherever you are processing the response):

Ensure that the `LinkAggregationResponse` objects are correctly handled in your service classes.

#### 4. **Update LinkAggregationService Class** (If needed):

Make sure that the `LinkAggregationResponse` objects are properly utilized in the service logic.

#### 5. **Update LinkAggregationController Class**:

Similarly, update how `LinkAggregationResponse` objects are consumed in your controller methods.

### Places where the code changes were made:

1. **AppConfig**:
   - Added `MappingJackson2HttpMessageConverter` to the `RestTemplate` bean.

2. **LinkAggregationUtil**:
   - Updated to ensure proper injection of `RestTemplate` and handling of JSON responses.

3. **Other Service Classes (e.g., LinkAggConfigService, LinkAggregationService)**:
   - Ensure that `LinkAggregationResponse` objects are correctly processed and used.

4. **LinkAggregationController**:
   - Adjust the methods to handle `LinkAggregationResponse` objects appropriately.

By making these changes, Spring should be able to handle the conversion of JSON responses to `LinkAggregationResponse` objects successfully. If you encounter any issues or need further assistance, feel free to ask!