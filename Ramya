// AuditService.java

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;

@Service
public class AuditService {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    public CollectionAuditInfo getLastSuccessfulDates(String host) {
        CollectionAuditInfo auditInfo = new CollectionAuditInfo();

        try {
            String collectionQuery = "SELECT MAX(date_processed) FROM COLLECTION_AUDIT WHERE host = ? AND status = 'COLLECTION_SUCCESSFUL'";
            LocalDateTime lastCollectionDate = jdbcTemplate.queryForObject(collectionQuery, new Object[]{host}, LocalDateTime.class);
            auditInfo.setLastSuccessfulCollection(lastCollectionDate);

            String transformationQuery = "SELECT MAX(date_processed) FROM COLLECTION_AUDIT WHERE host = ? AND status = 'FLINK_JOB_SUCCESSFUL'";
            LocalDateTime lastTransformationDate = jdbcTemplate.queryForObject(transformationQuery, new Object[]{host}, LocalDateTime.class);
            auditInfo.setLastSuccessfulTransformation(lastTransformationDate);
        } catch (Exception e) {
            e.printStackTrace();
            // Handle exceptions as needed
        }

        return auditInfo;
    }
}
