Sure, I can help you with that. Here are the changes that you need to make to the code:

1. In the CollectorInitializerService.java class, you need to add a constructor that takes a CollectorApiReader and a Validator as arguments.
2. In the consume method, you need to add a call to the validator.validate(spaceCollector) method before calling the collectorApiReader.initialize(spaceCollector) method.
3. In the testInitialize_Success method, you need to change the when(collectorApiReader.initialize(spaceCollector)).thenReturn(true) line to when(collectorApiReader.initialize(spaceCollector)).thenReturn(validator.validate(spaceCollector));.

Here is the modified code:

java
public class CollectorInitializerService {

    private final CollectorApiReader collectorApiReader;
    private final Validator validator;

    @Autowired
    public CollectorInitializerService(CollectorApiReader collectorApiReader, Validator validator) {
        this.collectorApiReader = collectorApiReader;
        this.validator = validator;
    }

    @KafkaListener(topics = "${spring.kafka.producer.topic-name}", groupId = "${spring.kafka.consumer.group-id}")
    public void consume(SpaceCollector spaceCollector) {
        LOGGER.info("Received SpaceCollector data: {}", spaceCollector);
        validator.validate(spaceCollector);
        collectorApiReader.initialize(spaceCollector);
    }
}


I hope this helps








public List<String[]> retrieveTxtFile() {
List<String[]> rows = new ArrayList<>();

try (BufferedReader reader = new BufferedReader(new FileReader(sourceFilePath))) {

String line;

while ((line = reader.readLine()) != null) {

String[] row = line.split("");
rows.add(row);
LOGGER.info("TXT row: ", Arrays.toString(row));

}

LOGGER.info("Successfully read  rows from TXT file ", rows.size(), sourceFilePath); catch (IOException e) {

  LOGGER.error("Error reading TXT file ", sourceFilePath, e);
return rows;
.