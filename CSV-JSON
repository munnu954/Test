Positive Test Case for AC1:

@Test
public void testTriggerJob_SuccessfulSubmission() {
    // Arrange
    FlinkApiController flinkApiController = new FlinkApiController();
    UnifiedAuditMessage unifiedAuditMessage = new UnifiedAuditMessage();
    unifiedAuditMessage.setInputFilePath("input_file.csv");
    String fileType = ".csv";

    // Act
    String result = flinkApiController.triggerJob(unifiedAuditMessage, fileType);

    // Assert
    assertEquals("Job submitted", result);
    // Verify that the KafkaAuditProducer creates a message with job_status FLINK_JOB_SUBMITTED
    verify(kafkaAuditProducer, times(1)).createMessageAndLog(eq(unifiedAuditMessage.getInputFilePath()), eq(unifiedAuditMessage.getUrl()), eq(unifiedAuditMessage.getPort()), eq(unifiedAuditMessage.getOutputFilePath()), eq(unifiedAuditMessage.getDelimiters()), eq(fileType), anyString(), eq(unifiedAuditMessage.getNo_of_records_in_the_file()), eq(unifiedAuditMessage.getNo_of_records_processed()), eq(unifiedAuditMessage.getNo_of_records_failed()), eq(unifiedAuditMessage.getJob_id()), eq(unifiedAuditMessage.getJar_id()), eq(unifiedAuditMessage.getCollector_id()), eq(unifiedAuditMessage.getExceptions()), eq(JobStatus.FLINK_JOB_SUBMITTED.toString()));
}

Positive Test Case for AC2:

@Test
public void testTriggerJob_UnsuccessfulSubmission() {
    // Arrange
    FlinkApiController flinkApiController = new FlinkApiController();
    UnifiedAuditMessage unifiedAuditMessage = new UnifiedAuditMessage();
    unifiedAuditMessage.setInputFilePath("invalid_input_file.csv");
    String fileType = ".csv";

    // Act
    String result = flinkApiController.triggerJob(unifiedAuditMessage, fileType);

    // Assert
    assertEquals("Job is not triggered", result);
    // Verify that the KafkaAuditProducer creates a message with job_status FLINK_JOB_FAILED
    verify(kafkaAuditProducer, times(1)).createMessageAndLog(eq(unifiedAuditMessage.getInputFilePath()), eq(unifiedAuditMessage.getUrl()), eq(unifiedAuditMessage.getPort()), eq(unifiedAuditMessage.getOutputFilePath()), eq(unifiedAuditMessage.getDelimiters()), eq(fileType), anyString(), eq(unifiedAuditMessage.getNo_of_records_in_the_file()), eq(unifiedAuditMessage.getNo_of_records_processed()), eq(unifiedAuditMessage.getNo_of_records_failed()), eq(unifiedAuditMessage.getJob_id()), eq(unifiedAuditMessage.getJar_id()), eq(unifiedAuditMessage.getCollector_id()), eq(unifiedAuditMessage.getExceptions()), eq(JobStatus.FLINK_JOB_FAILED.toString()));
}