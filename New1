package com.example.spacecollector;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

class SpaceCollectorTest {

@Test
@DisplayName("Test case to check if the SpaceCollector object is created successfully with valid input values.")
void testSpaceCollectorCreation() {
SpaceCollector spaceCollector = new SpaceCollector(2, "localhost", 9092);
assertNotNull(spaceCollector);
assertEquals(2, spaceCollector.getId());
assertEquals("localhost", spaceCollector.getHost());
assertEquals(9092, spaceCollector.getPort());
}

@Test
@DisplayName("Test case to check if the ID field of the SpaceCollector object is greater than 1.")
void testSpaceCollectorIdGreaterThanOne() {
SpaceCollector spaceCollector = new SpaceCollector(2, "localhost", 9092);
assertTrue(spaceCollector.getId() > 1);
}

@Test
@DisplayName("Test case to check if the PORT field of the SpaceCollector object is a 4-digit number.")
void testSpaceCollectorPortIsFourDigitNumber() {
SpaceCollector spaceCollector = new SpaceCollector(2, "localhost", 9092);
assertTrue(spaceCollector.getPort() >= 1000 && spaceCollector.getPort() }

@Test
@DisplayName("Test case to check if the SpaceCollector object is not created with invalid input values.")
void testSpaceCollectorCreationWithInvalidInput() {
assertThrows(IllegalArgumentException.class, () -> new SpaceCollector(0, "localhost", 9092));
}

@Test
@DisplayName("Test case to check if the ID field of the SpaceCollector object is less than or equal to 1.")
void testSpaceCollectorIdLessThanOrEqualToOne() {
assertThrows(IllegalArgumentException.class, () -> new SpaceCollector(1, "localhost", 9092));
}

@Test
@DisplayName("Test case to check if the PORT field of the SpaceCollector object is not a 4-digit number.")
void testSpaceCollectorPortIsNotFourDigitNumber() {
assertThrows(IllegalArgumentException.class, () -> new SpaceCollector(2, "localhost", 10000));
}

}

package com.example.spacecollector;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

class KafkaProducerTest {

@Test
@DisplayName("Test case to check if the KafkaProducer object is created successfully and the topic name is set.")
void testKafkaProducerCreation() {
KafkaProducer kafkaProducer = new KafkaProducer("my-topic");
assertNotNull(kafkaProducer);
assertEquals("my-topic", kafkaProducer.getTopic());
}

@Test
@DisplayName("Test case to check if the sendMessage method sends the message successfully to Kafka.")
void testSendMessage() {
KafkaProducer kafkaProducer = new KafkaProducer("my-topic");
assertTrue(kafkaProducer.sendMessage("Hello World!"));
}

}