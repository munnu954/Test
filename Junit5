Here is the JUnit5 test case code for achieving 100% code coverage of the ThreadPoolController class:

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;

public class ThreadPoolControllerTest {

    @Mock
    ThreadPoolTaskExecutor deviceTP;

    @Mock
    LuceneSpaceCollectorRepository luceneSpaceCollectorRepository;

    @Mock
    KafkaProducerServiceImpl kafkaProducerService;

    @Test
    public void testGetThreadPoolExecutorStatistics() {
        // Mocking the ThreadPoolTaskExecutor to return null for getThreadPoolExecutor()
        when(deviceTP.getThreadPoolExecutor()).thenReturn(null);

        ThreadPoolController controller = new ThreadPoolController();
        controller.deviceTP = deviceTP;

        ThreadPoolResponse response = controller.getThreadPoolExecutorStatistics(null);

        assertNull(response.getHistorical_thread_count());
    }

    @Test
    public void testStopThreads() {
        // Mocking the threads to have a thread with name starting with "collection-orchestrator-id-"
        Thread mockThread = mock(Thread.class);
        when(mockThread.getName()).thenReturn("collection-orchestrator-id-1");
        Thread[] threads = { mockThread };

        when(Thread.getAllStackTraces().keySet()).thenReturn(Set.of(threads));

        ThreadPoolController controller = new ThreadPoolController();
        controller.stopThreads();

        verify(mockThread).interrupt();
    }

    @Test
    public void testTestThreads() {
        // Mocking the luceneSpaceCollectorRepository to return an empty list
        when(luceneSpaceCollectorRepository.findByQuery(anyString())).thenReturn(new ArrayList<>());

        // Mocking the threads to have a thread with name starting with "collection-orchestrator-id-"
        Thread mockThread = mock(Thread.class);
        when(mockThread.getName()).thenReturn("collection-orchestrator-id-1");
        Thread[] threads = { mockThread };

        when(Thread.getAllStackTraces().keySet()).thenReturn(Set.of(threads));

        ThreadPoolController controller = new ThreadPoolController();
        controller.luceneSpaceCollectorRepository = luceneSpaceCollectorRepository;
        controller.kafkaProducerService = kafkaProducerService;

        controller.testThreads();

        verify(kafkaProducerService, never()).writeMessage(any());
    }
}


In these test cases, we are mocking the necessary dependencies and setting up the scenarios required to cover the specified if-conditions in the getThreadPoolExecutorStatistics, stopThreads, and testThreads methods of the ThreadPoolController class. This should help achieve 100% code coverage for the class.