Here is the complete workable and executable Maven project code for the given requirement:

// TextToJsonTransformer.java
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.HashMap;
import java.util.Map;

public class TextToJsonTransformer {

    public static void main(String[] args) {
        File textFile = new File("input.txt");
        String json = transformTextToJson(textFile);
        System.out.println("Generated JSON: " + json);
        boolean isValidJson = validateJson(json);
        System.out.println("Is JSON valid? " + isValidJson);
    }

    public static String transformTextToJson(File textFile) {
        try {
            String text = new String(Files.readAllBytes(textFile.toPath()));
            String[] lines = text.split("\n");
            Map<String, String> jsonMap = new HashMap<>();
            for (int i = 0; i < lines.length; i++) {
                jsonMap.put("line" + (i + 1), lines[i]);
            }
            return mapToJson(jsonMap);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    private static String mapToJson(Map<String, String> map) {
        StringBuilder jsonBuilder = new StringBuilder("{");
        for (Map.Entry<String, String> entry : map.entrySet()) {
            jsonBuilder.append("\"").append(entry.getKey()).append("\":\"").append(entry.getValue()).append("\",");
        }
        if (map.size() > 0) {
            jsonBuilder.setLength(jsonBuilder.length() - 1); // Remove the last comma
        }
        jsonBuilder.append("}");
        return jsonBuilder.toString();
    }

    private static boolean validateJson(String json) {
        try {
            new org.json.JSONObject(json);
            return true;
        } catch (org.json.JSONException e) {
            return false;
        }
    }
}


<!-- pom.xml -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>custom-text-data-transformer</artifactId>
    <version>1.0-SNAPSHOT</version>
    <dependencies>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20210307</version>
        </dependency>
    </dependencies>
</project>


This Maven project includes the TextToJsonTransformer class and a pom.xml file with the necessary dependencies. The TextToJsonTransformer class can be used to read a text file, transform its contents into JSON, and validate the generated JSON.

To use this project, simply create a new Maven project, copy the TextToJsonTransformer class and pom.xml file into the src/main/java and root directory of the project respectively, and run the main method in TextToJsonTransformer to transform and validate a text file.