
public static class CsvtoJsonMRFCnTransformer extends RichFlatMapFunction {
    private String[] headers;
    private IntCounter successIntCounter = new IntCounter();
    private IntCounter failureIntCounter = new IntCounter();

    @Override
    public void open(Configuration parameters) throws Exception {
        getRuntimeContext().addAccumulator("successIntCounter", this.successIntCounter);
        getRuntimeContext().addAccumulator("failureIntCounter", this.failureIntCounter);
    }

    @Override
    public void flatMap(String s, Collector collector) throws Exception {
        String[] lines = s.split(System.lineSeparator());
        JSONObject jsonObject = new JSONObject();

        for (int lineIndex = 0; lineIndex < lines.length; lineIndex++) {
            String line = lines[lineIndex];
            String[] arr = line.split(",");

            if (lineIndex == 2) {
                headers = arr; // Store the header row for key names
            } else if (lineIndex > 2) {
                if (headers == null || headers.length != arr.length) {
                    this.failureIntCounter.add(1);
                    continue;
                }

                for (int j = 0; j < arr.length; j++) {
                    String jsonkey = headers[j].trim().replace("\"", "");
                    String jsonvalue = arr[j].trim().replace("\"", "");
                    jsonObject.put(jsonkey, jsonvalue);
                }
            } else {
                jsonObject.put(arr[0], arr[1]);
            }
        }
        collector.collect(jsonObject.toString());
    }
}