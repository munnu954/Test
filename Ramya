import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;
import org.apache.flink.util.Collector;

import java.io.IOException;

public class CsvToJsonConversion implements FlatMapFunction<String, String> {

    private final ObjectMapper objectMapper = new ObjectMapper();

    @Override
    public void flatMap(String input, Collector<String> collector) {
        try {
            String[] lines = input.split("\n");

            if (lines.length >= 6) {
                String[] headers = lines[0].split(",");
                ObjectNode jsonObject = objectMapper.createObjectNode();

                for (int i = 1; i < lines.length; i++) {
                    String[] values = lines[i].split(",");
                    ObjectNode innerObject = objectMapper.createObjectNode();

                    for (int j = 0; j < Math.min(headers.length, values.length); j++) {
                        String header = headers[j].replace("\"", "").trim();
                        String value = values[j].replace("\"", "").trim();

                        if (!header.isEmpty() && !value.isEmpty()) {
                            innerObject.put(header, value);
                        }
                    }

                    if (!innerObject.isEmpty()) {
                        jsonObject.set("Row" + i, innerObject);
                    }
                }

                if (!jsonObject.isEmpty()) {
                    collector.collect(jsonObject.toString());
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
