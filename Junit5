Here is an example of JUnit5 test cases code to cover the conditional statement branches of the `processAlarmThread()` method in the `PostingService` class for 100% code coverage:

```java
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.Spy;

public class PostingServiceTest {
    
    @Spy
    private PostingService postingService;
    
    @Mock
    private DistributionSummary summary;
    
    @Mock
    private AlarmReceiver alarmReceiver;
    
    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
        postingService = new PostingService();
        postingService.summary = summary;
        postingService.alarmReceiver = alarmReceiver;
    }
    
    @Test
    public void testProcessAlarmThreadWithMessageIdNotNull() {
        Message<byte[]> msg = new Message<>();
        MessageId messageId = mock(MessageId.class);
        when(msg.getMessageId()).thenReturn(messageId);
        when(postingService.alarmReceivedTimeValues.containsKey(messageId)).thenReturn(true);
        
        postingService.processAlarmThread();
        
        verify(postingService.summary).record(anyLong());
        verify(postingService.alarmReceivedTimeValues).remove(messageId);
        verify(postingService).jsonAttributeFilter(anyString());
    }
    
    @Test
    public void testProcessAlarmThreadWithMessageIdNull() {
        Message<byte[]> msg = new Message<>();
        when(msg.getMessageId()).thenReturn(null);
        
        postingService.processAlarmThread();
        
        verify(postingService.alarmReceiver, never()).acknowledgeMessage(msg);
        assertEquals("Invalid MessageId", postingService.LOG.getLastLog());
    }
    
}
```

In the test cases above, we are mocking the necessary dependencies and testing the `processAlarmThread()` method in the `PostingService` class for both branches of the conditional statement. Make sure to adjust the test cases according to your actual implementation and add more test cases as needed to achieve 100% code coverage.