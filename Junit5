@Test
public void testGetAEnd_NullResponseEmptyCircuitId() {
  CircuitDetailsProvider provider = new CircuitDetailsProvider();
  String circuitId = "";
  AEnd aEnd = provider.getAEnd(circuitId, null, null);
  assertNull(aEnd, "AEnd should be null for null response and empty circuitId");
}



@Test
public void testGetAEnd_NullResponseNonEmptyCircuitId() {
  CircuitDetailsProvider provider = new CircuitDetailsProvider();
  String circuitId = "1234";
  // Mock restClientUtil to return null for getCircuitDetails
  Mockito.when(provider.restClientUtil.callEndpoint(Mockito.anyString(), Mockito.any(), Mockito.any())).thenReturn(null);
  AEnd aEnd = provider.getAEnd(circuitId, null, null);
  assertNull(aEnd, "AEnd should be null for null response from getCircuitDetails");
}



@Test
public void testGetAEnd_EmptyCircuitData() {
  CircuitDetailsProvider provider = new CircuitDetailsProvider();
  String circuitId = "1234";
  CircuitDetailResponse response = new CircuitDetailResponse();
  response.setCircuitData(new CircuitData());
  AEnd aEnd = provider.getAEnd(circuitId, null, response);
  assertNull(aEnd, "AEnd should be null for empty circuit data");
}



@Test
public void testGetAEnd_EmptyCircuitList() {
  CircuitDetailsProvider provider = new CircuitDetailsProvider();
  String circuitId = "1234";
  CircuitDetailResponse response = new CircuitDetailResponse();
  CircuitData circuitData = new CircuitData();
  circuitData.setCircuitLst(new ArrayList<>());
  response.setCircuitData(circuitData);
  AEnd aEnd = provider.getAEnd(circuitId, null, response);
  assertNull(aEnd, "AEnd should be null for empty circuit list");
}



@Test
public void testGetAEnd_EmptyCircuit() {
  CircuitDetailsProvider provider = new CircuitDetailsProvider();
  String circuitId = "1234";
  CircuitDetailResponse response = new CircuitDetailsResponse();
  CircuitData circuitData = new CircuitData();
  List<CircuitLst> circuitLst = new ArrayList<>();
  CircuitLst circuitLstObj = new CircuitLst();
  circuitLstObj.setCircuit(new ArrayList<>());
  circuitLst.add(circuitLstObj);
  circuitData.setCircuitLst(circuitLst);
  response.setCircuitData(circuitData);
  AEnd aEnd = provider.getAEnd(circuitId, null, response);
  assertNull(aEnd, "AEnd should be null for empty circuit");
}


@Test
public void testGetAEnd_NullAEndList() {
  CircuitDetailsProvider provider = new CircuitDetailsProvider();
  String circuitId = "1234";
  CircuitDetailResponse response = new CircuitDetailsResponse();
  CircuitData circuitData = new CircuitData();
  List<CircuitLst> circuitLst = new ArrayList<>();
  CircuitLst circuitLstObj = new CircuitLst();
  Circuit circuit = new Circuit();
  circuit.setAEnd(null);
  circuitLstObj.setCircuit(Collections.singletonList(circuit));
  circuitLst.add(circuitLstObj);
  circuitData.setCircuitLst(circuitLst);
  response.setCircuitData(circuitData);
  AEnd aEnd = provider.getAEnd(circuitId, null, response);
  assertNull(aEnd, "AEnd should be null for null AEnd list in circuit");
}
