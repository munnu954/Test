import static org.mockito.Mockito.*;
import static org.junit.Assert.*;

import org.junit.Test;
import java.util.List;


public class FlinkJobTest {

    @Test
    public void testGetFlinkJobDetails() {
        FlinkRepository flinkRepository = mock(FlinkRepository.class);
        when(flinkRepository.findByQuery(anyString())).thenReturn(new ArrayList<FlinkJob>());

        FlinkJobService flinkJobService = new FlinkJobService(flinkRepository);

        String fileType = "csv";
        boolean enabled = true;
        String sortField = "name";
        String sortOrder = "asc";

        FlinkJob result = flinkJobService.getFlinkJobDetails(fileType, enabled, sortField, sortOrder);

        assertNull(result);
    }

    @Test
    public void testGetFlinkJobDetailsWithData() {
        FlinkRepository flinkRepository = mock(FlinkRepository.class);
        List<FlinkJob> flinkJobList = new ArrayList<>();
        flinkJobList.add(new FlinkJob());
        when(flinkRepository.findByQuery(anyString())).thenReturn(flinkJobList);

        FlinkJobService flinkJobService = new FlinkJobService(flinkRepository);

        String fileType = "csv";
        boolean enabled = true;
        String sortField = "name";
        String sortOrder = "asc";

        FlinkJob result = flinkJobService.getFlinkJobDetails(fileType, enabled, sortField, sortOrder);

        assertNotNull(result);
    }

    @Test
    public void testCount() {
        FlinkRepository flinkRepository = mock(FlinkRepository.class);
        List<FlinkJob> flinkJobList = new ArrayList<>();
        flinkJobList.add(new FlinkJob());
        when(flinkRepository.findAll()).thenReturn(flinkJobList);

        FlinkJobService flinkJobService = new FlinkJobService(flinkRepository);

        long count = flinkJobService.count();

        assertEquals(1, count);
    }
}