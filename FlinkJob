import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;

public class LuceneSpaceCollectorRepositoryTest {

    private LuceneSpaceCollectorRepository luceneSpaceCollectorRepository = mock(LuceneSpaceCollectorRepository.class);

    @Test
    public void testUpdateClusterStateToConnecting() {
        String id = "123";
        int expectedUpdateCount = 1;
        
        when(luceneSpaceCollectorRepository.updateByQuery(anyString())).thenReturn(expectedUpdateCount);
        
        int actualUpdateCount = luceneSpaceCollectorRepository.updateClusterStateToConnecting(id);
        
        assertEquals(expectedUpdateCount, actualUpdateCount);
    }

    @Test
    public void testFindTerminatedDevices() {
        String nTimeAgo = "2022-01-01";
        List<SpaceCollector> expectedDevices = new ArrayList<>();
        
        when(luceneSpaceCollectorRepository.findByQuery(anyString())).thenReturn(expectedDevices);
        
        List<SpaceCollector> actualDevices = luceneSpaceCollectorRepository.findTerminatedDevices(nTimeAgo);
        
        assertEquals(expectedDevices, actualDevices);
    }

    @Test
    public void testFindAllByEnabledAndNotRunning() {
        List<SpaceCollector> expectedDevices = new ArrayList<>();
        
        when(luceneSpaceCollectorRepository.findByQuery(anyString())).thenReturn(expectedDevices);
        
        List<SpaceCollector> actualDevices = luceneSpaceCollectorRepository.findAllByEnabledAndNotRunning();
        
        assertEquals(expectedDevices, actualDevices);
    }
}