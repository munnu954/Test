issue.

```java
@Test
void testApplyPostingRule() throws Exception {
    // Setup
    Alarm alarm = new Alarm();
    alarm.setAlarmIdentity("TestAlarm");
    
    PostingRule rule = new PostingRule();
    rule.setRuleId("TestRule");
    rule.setRuleTraversalExpression("TestExpression");
    
    HashMap<String, Object> alarmMap = new HashMap<>();
    
    ResponseEntity<String> responseEntity = new ResponseEntity<>("TestTopologyData", HttpStatus.OK);
    
    JsonNode jsonNode = new ObjectMapper().readTree("{\"topologyObjects\": [{\"MO_Type\": \"TestType\", \"INMS_Attributes\": {\"TagSequence\": \"TestTag\", \"Name\": \"TestName\"}}]}");
    when(topoApiClient.fetchTopologyTraversalDetails(eq(alarm), eq(rule), anyString())).thenReturn(responseEntity);
    when(AlarmPostingConstants.getObjectMapper().readTree("TestTopologyData")).thenReturn(jsonNode);
    
    // Run the method
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);
    
    // Verify the result
    assertNotNull(result);
    assertEquals("TestAlarm", result.getAlarmIdentity());
    assertEquals("{\"topologyObjects\": [{\"MO_Type\": \"TestType\", \"INMS_Attributes\": {\"TagSequence\": \"TestTag\", \"Name\": \"TestName\"}}]}", result.getTopologyDetails());
}

@Test
void testApplyPostingRule_NoTopologyObjectsNode() throws Exception {
    // Setup
    Alarm alarm = new Alarm();
    alarm.setAlarmIdentity("TestAlarm");
    
    PostingRule rule = new PostingRule();
    rule.setRuleId("TestRule");
    rule.setRuleTraversalExpression("TestExpression");
    
    HashMap<String, Object> alarmMap = new HashMap<>();
    
    ResponseEntity<String> responseEntity = new ResponseEntity<>("TestTopologyData", HttpStatus.OK);
    
    JsonNode jsonNode = new ObjectMapper().readTree("{}");
    when(topoApiClient.fetchTopologyTraversalDetails(eq(alarm), eq(rule), anyString())).thenReturn(responseEntity);
    when(AlarmPostingConstants.getObjectMapper().readTree("TestTopologyData")).thenReturn(jsonNode);
    
    // Run the method
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);
    
    // Verify the result
    assertNotNull(result);
    assertEquals("TestAlarm", result.getAlarmIdentity());
    assertNull(result.getTopologyDetails());
}

@Test
void testApplyPostingRule_Exception() {
    // Setup
    Alarm alarm = new Alarm();
    alarm.setAlarmIdentity("TestAlarm");
    
    PostingRule rule = new PostingRule();
    rule.setRuleId("TestRule");
    rule.setRuleTraversalExpression("TestExpression");
    
    HashMap<String, Object> alarmMap = new HashMap<>();
    
    when(topoApiClient.fetchTopologyTraversalDetails(eq(alarm), eq(rule), anyString())).thenThrow(new RuntimeException("Test Exception"));
    
    // Run the method
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);
    
    // Verify the result
    assertNotNull(result);
    assertEquals("TestAlarm", result.getAlarmIdentity());
    assertNull(result.getTopologyDetails());
}
```

In the updated code, I added `new ObjectMapper().` before `readTree()` method to ensure that the correct `ObjectMapper` is used to parse the JSON. This should resolve the `JsonParseException` issue.