Additional JUnit5 Test Cases for UserInsightsValidator
1. Null ServiceHeader:
@Test
void validate_NullServiceHeader_ThrowsException() throws Exception {
    UserInsightsRequest request = new UserInsightsRequest();
    request.setServiceHeader(null);

    assertThrows(InvalidRequestException.class, () -> invokeValidate(request));
}

2. Empty ServiceHeader Fields:
@Test
void validate_EmptyServiceHeaderFields_ThrowsException() throws Exception {
    UserInsightsRequest request = new UserInsightsRequest();
    request.setServiceHeader(new ServiceHeader());

    assertThrows(InvalidRequestException.class, () -> invokeValidate(request));
}

3. Maximum Array Lengths:
@Test
void validate_MaximumListKeyAttributesLength_ThrowsException() throws Exception {
    UserInsightsRequest request = new UserInsightsRequest();
    UserInsightsAttributes[] listKeyAttributes = new UserInsightsAttributes[501];
    request.setListKeyAttributes(listKeyAttributes);

    assertThrows(InvalidRequestException.class, () -> invokeValidate(request));
}

@Test
void validate_MaximumInsightCategoryLength_ThrowsException() throws Exception {
    UserInsightsSearchRequest searchRequest = new UserInsightsSearchRequest();
    searchRequest.getServiceRequest().setInsightCategory(new String[51]);

    assertThrows(InvalidRequestException.class, () -> invokeValidateSearchRequest(searchRequest));
}

// ... similar test for maximumInsightNameLength

4. Edge Cases for KeyAttributes and ListKeyAttributes:
@Test
void validate_KeyAttributesAndListKeyAttributes_ThrowsException() throws Exception {
    UserInsightsRequest request = new UserInsightsRequest();
    request.setKeyAttributes(new UserInsightsAttributes());
    request.setListKeyAttributes(new UserInsightsAttributes[] {new UserInsightsAttributes()});

    assertThrows(InvalidRequestException.class, () -> invokeValidate(request));
}

5. Edge Cases for UserInsightsSearchRequest:
@Test
void validateSearchRequest_NullServiceRequest_ThrowsException() throws Exception {
    UserInsightsSearchRequest request = new UserInsightsSearchRequest();
    request.setServiceRequest(null);

    assertThrows(InvalidRequestException.class, () -> invokeValidateSearchRequest(request));
}

// ... other edge cases for UserInsightsSearchRequest fields

6. Additional Edge Cases:
 * Empty strings for required fields in UserInsightsAttributes and UserInsightsSearchParam.
 * Invalid values for InsightsRequestType.
 * Null values for keyAttributes and listKeyAttributes.
Helper Method:
private void invokeValidate(UserInsightsRequest request) throws Exception {
    Class<?> validatorClass = UserInsightsValidator.class;
    Method validateMethod = validatorClass.getDeclaredMethod("validate", UserInsightsRequest.class);
    validateMethod.setAccessible(true);
    validateMethod.invoke(null, request);
}

private void invokeValidateSearchRequest(UserInsightsSearchRequest request) throws Exception {
    Class<?> validatorClass = UserInsightsValidator.class;
    Method validateMethod = validatorClass.getDeclaredMethod("validate", UserInsightsSearchRequest.class);
    validateMethod.setAccessible(true);
    validateMethod.invoke(null, request);
}

These test cases cover a wide range of edge cases and should help achieve 100% code coverage for the UserInsightsValidator class.
