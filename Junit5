Here's a refactoring of the `IVAPPDeviceUtil` class, replacing the `JsonNode` parameter in the `convertv3format` method with a `UTSEquipmentList` parameter, while keeping the existing functionality intact:

```java
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

@Component
public class IVAPPDeviceUtil {

    private static final Logger LOGGER = LoggerFactory.getLogger(IVAPPDeviceService.class);

    public HttpHeaders getHttpHeaders() {
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);
        headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
        return headers;
    }

    public String findServiceByName(String name) {
        return name.contains("http") ? name.toLowerCase() : "http://" + name.toLowerCase();
    }

    public UTSEquipmentList convertv3format(UTSEquipmentList deviceResponse) throws NoDataFoundException {
        if (deviceResponse == null || deviceResponse.getEquipmentLst() == null) {
            throw new NoDataFoundException("No Data Found");
        }

        UTSEquipmentList utsEquipmentList = new UTSEquipmentList();
        EquipmentContainer equipmentContainer = new EquipmentContainer();
        EquipmentLst equipmentLst = new EquipmentLst();

        List<EquipmentContainer> equipmentContainerList = new ArrayList<>();
        EquipmentLst deviceLst = deviceResponse.getEquipmentLst();

        if (deviceLst != null && deviceLst.getEquipmentContainer() != null) {
            deviceLst.getEquipmentContainer().forEach(device -> {
                try {
                    Location locationNode = device.getLocation();
                    VirtualNE neNode = device.getVirtualNE();

                    Location location = new Location();
                    location.setLocationClli(locationNode.getLocationClli());
                    location.setSiteName(locationNode.getSiteName());
                    location.setLocationCode(locationNode.getLocationCode());
                    location.setState(locationNode.getState());

                    VirtualNE virtualNE = new VirtualNE();
                    virtualNE.setName(neNode.getName());
                    virtualNE.setStatus(neNode.getStatus());
                    virtualNE.setType(neNode.getType());
                    virtualNE.setVendor(neNode.getVendor());
                    virtualNE.setModel(neNode.getModel());
                    virtualNE.setTid(neNode.getTid());
                    virtualNE.setCreatedBySys(neNode.getCreatedBySys());

                    equipmentContainer.setLocation(location);
                    equipmentContainer.setVirtualNE(virtualNE);
                    equipmentContainerList.add(equipmentContainer);
                } catch (Exception e) {
                    LOGGER.error("Exception Occurred in convertDeviceResponseToUTS:", e);
                }
            });

            equipmentLst.setEquipmentContainer(equipmentContainerList);
            utsEquipmentList.setEquipmentLst(equipmentLst);
        }

        return utsEquipmentList;
    }
}
```

### Key Changes:
- The method `convertv3format` now takes a `UTSEquipmentList` as its input parameter instead of a `JsonNode`.
- The logic for iterating and transforming the data structure remains similar, but it's now adapted to work directly with the `UTSEquipmentList` and its associated classes (`EquipmentLst`, `EquipmentContainer`, `Location`, `VirtualNE`).
- Exception handling and the logging behavior remain unchanged to preserve existing functionality.