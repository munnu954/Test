@RunWith(MockitoJUnitRunner.class)
public class PostingRuleProcessingServiceTest {

    @Spy
    @InjectMocks
    private PostingRuleProcessingService postingRuleProcessingService;

    @Mock
    private RuleLoadingService ruleLoadingService;

    @Mock
    private TopologyApiClient topoApiClient;

    @Mock
    private AlarmPostingUtils utils;

    @Test
    public void testApplyPostingRuleBranch1() {
        Alarm alarm = new Alarm();
        PostingRule rule = new PostingRule();
        HashMap<String, Object> alarmMap = new HashMap<>();

        when(ruleLoadingService.getRuleMap()).thenReturn(Collections.singletonMap("testRule", rule));
        when(rule.matchFilter(any(HashMap.class))).thenReturn(true);
        when(topoApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), anyString())).thenReturn(ResponseEntity.ok("{}"));

        Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);

        assertNotNull(result);
    }

    @Test
    public void testApplyPostingRuleBranch2() {
        Alarm alarm = new Alarm();
        PostingRule rule = new PostingRule();
        HashMap<String, Object> alarmMap = new HashMap<>();

        when(ruleLoadingService.getRuleMap()).thenReturn(Collections.singletonMap("testRule", rule));
        when(rule.matchFilter(any(HashMap.class))).thenReturn(false);

        Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);

        assertNotNull(result);
        assertNull(result.getTopologyDetails());
    }

    // Add more test methods to cover other branches of the applyPostingRule method
}