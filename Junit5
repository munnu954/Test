The error you are encountering, "UnknownContentTypeException," indicates that Spring cannot find an appropriate `HttpMessageConverter` to handle the response type `LinkAggregationResponse` with the content type `application/json`. This issue typically happens when the Jackson library is not properly configured or when there is a mismatch in the expected response and the content type.

Here's how you can resolve the issue and reframe the necessary classes:

**1. Ensure Jackson Dependency:**
Firstly, ensure that you have the Jackson library included in your project's `pom.xml` (for Maven) or `build.gradle` (for Gradle). Jackson is the default JSON library used by Spring Boot.

Maven:
```xml
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
</dependency>
```

Gradle:
```groovy
implementation 'com.fasterxml.jackson.core:jackson-databind'
```

**2. Update LinkAggregationController:**
No changes are required here if the request and response objects are properly annotated with Jackson annotations (e.g., `@JsonProperty`).

**3. Update LinkAggregationService:**
Ensure that the `LinkAggregationResponse` class is properly annotated for JSON serialization/deserialization.

**4. Update LinkAggConfigService:**
No changes needed unless `LinkAggregationResponse` is being affected by configuration.

**5. Update LinkAggregationUtil:**
Make sure that the `LinkAggregationResponse` class is properly annotated for JSON serialization/deserialization.

**6. Update AppConfig:**
Ensure that the `RestTemplate` is properly configured to handle JSON. You can explicitly add a `MappingJackson2HttpMessageConverter` to your `RestTemplate`.

Here's how you can modify the `AppConfig` class:

```java
@Configuration
public class AppConfig {

    Map<String, String> configData = new HashMap<>();

    @Value("${com.tcoms.linkaggregation.service.name}")
    String tcomsLinkAggregationServiceName;

    @Value("${com.tcoms.linkaggregation.service.url}")
    String tcomsLinkAggregationServiceNameUrl;

    @Bean("configMap")
    public Map<String, String> getConfigData() {
        configData.put("tcomsLinkAggregationServiceName", tcomsLinkAggregationServiceName);
        configData.put("tcomsLinkAggregationServiceNameUrl", tcomsLinkAggregationServiceNameUrl);
        return configData;
    }

    @Bean
    public RestTemplate restTemplate(RestTemplateBuilder builder) {
        RestTemplate restTemplate = builder
                .setConnectTimeout(Duration.ofMillis(20000))
                .setReadTimeout(Duration.ofMillis(100000))
                .build();
        restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
        return restTemplate;
    }
}
```

**7. Update the LinkAggregationResponse Class:**
Ensure that your `LinkAggregationResponse` class is annotated with Jackson annotations to facilitate serialization/deserialization.

Example annotations:
```java
import com.fasterxml.jackson.annotation.JsonProperty;

public class LinkAggregationResponse {
    @JsonProperty("field_name")
    private String fieldName;

    // getters and setters
}
```

By ensuring that the Jackson library is correctly configured and that your response classes are annotated properly, you should be able to resolve the `UnknownContentTypeException`.