To copy an existing CSV file from one location to another in a SpringBoot application, we can use the following code:

1. Create an application.yml file in the src/main/resources folder and add the following properties:

file:
  source: /path/to/source/file.csv
  destination: /path/to/destination/folder/


2. Create a class called FileCopyService:

@Service
public class FileCopyService {
    
    @Value("${file.source}")
    private String sourceFilePath;
    
    @Value("${file.destination}")
    private String destinationFolderPath;
    
    public void copyFile() throws IOException {
        Path sourcePath = Paths.get(sourceFilePath);
        Path destinationPath = Paths.get(destinationFolderPath, sourcePath.getFileName().toString());
        Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING);
    }
}


3. In the main application class, inject the FileCopyService bean and call the copyFile() method:

@SpringBootApplication
public class Application implements CommandLineRunner {

    @Autowired
    private FileCopyService fileCopyService;

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

    @Override
    public void run(String... args) throws Exception {
        fileCopyService.copyFile();
    }
}


This code will read the file path properties from the application.yml file and copy the CSV file from the source location to the destination folder. The file name will remain the same.