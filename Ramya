import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] lines = input.split(System.lineSeparator());

        for (int i = 1; i < lines.length; i++) {
            String[] arr = lines[i].split(",");

            if (arr.length > 2 && !arr[2].isEmpty()) {
                // This is the line containing ObjectName
                String objectName = arr[2].trim();
                JsonObject result = new JsonObject();
                JsonObject objectDetails = new JsonObject();

                // Extract details from the lines below ObjectName
                if (i + 3 < lines.length) {
                    objectDetails.put("Begin Date", lines[i + 1].split(",")[1].trim());
                    objectDetails.put("End Date", lines[i + 2].split(",")[1].trim());
                    objectDetails.put("Ticket Number", lines[i + 3].split(",")[1].trim());
                }

                // Continue processing the sections inside the loop
                for (int j = i + 4; j < lines.length; j++) {
                    String[] sectionArr = lines[j].split(",");
                    if (sectionArr.length > 0 && !sectionArr[0].isEmpty() && !sectionArr[0].equals("TICKET NUMBER")) {
                        // This is a line containing SectionName, skip rows with "TICKET NUMBER"
                        String sectionName = sectionArr[0].trim();
                        JsonObject sectionObject = new JsonObject();

                        // Extract details for the section
                        if (sectionArr.length > 3) {
                            sectionObject.put("Min", sectionArr[3].trim());
                            sectionObject.put("Average", sectionArr[4].trim());
                            sectionObject.put("Max", sectionArr[5].trim());
                            sectionObject.put("Cumulative Counter Value", sectionArr[6].trim());
                        }

                        // Add section to objectDetails
                        objectDetails.put(sectionName, sectionObject);
                    }
                }

                // Add the final JSON structure to result
                result.put("ObjectName", objectName);
                result.putAll(objectDetails);

                collector.collect(result.toString());
            }
        }
    }
}
