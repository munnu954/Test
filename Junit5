To write JUnit 5 test cases for the specific conditional branch you provided in the `PortProcessor` class, you need to ensure that you're testing all scenarios where the condition `(prevEqtObject.getShelfID() == null)` is true or false. Here's how you can create test cases to cover these scenarios:

```java
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

public class PortProcessorTest {

    private PortProcessor portProcessor;
    private List<Node> nodes;
    private List<Link> links;
    private ClrComponent clrComponent;
    private List<ClrComponent> clrComponentList;
    private AtomicInteger ukCount;
    private String sourceSys;

    @BeforeEach
    public void setUp() {
        portProcessor = PortProcessor.getInstance();

        nodes = new ArrayList<>();
        links = new ArrayList<>();
        clrComponent = new ClrComponent();
        clrComponentList = new ArrayList<>();
        ukCount = new AtomicInteger(0);
        sourceSys = "TestSource";
    }

    @Test
    public void testProcess_prevEqtObjectShelfIDNull() {
        // Setup
        PortRef prevPortRef = new PortRef();
        prevPortRef.setShelfID(null); // Setting ShelfID to null

        EquipmentComp prevEquipmentComp = new EquipmentComp();
        prevEquipmentComp.getPortRef().add(prevPortRef);

        ClrComponent prevClrComponent = new ClrComponent();
        prevClrComponent.setType("PORT");
        prevClrComponent.getEquipmentComp().add(prevEquipmentComp);

        clrComponentList.add(prevClrComponent);

        PortRef eqtObject = new PortRef();
        eqtObject.setPortID("testPortID");

        EquipmentComp equipmentComp = new EquipmentComp();
        equipmentComp.getPortRef().add(eqtObject);

        clrComponent.setType("PORT");
        clrComponent.getEquipmentComp().add(equipmentComp);

        // Add node to simulate getting a node with PortID
        Node node = new Node();
        node.setPortId("testPortID");
        nodes.add(node);

        // Execute
        portProcessor.process(nodes, links, clrComponent, clrComponentList, null, 1, ukCount, sourceSys);

        // Verify
        assertEquals(1, links.size(), "Link should be added when ShelfID is null");
        assertEquals("testPortID", links.get(0).getSource(), "The source should match the PortID of the node");
    }

    @Test
    public void testProcess_prevEqtObjectShelfIDNotNull() {
        // Setup
        PortRef prevPortRef = new PortRef();
        prevPortRef.setShelfID("testShelfID");

        EquipmentComp prevEquipmentComp = new EquipmentComp();
        prevEquipmentComp.getPortRef().add(prevPortRef);

        ClrComponent prevClrComponent = new ClrComponent();
        prevClrComponent.setType("PORT");
        prevClrComponent.getEquipmentComp().add(prevEquipmentComp);

        clrComponentList.add(prevClrComponent);

        PortRef eqtObject = new PortRef();
        eqtObject.setPortID("testPortID");

        EquipmentComp equipmentComp = new EquipmentComp();
        equipmentComp.getPortRef().add(eqtObject);

        clrComponent.setType("PORT");
        clrComponent.getEquipmentComp().add(equipmentComp);

        // Add node to simulate getting a node with ShelfID
        Node node = new Node();
        node.setShelfId("testShelfID");
        nodes.add(node);

        // Execute
        portProcessor.process(nodes, links, clrComponent, clrComponentList, null, 1, ukCount, sourceSys);

        // Verify
        assertEquals(1, links.size(), "Link should be added when ShelfID is not null");
        assertEquals("testPortID", links.get(0).getSource(), "The source should match the PortID of the node");
    }
}
```

### Explanation

1. **Test Setup:** 
   - Initialize necessary objects like `nodes`, `links`, `clrComponent`, etc.
   - Use `@BeforeEach` to set up a clean state before each test.

2. **Test Cases:**
   - **`testProcess_prevEqtObjectShelfIDNull()`:** Tests the condition where `prevEqtObject.getShelfID()` is `null`.
     - Verifies that a `Link` is created with the appropriate source.
   
   - **`testProcess_prevEqtObjectShelfIDNotNull()`:** Tests the condition where `prevEqtObject.getShelfID()` is not `null`.
     - Ensures the link creation logic correctly identifies the source.

3. **Assertions:** 
   - Verify the size of the `links` list to ensure a `Link` was added.
   - Check the `source` of the `Link` to verify it matches the expected `PortID`.

These test cases should cover the specific conditional branch of code you asked about, ensuring 100% coverage for that part of the method. Adjust the test data as needed to fit your actual data and use cases.