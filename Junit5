import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.HashMap;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class MessageReaderServiceTest {

    @Mock
    VMBParams vmbParams;

    @Mock
    ApolloServiceHealth apolloServiceHealth;

    @Mock
    RuleLoadingService ruleLoadingService;

    @InjectMocks
    MessageReaderService messageReaderService;

    @Test
    public void testInitializeMessageReaderService() {
        // Test the initialization of MessageReaderService
        messageReaderService.intialializeMessageReaderService();
    }

    @Test
    public void testProcessMessageFromRuleNotifierVMB() {
        // Test processMessageFromRuleNotifierVMB method
        messageReaderService.processMessageFromRuleNotifierVMB();
    }

    @Test
    public void testRemoveOrLoadRule() throws Exception {
        HashMap<String, Object> ruleUpdateMap = new HashMap<>();
        ruleUpdateMap.put(AlarmPostingConstants.RULEID, 1L);
        ruleUpdateMap.put(AlarmPostingConstants.OPERATION, AlarmPostingConstants.DELETE);

        Method method = MessageReaderService.class.getDeclaredMethod("removeOrloadRule", HashMap.class);
        method.setAccessible(true);
        method.invoke(messageReaderService, ruleUpdateMap);

        verify(ruleLoadingService, times(1)).removeRule(1L);
    }

    @Test
    public void testRetryReaderConnection() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        Method method = MessageReaderService.class.getDeclaredMethod("retryReaderConnection");
        method.setAccessible(true);
        method.invoke(messageReaderService);

        verify(messageReaderService, times(1)).closeReader();
    }

  @Test
    public void testCloseReader() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        MessageReaderService spy = spy(messageReaderService);
        doNothing().when(spy).closeReader();

        Method method = MessageReaderService.class.getDeclaredMethod("closeReader");
        method.setAccessible(true);
        method.invoke(spy);

        verify(spy, times(1)).closeReader();
    }
}