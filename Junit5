import static org.junit.Assert.*;

import org.apache.flink.api.java.DataSet;
import org.apache.flink.api.java.ExecutionEnvironment;
import org.apache.flink.api.java.tuple.Tuple;
import org.apache.flink.api.java.tuple.Tuple2;
import org.apache.flink.core.fs.FileSystem;
import org.apache.flink.core.fs.Path;
import org.apache.flink.test.util.AbstractTestBase;
import org.junit.Before;
import org.junit.Test;

public class CsvToJsonConversionTest extends AbstractTestBase {
	private ExecutionEnvironment env;

	@Before
	public void setUp() throws Exception {
		env = ExecutionEnvironment.getExecutionEnvironment();
	}

	@Test
	public void testCsvToJsonConversion_Success() throws Exception {
		// Arrange
		String csvContent = "SystemId:SOLKTXE1100.101\nNodeIP:,2607:f160:8a03:a03a:c0:10f::,2607:f160:8a03:a03a:c0:10f:0:1,2607:f160:8a03:a03a:c0:10f:0:2,2607:f160:8a03:a03a:c0:10f:0:3\nHeader1,Header2,Header3,Header4\nValue1,Value2,Value3,Value4";
		
		DataSet<String> csvDataSet = env.fromElements(csvContent);
		DataSet<String> jsonDataSet = csvDataSet.flatMap(new CsvtoJsonConversion.CsvToJsonMRFCnTransformer("test.csv"));
		
		// Act
		String jsonResult = jsonDataSet.collect().get(0);
		
		// Assert
		String expectedResult = "{\"#SystemId\":\"SOLKTXE1100.101\",\"#NodeIP\":\"\",\"FILENAME\":\"test.csv\",\"Header1\":\"Value1\",\"Header2\":\"Value2\",\"Header3\":\"Value3\",\"Header4\":\"Value4\"}";
		assertEquals(expectedResult, jsonResult);
	}

	@Test
	public void testCsvToJsonConversion_InvalidHeaders_FailureCounterIncrements() throws Exception {
		// Arrange
		String csvContent = "SystemId:SOLKTXE1100.101\nNodeIP:,2607:f160:8a03:a03a:c0:10f::\nHeader1,Header2,Header3,Header4\nValue1,Value2,Value3"; // Missing a value
		
		DataSet<String> csvDataSet = env.fromElements(csvContent);
		DataSet<String> jsonDataSet = csvDataSet.flatMap(new CsvtoJsonConversion.CsvToJsonMRFCnTransformer("test.csv"));
		
		// Act
		String jsonResult = jsonDataSet.collect().get(0);

		// Assert
		String expectedResult = "{\"#SystemId\":\"SOLKTXE1100.101\",\"#NodeIP\":\"\"}";
		assertEquals(expectedResult, jsonResult);
		assertEquals(1, env.getLastJobExecutionResult().getAccumulatorResult("failureIntCounter"));
	}
}