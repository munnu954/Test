import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;
import org.json.JSONObject;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] lines = input.split(System.lineSeparator());

        if (lines.length < 5) {
            // Not enough lines for a valid entry
            return;
        }

        String objectName = lines[1].split(",")[1].trim();
        String beginDate = lines[2].split(",")[1].trim();
        String endDate = lines[3].split(",")[1].trim();
        String ticketNumber = lines[4].split(",")[1].trim();

        JSONObject result = new JSONObject();
        JSONObject objectDetails = new JSONObject();

        result.put("ObjectName", objectName);
        objectDetails.put("Begin Date", beginDate);
        objectDetails.put("End Date", endDate);
        objectDetails.put("Ticket Number", ticketNumber);

        // Continue processing the sections inside the loop
        boolean skipNextLine = false;
        for (int j = 5; j < lines.length; j++) {
            if (skipNextLine) {
                skipNextLine = false;
                continue;
            }

            String[] sectionArr = lines[j].split(",");
            if (sectionArr.length > 0 && !sectionArr[0].isEmpty() && !sectionArr[0].equals("TICKET NUMBER")) {
                // This is a line containing SectionName, skip rows with "TICKET NUMBER"
                String sectionName = sectionArr[0].trim();
                JSONObject sectionObject = new JSONObject();

                // Extract details for the section
                if (sectionArr.length > 3) {
                    sectionObject.put("Min", sectionArr[3].trim());
                    sectionObject.put("Average", sectionArr[4].trim());
                    sectionObject.put("Max", sectionArr[5].trim());
                    sectionObject.put("Cumulative Counter Value", sectionArr[6].trim());
                }

                // Add section to objectDetails
                objectDetails.put(sectionName, sectionObject);

                // Check if the next line should be skipped
                if (lines[j].contains("TICKET NUMBER")) {
                    skipNextLine = true;
                }
            }
        }

        // Add the remaining JSON structure to result
        result.put("Details", objectDetails);

        collector.collect(result.toString());
    }
}
