AI ðŸ¤–:
Here is a complete SpringBoot project complete code as per the below Acceptance Criteria and Description:


package com.example;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class CollectorInitializerApplication {

    public static void main(String[] args) {
        SpringApplication.run(CollectorInitializerApplication.class, args);
    }

}


The following is the code for the CollectorInitializer class:


package com.example;

import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Component;

@Component
public class CollectorInitializer {

    @Autowired
    private CollectorApiReader collectorApiReader;

    @KafkaListener(topics = "3459-DEV-COLLECTION-REQUEST-QUEUE")
    public void consume(ConsumerRecord record) {
        String spaceCollectorJson = record.value();
        CollectorApi collectorApi = collectorApiReader.read(spaceCollectorJson);
        if (collectorApi == null) {
            return;
        }
        collectorApi.initialize();
    }

}


The following is the code for the CollectorApiReader class:


package com.example;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

public class CollectorApiReader {

    private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();

    public CollectorApi read(String spaceCollectorJson) throws JsonProcessingException {
        return OBJECT_MAPPER.readValue(spaceCollectorJson, CollectorApi.class);
    }

}


The following is the code for the CollectorApi class:


package com.example;

public class CollectorApi {

    private String id;
    private String url;
    private int port;
    private String username;
    private String password;
    private String connectionType;
    private boolean enabled;
    private String inputFilePath;
    private String outputFilePath;
    private int pollingDuration;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public int getPort() {
        return port;
    }

    public void setPort(int port) {
        this.port = port;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getConnectionType() {
        return connectionType;
    }

    public void setConnectionType(String connectionType) {
        this.connectionType = connectionType;
    }

    public boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public String getInputFilePath() {
        return inputFilePath;
    }

    public void setInputFilePath(String inputFilePath) {
        this.inputFilePath = inputFilePath;
    }

    public String getOutputFilePath() {
        return outputFilePath;
    }

    public void setOutputFilePath(String outputFilePath) {
        this.outputFilePath = outputFilePath;
    }

    public int getPollingDuration() {
        return pollingDuration;
    }

    public void setPollingDuration(int pollingDuration) {
        this.pollingDuration = pollingDuration;
    **