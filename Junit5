@Test
void testConvertToObjectJAXBException() throws JsonProcessingException, JAXBException {
    // Create invalid XML input
    String invalidXml = "<invalid></invalid>";

    // Mock JAXBContext and Unmarshaller to throw JAXBException
    JAXBContext jaxbContextMock = Mockito.mock(JAXBContext.class);
    Unmarshaller jaxbUnmarshallerMock = Mockito.mock(Unmarshaller.class);
    Mockito.when(jaxbContextMock.createUnmarshaller()).thenThrow(new JAXBException("Mock JAXBException"));
    Mockito.when(jaxbContextMock.newInstance(TYSConstants.class)).thenReturn(jaxbContextMock);

    // Set up BatchLoaderUtils with mocked JAXBContext and Unmarshaller
    BatchLoaderUtils batchLoaderUtils = new BatchLoaderUtils();
    ReflectionTestUtils.setField(batchLoaderUtils, "jaxbContext", jaxbContextMock);

    // Call the method and assert the catch block is covered
    assertThrows(JAXBException.class, () -> batchLoaderUtils.convertToObject(invalidXml, TYSConstants.class));
}
