```dart
import 'package:flutter_test/flutter_test.dart';
import 'package:mockito/mockito.dart';
import 'package:your_project_name/mtn_insights_validator.dart';

class MockMtnInsightsRequest extends Mock implements MtnInsightsRequest {}
class MockMtnInsightsSearchRequest extends Mock implements MtnInsightsSearchRequest {}

void main() {
  group('MtnInsightsValidator', () {
    test('validate method should throw InvalidRequestException for invalid request type', () {
      // Arrange
      MtnInsightsRequest request = MockMtnInsightsRequest();
      when(request.getRequestType()).thenReturn(InsightsRequestType.OTHER);

      // Act & Assert
      expect(() => MtnInsightsValidator().validate(request), throwsA(TypeMatcher<InvalidRequestException>()));
    });

    test('validate method should throw InvalidRequestException for missing key attributes', () {
      // Arrange
      MtnInsightsRequest request = MockMtnInsightsRequest();
      when(request.getRequestType()).thenReturn(InsightsRequestType.INSERTMTNINSIGHTS);
      when(request.getKeyAttributes()).thenReturn(null);
      when(request.getListKeyAttributes()).thenReturn(null);

      // Act & Assert
      expect(() => MtnInsightsValidator().validate(request), throwsA(TypeMatcher<InvalidRequestException>()));
    });

    // Add more test cases as needed to achieve 100% code coverage
  });

  group('MtnInsightsValidator validateIterator method', () {
    test('validateIterator should throw InvalidRequestException for empty attributes', () {
      // Arrange
      MtnInsightsAttributes attributes = MtnInsightsAttributes(mtn: '', ecpdId: '', insightCategory: '', insightName: '');
      String errorMessage = null;

      // Act & Assert
      expect(() => MtnInsightsValidator().validateIterator(errorMessage, attributes, 'Test'), throwsA(TypeMatcher<InvalidRequestException>()));
    });

    // Add more test cases as needed to achieve 100% code coverage
  });

  group('MtnInsightsValidator validate search method', () {
    test('validate search method should throw InvalidRequestException for missing search parameters', () {
      // Arrange
      MtnInsightsSearchRequest request = MockMtnInsightsSearchRequest();
      when(request.getServiceRequest()).thenReturn(MtnInsightsSearchParam(mtn: '', ecpdId: '', insightCategory: [''], insightName: ['']));

      // Act & Assert
      expect(() => MtnInsightsValidator().validateSearch(request), throwsA(TypeMatcher<InvalidRequestException>()));
    });

    // Add more test cases as needed to achieve 100% code coverage
  });
}
```