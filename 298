import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class AlarmRepositoryImplTest {

   @Test
   public void testPerceivedSeverityNullStateCleared() throws Exception {
      // Setup
      AlarmRepositoryImpl alarmRepositoryImpl = new AlarmRepositoryImpl();
      Alarm alarm = new Alarm();
      Integer stateValue = 2;
      alarm.setPerceivedSeverity("MAJOR");
      
      // Exercise
      alarmRepositoryImpl.setPerceivedSeverityIfNeeded(null, stateValue, alarm);
      
      // Verify
      assertEquals(-1, alarm.getPerceivedSeverity());
   }

   @Test
   public void testPerceivedSeverityEmptyStateCleared() throws Exception {
      // Setup
      AlarmRepositoryImpl alarmRepositoryImpl = new AlarmRepositoryImpl();
      Alarm alarm = new Alarm();
      Integer stateValue = 2;
      alarm.setPerceivedSeverity("MAJOR");
      
      // Exercise
      alarmRepositoryImpl.setPerceivedSeverityIfNeeded("", stateValue, alarm);
      
      // Verify
      assertEquals(-1, alarm.getPerceivedSeverity());
   }

   @Test
   public void testPerceivedSeverityNotEmptyStateCleared() throws Exception {
      // Setup
      AlarmRepositoryImpl alarmRepositoryImpl = new AlarmRepositoryImpl();
      Alarm alarm = new Alarm();
      Integer stateValue = 2;
      alarm.setPerceivedSeverity("MAJOR");
      
      // Exercise
      alarmRepositoryImpl.setPerceivedSeverityIfNeeded("CRITICAL", stateValue, alarm);
      
      // Verify
      assertEquals(1, alarm.getPerceivedSeverity());
   }

   @Test
   public void testPerceivedSeverityNullNotStateCleared() throws Exception {
      // Setup
      AlarmRepositoryImpl alarmRepositoryImpl = new AlarmRepositoryImpl();
      Alarm alarm = new Alarm();
      Integer stateValue = 1;
      alarm.setPerceivedSeverity("MAJOR");
      
      // Exercise
      alarmRepositoryImpl.setPerceivedSeverityIfNeeded(null, stateValue, alarm);
      
      // Verify
      assertEquals(1, alarm.getPerceivedSeverity());
   }

   @Test
   public void testPerceivedSeverityEmptyNotStateCleared() throws Exception {
      // Setup
      AlarmRepositoryImpl alarmRepositoryImpl = new AlarmRepositoryImpl();
      Alarm alarm = new Alarm();
      Integer stateValue = 1;
      alarm.setPerceivedSeverity("MAJOR");
      
      // Exercise
      alarmRepositoryImpl.setPerceivedSeverityIfNeeded("", stateValue, alarm);
      
      // Verify
      assertEquals(1, alarm.getPerceivedSeverity());
   }

   @Test
   public void testPerceivedSeverityNotEmptyNotStateCleared() throws Exception {
      // Setup
      AlarmRepositoryImpl alarmRepositoryImpl = new AlarmRepositoryImpl();
      Alarm alarm = new Alarm();
      Integer stateValue = 1;
      alarm.setPerceivedSeverity("MAJOR");
      
      // Exercise
      alarmRepositoryImpl.setPerceivedSeverityIfNeeded("CRITICAL", stateValue, alarm);
      
      // Verify
      assertEquals(1, alarm.getPerceivedSeverity());
   }
}