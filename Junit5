To write JUnit 5 test cases for the `convertToMtnInsights` method of the `MtnInsightsManager` class, we will need to mock the dependencies and create different scenarios that cover all the `if` statements within the `if(set.getKey().equals(INSIGHT_CATEGORY_NETWORK_OUTAGE))` block. Here's an example of how you could write these test cases:

```java
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class MtnInsightsManagerTest {

    @InjectMocks
    private MtnInsightsManager mtnInsightsManager;

    @Mock
    private MtnInsightsRepository insightsRepository;

    @Mock
    private AggregateInsightsRepository aggrInsightRepository;

    @Mock
    private EcpdByKeyRepository ecpdByKeyRepository;

    @Mock
    private MtnInsightsValidator validator;

    private List<MtnInsightsEntity> entities;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
        entities = new ArrayList<>();
        // Setup initial test data
    }

    @Test
    public void testConvertToMtnInsights_Scenario1() {
        // Scenario where INSIGHT_CATEGORY_NETWORK_OUTAGE with MTNOUTAGE
        MtnInsightsEntity entity = new MtnInsightsEntity();
        MtnInsightsPK pk = new MtnInsightsPK();
        pk.setInsightName("MTNOUTAGE");
        entity.setPk(pk);
        entity.setCatagory("INSIGHT_CATEGORY_NETWORK_OUTAGE");
        entity.setInsightValues("EVENT_CUSTOMER_STATUS");
        entities.add(entity);

        when(aggrInsightRepository.findByPkAggrCategoryAndPkAggrProdId(anyString(), anyString()))
                .thenReturn(mock(AggregateInsightsEntity.class));

        InsightsMtn insightsMtn = mtnInsightsManager.convertToMtnInsights(entities, true);

        // Add assertions to validate the results
        assertNotNull(insightsMtn);
        assertEquals(1, insightsMtn.getCategoryInsights().length);
    }

    @Test
    public void testConvertToMtnInsights_Scenario2() {
        // Scenario where INSIGHT_CATEGORY_NETWORK_OUTAGE with MTNOUTAGECASE
        MtnInsightsEntity entity = new MtnInsightsEntity();
        MtnInsightsPK pk = new MtnInsightsPK();
        pk.setInsightName("MTNOUTAGECASE");
        entity.setPk(pk);
        entity.setCatagory("INSIGHT_CATEGORY_NETWORK_OUTAGE");
        entity.setInsightValues("Some Values");
        entities.add(entity);

        when(insightsRepository.findBuPkEcpdIdAndPkMtnAndProdIdAndPkInsightCategoryInAndPkInsightNameIn(anyString(), anyString(), anyString(), anyString(), anyString()))
                .thenReturn(entity);

        InsightsMtn insightsMtn = mtnInsightsManager.convertToMtnInsights(entities, true);

        // Add assertions to validate the results
        assertNotNull(insightsMtn);
        assertEquals(1, insightsMtn.getCategoryInsights().length);
    }

    @Test
    public void testConvertToMtnInsights_Scenario3() {
        // Scenario with no matching outage
        MtnInsightsEntity entity = new MtnInsightsEntity();
        MtnInsightsPK pk = new MtnInsightsPK();
        pk.setInsightName("OTHER_INSIGHT");
        entity.setPk(pk);
        entity.setCatagory("INSIGHT_CATEGORY_NETWORK_OUTAGE");
        entity.setInsightValues("Some Other Values");
        entities.add(entity);

        InsightsMtn insightsMtn = mtnInsightsManager.convertToMtnInsights(entities, false);

        // Add assertions to validate the results
        assertNotNull(insightsMtn);
        assertEquals(1, insightsMtn.getCategoryInsights().length);
    }

    // Add more test scenarios as needed to fully cover all branches
}
```

### Key Points:

1. **Mocks and Spies:** Use Mockito to mock dependencies such as repositories to isolate the method being tested.
2. **Test Scenarios:** Each test method should cover a specific scenario of the `if` conditions within your method.
3. **Assertions:** Validate the output to ensure the method behaves as expected under different conditions.
4. **Setup:** Initialize data in the `setUp` method to be reused across different tests.

Ensure that you have the necessary configurations for JUnit 5 and Mockito in your project to run these test cases.