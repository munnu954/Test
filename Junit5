Here is an example of JUnit5 test cases code covering all 8 branches of the specified block of code in the `createAlarm` method of `AlarmRepositoryImpl` class:

```java
import static org.mockito.ArgumentMatchers.*;
import static org.mockito.Mockito.*;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.junit.jupiter.api.Assertions.*;

@ExtendWith(MockitoExtension.class)
public class AlarmRepositoryImplTest {

    @Mock
    private PostGreDataBaseConfig postgresConf;

    @Test
    public void testCreateAlarmBranches() throws Exception {
        when(postgresConf.getPerceivedSeverityMap()).thenReturn(Map.of("High", 3, "Medium", 2, "Low", 1));
        when(postgresConf.getAlarmStateMap()).thenReturn(Map.of("New", 1, "Cleared", 0));

        AlarmRepositoryImpl alarmRepository = new AlarmRepositoryImpl();
        
        // Test branch where perceivedSeverity is null and stateValue is Cleared
        Alarm alarm1 = alarmRepository.createAlarm("{\"perceivedSeverity\":null, \"State\":\"Cleared\"}");
        assertEquals(-1, alarm1.getPerceivedSeverity());

        // Test branch where perceivedSeverity is empty and stateValue is Cleared
        Alarm alarm2 = alarmRepository.createAlarm("{\"perceivedSeverity\":\"\", \"State\":\"Cleared\"}");
        assertEquals(-1, alarm2.getPerceivedSeverity());

        // Test branch where perceivedSeverity is null and stateValue is not Cleared
        Alarm alarm3 = alarmRepository.createAlarm("{\"perceivedSeverity\":null, \"State\":\"New\"}");
        assertEquals(1, alarm3.getPerceivedSeverity());

        // Test branch where perceivedSeverity is not null and stateValue is Cleared
        Alarm alarm4 = alarmRepository.createAlarm("{\"perceivedSeverity\":\"Medium\", \"State\":\"Cleared\"}");
        assertEquals(2, alarm4.getPerceivedSeverity());

        // Add similar tests for other branches as needed
    }
}
```

Please make sure to mock any external dependencies like `PostGreDataBaseConfig` and provide appropriate values in the `createAlarm` method to cover all the branches. You may need to adjust the test data and configuration based on your specific requirements.