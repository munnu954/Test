Here is an example of JUnit 5 test cases for the `MessageReaderService` class covering each method and branch:

```java
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class MessageReaderServiceTest {

    @Mock
    VMBParams params;

    @Mock
    ApolloServiceHealth healthChecker;

    @Mock
    RuleLoadingService rulesLoadingService;

    MessageReaderService messageReaderService;

    @BeforeEach
    public void setup() {
        messageReaderService = new MessageReaderService();
        messageReaderService.params = params;
        messageReaderService.healthChecker = healthChecker;
        messageReaderService.rulesLoadingService = rulesLoadingService;
    }

    @Test
    public void testProcessMessageFromRuleNotifierVMB() {
        // Mock behavior for successful processMessageFromRuleNotifierVMB()
        when(params.getVMBConnectionFailureThresholdCount()).thenReturn(3);

        assertDoesNotThrow(() -> messageReaderService.processMessageFromRuleNotifierVMB());
    }

    @Test
    public void testRemoveOrloadRule() throws Exception {
        Method method = MessageReaderService.class.getDeclaredMethod("removeOrloadRule", HashMap.class);
        method.setAccessible(true);

        // Mock data for removeOrloadRule method
        HashMap<String, Object> ruleUpdateMap = new HashMap<>();
        ruleUpdateMap.put(AlarmPostingConstants.RULEID, 123);
        ruleUpdateMap.put(AlarmPostingConstants.OPERATION, AlarmPostingConstants.UPDATE);

        assertDoesNotThrow(() -> method.invoke(messageReaderService, ruleUpdateMap));
    }

    @Test
    public void testRetryReaderConnection() {
        Method method = MessageReaderService.class.getDeclaredMethod("retryReaderConnection");
        method.setAccessible(true);

        // Mock behavior for retryReaderConnection()
        when(params.getVMBConnectionFailureThresholdCount()).thenReturn(3);

        assertDoesNotThrow(() -> method.invoke(messageReaderService));
    }

    @Test
    public void testCloseReader() {
        Method method = MessageReaderService.class.getDeclaredMethod("closeReader");
        method.setAccessible(true);

        // Mock behavior for closeReader()
        assertDoesNotThrow(() -> method.invoke(messageReaderService));
    }

    // Additional test cases can be added as needed to achieve 100% code coverage

}
```

This is a basic example covering some of the methods in the `MessageReaderService` class using Reflection API for private method access. You can expand the test cases to cover more scenarios and increase the code coverage accordingly.