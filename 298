catch (HttpClientErrorException | HttpServerErrorException ex) {
    ex.printStackTrace();
    LOGGER.error("Error triggering job", ex.getMessage());
    
    // Check if the exception is caused by a non-existent jar id
    if (ex.getMessage().contains("Non existent jar id passed to flink cluster")) {
        // Handle the non-existent jar id exception
        // Code logic for handling the exception goes here
    } else if (ex instanceof HttpServerErrorException.InternalServerError) {
        // Check if the exception is caused by an internal server error
        LOGGER.error("Internal server error occurred");
        
        // Capture the error message
        String errorMessage = ex.getResponseBodyAsString();
        
        // Handle the internal server error
        // Code logic for handling the internal server error goes here
    } else {
        // Handle other exceptions
        FileMetadata metadata = kafkaConsumer.logMetadata(collector, fileType, ex);
        kafkaInputProducer.sendFailureMessage(collector, fileType, ex);
        kafkaConsumer.writeLogToFile(metadata, destinationFolderPath);
    }
}