import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import org.junit.jupiter.api.Test;

import java.util.HashMap;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class AlarmPostingUtilsTest {

    @Test
    void testParse() throws JsonMappingException, JsonProcessingException {
        // Test case for if (m != null) block
        String value = "Hello %name%";
        Map<String, Object> srcMap = new HashMap<>();
        srcMap.put("name", "John");
        String ruleName = "Test Rule";
        assertEquals("Hello John", AlarmPostingUtils.parse(value, srcMap, ruleName));

        // Test case for if (m != null) and if (attributeExp.contains("."))
        value = "Hello %person.name%";
        srcMap.clear();
        Map<String, Object> personMap = new HashMap<>();
        personMap.put("name", "Alice");
        srcMap.put("person", personMap);
        assertEquals("Hello Alice", AlarmPostingUtils.parse(value, srcMap, ruleName));

        // Test case for if (attributeExp.contains("[") && attributeExp.contains("]") and array attribute
        value = "Hello %names[0]%";
        srcMap.clear();
        srcMap.put("names", new String[]{"Alice", "Bob"});
        assertEquals("Hello Alice", AlarmPostingUtils.parse(value, srcMap, ruleName));

        // Test case for else block where attributeExp not found in the map
        value = "Hello %missing%";
        assertEquals("Hello ", AlarmPostingUtils.parse(value, srcMap, ruleName));
    }
}