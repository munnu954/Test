To achieve 100% code coverage for the `PulsarSslConfiguration` class using JUnit 5 and Reflection APIs, you need to test the creation of the `PulsarClientBuilderCustomizer` bean. This involves verifying that the method is invoked and the configurations are set as expected. Here's an example of how you can write JUnit 5 test cases for this:

```java
import org.apache.pulsar.client.api.PulsarClientBuilder;
import org.apache.pulsar.client.api.PulsarClientBuilderCustomizer;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.test.util.ReflectionTestUtils;

import java.io.File;

import static org.mockito.Mockito.*;

class PulsarSslConfigurationTest {

    private PulsarSslConfiguration pulsarSslConfiguration;
    private PulsarClientBuilder mockClientBuilder;

    @BeforeEach
    void setUp() {
        pulsarSslConfiguration = new PulsarSslConfiguration();
        mockClientBuilder = mock(PulsarClientBuilder.class);
        
        // Set the private field using reflection
        ReflectionTestUtils.setField(pulsarSslConfiguration, "certificatesLoc", "/mock/path");
    }

    @Test
    void testPulsarClientPemSslCustomizer() {
        PulsarClientBuilderCustomizer customizer = pulsarSslConfiguration.pulsarClientPemSslCustomizer();
        
        // Verify that the customizer is not null
        assertNotNull(customizer);
        
        // Apply the customizer to the mock client builder
        customizer.customize(mockClientBuilder);

        // Verify each method call on the PulsarClientBuilder
        verify(mockClientBuilder).allowTlsInsecureConnection(false);
        verify(mockClientBuilder).enableTlsHostnameVerification(false);
        verify(mockClientBuilder).authentication(any());
        verify(mockClientBuilder).tlsTrustCertsFilePath("/mock/path" + File.separator + "ca.cert.pem");
        verify(mockClientBuilder).tlsKeyFilePath("/mock/path" + File.separator + "jpsv.key-pk8.pem");
        verify(mockClientBuilder).tlsCertificateFilePath("/mock/path" + File.separator + "jpsv.cert.pem");
    }
}
```

### Explanation:
- **ReflectionTestUtils**: Used to set the private field `certificatesLoc` in the `PulsarSslConfiguration` class. This avoids needing to change the visibility of that field.
- **Mockito**: Used to create a mock `PulsarClientBuilder` to verify that the methods are called with the expected arguments.
- **Assertions**: Used to ensure that the customizer is not null.
- **Verification**: Each method of `PulsarClientBuilder` that should be called by the customizer is verified with expected arguments.

This test should ensure that the `PulsarSslConfiguration` class behaves as expected, achieving 100% code coverage for the provided method.