import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.springframework.core.env.Environment;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class CBRSSuppressionApplicationTest {

    @Mock
    private Environment mockEnvironment;

    @Test
    public void testConstructor() {
        when(mockEnvironment.getProperty("RDB_BAD_QUERY")).thenReturn("testQuery");

        CBRSSuppressionApplication app = new CBRSSuppressionApplication(mockEnvironment);

        assertEquals("testQuery", app.badQuery);
    }

    @Test
    public void testMainWithUnsatisfiedDependencyException() {
        UnsatisfiedDependencyException ex = mock(UnsatisfiedDependencyException.class);
        when(ex.getMessage()).thenReturn("Validation failed for query");

        assertNotNull(ex.getMessage());
    }

    @Test
    public void testMainWithoutUnsatisfiedDependencyException() {
        UnsatisfiedDependencyException ex = mock(UnsatisfiedDependencyException.class);
        when(ex.getMessage()).thenReturn("Some other exception message");

        assertNull(ex.getMessage());
    }

    // Add more test cases to cover other branches and scenarios

}