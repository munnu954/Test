import org.apache.flink.api.common.accumulators.IntCounter;
import org.apache.flink.api.common.functions.RichFlatMapFunction;
import org.apache.flink.configuration.Configuration;
import org.apache.flink.util.Collector;
import org.json.simple.JSONObject;

public class CsvtoJsonDRAnTransformer extends RichFlatMapFunction<String, String> {
    private IntCounter successIntCounter = new IntCounter();
    private IntCounter failureIntCounter = new IntCounter();
    private String fileName;

    public CsvtoJsonDRAnTransformer(String fileName) {
        this.fileName = fileName;
    }

    @Override
    public void open(Configuration parameters) throws Exception {
        getRuntimeContext().addAccumulator("successIntCounter", this.successIntCounter);
        getRuntimeContext().addAccumulator("failureIntCounter", this.failureIntCounter);
    }

    @Override
    public void flatMap(String s, Collector<String> collector) throws Exception {
        String[] lines = s.split(System.lineSeparator());
        for (int i = 12; i < lines.length; i++) { // Start processing from line 13
            String str = lines[i];
            String[] arr = str.split(",");
            if (arr.length != 2) {
                this.failureIntCounter.add(1);
                continue;
            }
            JSONObject obj = new JSONObject();
            obj.put("FILENAME", fileName);
            String jsonkey = arr[0].trim().replace("\"", "");
            String jsonvalue = arr[1].trim().replace("\"", "");
            obj.put(jsonkey, jsonvalue);
            this.successIntCounter.add(1);
            collector.collect(obj.toString());
        }
    }
}