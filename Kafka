public void createMessageAndLog(String inputFilePath, String url, Integer port, String outputFilePath, String delimiters, String fileType, String date_received, String date_processed, Integer no_of_records_in_the_file, Integer no_of_records_processed, Integer no_of_records_failed, UUID job_id, UUID jar_id, List<String> exceptions, UUID collector_id) {
    LocalDateTime dateProcessed = LocalDateTime.now();

    UnifiedAuditMessage auditMsg = new UnifiedAuditMessage(inputFilePath, url, port, outputFilePath, delimiters, fileType, date_received, date_processed, no_of_records_in_the_file, no_of_records_processed, no_of_records_failed, job_id, jar_id, exceptions, collector_id);

    try {
        ObjectMapper objectMapper = new ObjectMapper();
        String jsonAuditMsg = objectMapper.writeValueAsString(auditMsg);
        this.kafkaTemplate.send(topicName, jsonAuditMsg);

        Logger.info("Kafka status message: {}", jsonAuditMsg);

    } catch (JsonProcessingException e) {
        Logger.error("Failed to convert audit message to JSON: {}", e.getMessage());
    } catch (Exception e) {
        Logger.error("Failed to send Kafka message: {}", e.getMessage());
    }
}

public LocalDateTime dateProcessed() {
    return LocalDateTime.now();
}