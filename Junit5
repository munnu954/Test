To achieve 100% code coverage for the `HttpClientErrorException.NotFound` catch block in the `ApiOperation` class using JUnit 5, we need to mock the dependencies, simulate the specific exception, and verify the behavior. Hereâ€™s what the test class might look like:

```java
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.RestClientException;
import org.springframework.web.client.RestTemplate;

@ExtendWith(MockitoExtension.class)
class ApiOperationTest {

    @Mock
    private RestTemplate restTemplate;

    @Mock
    private AlarmGroupingParams configParams;

    @InjectMocks
    private ApiOperation apiOperation;

    @BeforeEach
    void setUp() {
        // Mock the config params
        when(configParams.getAlarmFetchURL()).thenReturn("http://mock-url.com");
        when(configParams.getAlarmFilterKey()).thenReturn("mock-key");
    }

    @Test
    void testGetAlarmDetailsById_NotFound() {
        // Arrange
        String alarmIdentity = "12345";
        when(restTemplate.exchange(anyString(), eq(HttpMethod.POST), any(), eq(String.class)))
                .thenThrow(new HttpClientErrorException.NotFound("Not Found"));

        // Act
        String result = apiOperation.getAlarmDetailsById(alarmIdentity);

        // Assert
        assertNull(result);
    }

    @Test
    void testGetAlarmDetailsById_OtherException() {
        // Arrange
        String alarmIdentity = "12345";
        when(restTemplate.exchange(anyString(), eq(HttpMethod.POST), any(), eq(String.class)))
                .thenThrow(new RestClientException("Client error"));

        // Act
        String result = apiOperation.getAlarmDetailsById(alarmIdentity);

        // Assert
        assertNull(result);
    }
}
```

