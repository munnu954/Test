Certainly! Here's the refactored test case with the sendMessage method belonging to the KafkaProducer class, and appropriate assertions for the SpaceCollector message object. 

```java
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@SpringBootTest
public class KafkaTest {

    @InjectMocks
    private KafkaProducer kafkaProducer;

    @Mock
    private KafkaTemplate<String, SpaceCollector> kafkaTemplate;

    // ... other dependencies and values

    @Test
    public void testKafkaProducer() {
        SpaceCollector message = new SpaceCollector(1, "url", 8080, "input.csv", "output.csv", ",", "CSV");

        doNothing().when(kafkaTemplate).send(topicName, message);
        kafkaProducer.sendMessage(message);

        verify(kafkaTemplate, times(1)).send(topicName, message);

        // Assertions
        assertNotNull(message);
        assertEquals(1, message.getId());
        assertEquals("url", message.getUrl());
        assertEquals(8080, message.getPort());
        assertEquals("input.csv", message.getInputFilePath());
        assertEquals("output.csv", message.getOutputFilePath());
        assertEquals(",", message.getDelimiter());
        assertEquals("CSV", message.getFileType());
    }

    // ... other test cases
}
```

Now the test case includes appropriate assertions for the SpaceCollector message object and is structured to test the sendMessage method of the KafkaProducer class.