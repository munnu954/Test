server:
  port: 8080

spring:
  application:
    name: shared-folder
  shared:
    folder:
      location: "path/to/your/shared/folder"



Sure! Below is an example of a Spring Boot application that creates, reads, and deletes data from a local shared folder location.

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.*;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;

@SpringBootApplication
@RestController
public class SharedFolderApplication {

    private static final String SHARED_FOLDER_PATH = "C:\\shared-folder";

    public static void main(String[] args) {
        SpringApplication.run(SharedFolderApplication.class, args);
    }

    @PostMapping("/createFile")
    public String createFile(@RequestParam String fileName, @RequestBody String content) throws IOException {
        File file = new File(SHARED_FOLDER_PATH + File.separator + fileName);
        Files.write(file.toPath(), content.getBytes());
        return "File created successfully";
    }

    @GetMapping("/readFile")
    public String readFile(@RequestParam String fileName) throws IOException {
        File file = new File(SHARED_FOLDER_PATH + File.separator + fileName);
        return new String(Files.readAllBytes(file.toPath()));
    }

    @DeleteMapping("/deleteFile")
    public String deleteFile(@RequestParam String fileName) {
        File file = new File(SHARED_FOLDER_PATH + File.separator + fileName);
        if (file.exists()) {
            file.delete();
            return "File deleted successfully";
        } else {
            return "File not found";
        }
    }
}


In this example, we have created a Spring Boot application with three endpoints:

1. POST /createFile: This endpoint creates a new file in the shared folder with the given file name and content.

2. GET /readFile: This endpoint reads the content of the file with the given file name from the shared folder.

3. DELETE /deleteFile: This endpoint deletes the file with the given file name from the shared folder.

Make sure to replace "C:\\shared-folder" with the actual path of your shared folder location. Also, don't forget to handle exceptions and add proper error handling in a production environment.