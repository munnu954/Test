Here's an additional JUnit 5 test case to cover the remaining branch:

```
@Test
void testGetCircuitDetails_ConditionNotY() {
    // Arrange
    String circuitId = "testCircuitId";
    String sourceSys = "testSourceSys";
    String cnd = "N"; // Condition is not "Y"
    String phyModel = "testPhyModel";

    // Act and Assert
    assertDoesNotThrow(() -> commonWrapperController.getCircuitDetails(circuitId, sourceSys, cnd, phyModel));
}
```

This test case covers the scenario where `cnd` is not blank but also not equal to "Y" (`cnd.equalsIgnoreCase("Y")` is `false`).

However, to achieve 100% code coverage, ensure that the logic within the `if` statement is executed. You might need to add additional assertions or verify interactions with mocks, depending on the implementation of `getCircuitDetails`.

Also, consider using parameterized tests to cover multiple scenarios with less boilerplate code:

```
@ParameterizedTest
@CsvSource({
    "", "Y", // blank and "Y"
    "N", "someOtherValue" // not blank and not "Y"
})
void testGetCircuitDetails_Condition(String cnd, String expectedOutcome) {
    // Arrange
    String circuitId = "testCircuitId";
    String sourceSys = "testSourceSys";
    String phyModel = "testPhyModel";

    // Act and Assert
    if (expectedOutcome.equals("Y")) {
        // assert expected behavior when cnd is "Y" or blank
    } else {
        // assert expected behavior when cnd is not "Y"
    }
}
```