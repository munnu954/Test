import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.Test;
import org.mockito.MockedStatic;
import org.mockito.Mockito;

public class AlarmPostingUtilsTest {

  @Test
  public void testEvaluateExpressionException() {
    // Arrange
    Environment env = mock(Environment.class);
    AlarmPostingUtils alarmPostingUtils = new AlarmPostingUtils(env);
    String expression = "%test%";
    Map<String, Object> topoMap = new HashMap<>();
    
    // Mock the LogManager.getLogger method to throw an exception
    try (MockedStatic<LogManager> mockedStatic = Mockito.mockStatic(LogManager.class)) {
      mockedStatic.when(() -> LogManager.getLogger(AlarmPostingUtils.class)).thenThrow(new RuntimeException("Mocked exception"));
      
      // Act
      String result = alarmPostingUtils.evaluateExpression(expression, topoMap);
      
      // Assert
      assertEquals("", result); // Assert the result when an exception is caught
      // Verify that LOG.error method is called with the expected message
      verify(AlarmPostingUtils.LOG).error("Exception occurred while Parsing Expression: ()", "Mocked exception");
    }
  }
}