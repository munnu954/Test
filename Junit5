import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;

import org.junit.jupiter.api.Test;

public class CableProcessorTest {

    @Test
    public void testProcess() {
        CableProcessor cableProcessor = CableProcessor.getInstance();

        List<Node> nodes = new ArrayList<>();
        List<Link> links = new ArrayList<>();
        ClrComponent clrComponent = new ClrComponent();
        List<ClrComponent> clrComponentList = new ArrayList<>();
        Map<String, List<Node>> clliNodeMap = new HashMap<>();
        AtomicInteger ukCount = new AtomicInteger(0);
        String sourceSys = "Test Source";

        ClrComponent prevClrComponent = mock(ClrComponent.class);
        EquipmentComp equipmentComp = new EquipmentComp();
        List<PortRef> portRefList = new ArrayList<>();
        PortRef portRef = new PortRef();
        portRef.setSiteCode("123");
        portRef.setPortID("456");
        portRefList.add(portRef);
        equipmentComp.setPortRef(portRefList);

        when(prevClrComponent.getEquipmentComp()).thenReturn(List.of(equipmentComp));

        List<ClrComponent> clrComponentListWithPrev = new ArrayList<>();
        clrComponentListWithPrev.add(prevClrComponent);

        // Test for branch where prevClrComponent has equipmentComp with portRef
        cableProcessor.process(nodes, links, clrComponent, clrComponentListWithPrev, clliNodeMap, 1, ukCount, sourceSys);
        assertEquals(1, links.size());

        // Test for branch where prevClrComponent has no equipmentComp
        when(prevClrComponent.getEquipmentComp()).thenReturn(new ArrayList<>());
        cableProcessor.process(nodes, links, clrComponent, clrComponentListWithPrev, clliNodeMap, 1, ukCount, sourceSys);
        assertEquals(1, links.size());

        // Test for branch where prevClrComponent's equipmentComp is empty
        equipmentComp.setPortRef(new ArrayList<>());
        when(prevClrComponent.getEquipmentComp()).thenReturn(List.of(equipmentComp));
        cableProcessor.process(nodes, links, clrComponent, clrComponentListWithPrev, clliNodeMap, 1, ukCount, sourceSys);
        assertEquals(1, links.size());

        // Other branches can be tested similarly by manipulating the input values
    }
}