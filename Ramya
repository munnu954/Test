@Override
public void flatMap(String input, Collector<String> collector) throws Exception {
    String[] arr = input.split(",");
    JSONObject jsonObject = new JSONObject();

    for (int i = 0; i < arr.length; i++) {
        String key = arr[i].trim();
        String value = arr[++i].trim();  // Move to the next element for the value

        if (i == 1) {
            // Handle the special case for ObjectName
            jsonObject.put("ObjectName", value);
        } else if (i == 2) {
            // Handle the special case for Begin date
            jsonObject.put("Begin date", value);
        } else if (i == 3) {
            // Handle the special case for End date
            jsonObject.put("End date", value);
        } else if (i == 4) {
            // Handle the special case for Ticket number
            jsonObject.put("Ticket number", value);
        } else if (i == 5) {
            // Handle the special case for Max concurrent calls
            JSONObject subJsonObject = new JSONObject();
            subJsonObject.put("Min", arr[i++].trim());
            subJsonObject.put("Average", arr[i++].trim());
            subJsonObject.put("Max", arr[i++].trim());
            subJsonObject.put("Cumulative counter value", arr[i].trim());

            // Add the nested object to the main JSON object
            jsonObject.put("Max concurrent calls", subJsonObject);
        } else {
            // Handle the values and create nested objects
            JSONObject subJsonObject = new JSONObject();
            subJsonObject.put("Min", arr[i++].trim());
            subJsonObject.put("Average", arr[i++].trim());
            subJsonObject.put("Max", arr[i++].trim());
            subJsonObject.put("Cumulative counter value", arr[i].trim());

            // Add the nested object to the main JSON object
            jsonObject.put(headers[(i - 6) / 4], subJsonObject);
        }
    }

    collector.collect(jsonObject.toString());
}
