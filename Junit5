import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.Test;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class GraniteReflowMsServiceTest {

    @Test
    public void testValidateCircuits() {
        // Mocking dependencies
        RestTemplate restTemplate = mock(RestTemplate.class);
        String cndCircHeaderMSServiceUrl = "http://example.com";
        GraniteReflowMsService service = new GraniteReflowMsService();
        service.setRestTemplate(restTemplate);
        service.setCndCircHeaderMSServiceUrl(cndCircHeaderMSServiceUrl);

        // Mocking response entity
        CircuitDetailResponse response = new CircuitDetailResponse();
        CircuitData circuitData = new CircuitData();
        CircuitLst circuitLst = new CircuitLst();
        Circuit circuit = new Circuit();
        circuit.setCircuitName("TestCircuit");
        circuitLst.setCircuit(Arrays.asList(circuit));
        circuitData.setCircuitLst(Arrays.asList(circuitLst));
        response.setCircuitData(circuitData);
        ResponseEntity<CircuitDetailResponse> responseEntity = new ResponseEntity<>(response, HttpStatus.OK);
        when(restTemplate.exchange(eq(cndCircHeaderMSServiceUrl), eq(HttpMethod.POST), any(HttpEntity.class), eq(CircuitDetailResponse.class))
                .thenReturn(responseEntity);

        // Test data
        List<String> circuitNameList = Arrays.asList("TestCircuit1", "TestCircuit");
        List<String> toValidateCircuitNameList = new ArrayList<>();
        toValidateCircuitNameList.add("TestCircuit1");

        // Calling the method
        List<String> validCircuitNameList = service.validateCircuits(circuitNameList, toValidateCircuitNameList);

        // Verifying the results
        assertEquals(1, validCircuitNameList.size());
        assertTrue(validCircuitNameList.contains("TestCircuit"));
        assertEquals(0, toValidateCircuitNameList.size());
    }
}