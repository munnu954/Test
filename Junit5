import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.AtomicInteger;

class TrunkProcessorTest {

    private TrunkProcessor trunkProcessor;
    private List<Node> nodes;
    private List<Link> links;
    private List<ClrComponent> clrComponentList;
    private Map<String, List<Node>> clliNodeMap;
    private int i;
    private AtomicInteger ukCount;
    private String sourceSys;

    @BeforeEach
    void setUp() {
        trunkProcessor = TrunkProcessor.getInstance();
        nodes = new ArrayList<>();
        links = new ArrayList<>();
        clrComponentList = new ArrayList<>();
        clliNodeMap = new HashMap<>();
        i = 0;
        ukCount = new AtomicInteger(0);
        sourceSys = "test";
    }

    @Test
    void testProcessWithTrailNotNull() {
        // Arrange
        ClrComponent prevClrComponent = Mockito.mock(ClrComponent.class);
        Mockito.when(prevClrComponent.getType()).thenReturn(CommonWrapperConstants.SEGEMENT);
        Mockito.when(prevClrComponent.getCircuitComp()).thenReturn(new ArrayList<>());
        Mockito.when(prevClrComponent.getCircuitComp().get(0).getCircuitInfo()).thenReturn(new ArrayList<>());
        Mockito.when(prevClrComponent.getCircuitComp().get(0).getCircuitInfo().get(0)).thenReturn(new CircuitInfo());

        clrComponentList.add(prevClrComponent);

        // Act
        trunkProcessor.process(nodes, links, null, clrComponentList, clliNodeMap, i, ukCount, sourceSys);

        // Assert
        Assertions.assertEquals(1, links.size());
        Assertions.assertNotNull(links.get(0).getSource());
        Assertions.assertNotNull(links.get(0).getTarget());
    }

    @Test
    void testProcessWithTrailNull() {
        // Arrange
        ClrComponent prevClrComponent = Mockito.mock(ClrComponent.class);
        Mockito.when(prevClrComponent.getType()).thenReturn(CommonWrapperConstants.SEGEMENT);
        Mockito.when(prevClrComponent.getCircuitComp()).thenReturn(null);

        clrComponentList.add(prevClrComponent);

        // Act
        trunkProcessor.process(nodes, links, null, clrComponentList, clliNodeMap, i, ukCount, sourceSys);

        // Assert
        Assertions.assertEquals(0, links.size());
    }
}