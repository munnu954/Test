import com.google.gson.JsonObject;
import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] lines = input.split(System.lineSeparator());
        JsonObject result = new JsonObject();
        String objectName = "";
        String sectionName = "";

        for (String line : lines) {
            String[] arr = line.split(",");

            // Check if Column C has a value (ObjectName)
            if (arr.length > 2 && !arr[2].isEmpty()) {
                objectName = arr[2].trim();
            }

            // Check if Column A has a value (SectionName)
            if (arr.length > 0 && !arr[0].isEmpty()) {
                sectionName = arr[0].trim();
                System.out.println("Section Name: " + sectionName);
            }

            // Your existing logic for processing metrics and building JSON goes here
            if (arr.length > 3) {
                JsonObject metricObject = new JsonObject();
                metricObject.addProperty("Min", arr[3].trim());
                metricObject.addProperty("Average", arr[4].trim());
                metricObject.addProperty("Max", arr[5].trim());
                metricObject.addProperty("Cumulative Counter Value", arr[6].trim());

                // Assuming you have some key for the metric, use it accordingly
                String metricKey = "MetricKey"; 
                result.add(objectName + " - " + sectionName + " - " + metricKey, metricObject);
            }
        }

        collector.collect(result.toString());
    }
}
