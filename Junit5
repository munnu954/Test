To write JUnit 5 test cases for the `TrunkProcessor` class, specifically targeting the conditional statement `if(isNotNull(prevClrComponent, CommonWrapperConstants.TRAIL))`, we need to create scenarios that cover both branches of this condition. This involves setting up the `ClrComponent` and related objects to either satisfy or not satisfy the `isNotNull` check for the `TRAIL` type. Below is the JUnit 5 test code:

```java
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicInteger;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class TrunkProcessorTest {

    private TrunkProcessor trunkProcessor;
    private List<Node> nodes;
    private List<Link> links;
    private Map<String, List<Node>> clliNodeMap;
    private AtomicInteger ukCount;
    private String sourceSys;

    @BeforeEach
    void setUp() {
        trunkProcessor = TrunkProcessor.getInstance();
        nodes = new ArrayList<>();
        links = new ArrayList<>();
        clliNodeMap = new HashMap<>();
        ukCount = new AtomicInteger(0);
        sourceSys = "TestSource";
    }

    @Test
    void testProcessWithTrailComponentExists() {
        // Setup for a ClrComponent with TRAIL type that satisfies isNotNull
        ClrComponent clrComponent = new ClrComponent();
        clrComponent.setType("TRAIL");
        CircuitComp circuitComp = new CircuitComp();
        CircuitInfo circuitInfo = new CircuitInfo();
        circuitComp.getCircuitInfo().add(circuitInfo);
        clrComponent.getCircuitComp().add(circuitComp);

        List<ClrComponent> clrComponentList = new ArrayList<>();
        clrComponentList.add(clrComponent);

        // Add a previous component to satisfy the condition
        ClrComponent prevClrComponent = new ClrComponent();
        prevClrComponent.setType("TRAIL");
        prevClrComponent.getCircuitComp().add(circuitComp);
        clrComponentList.add(prevClrComponent);

        // Execute the process method
        trunkProcessor.process(nodes, links, clrComponent, clrComponentList, clliNodeMap, 1, ukCount, sourceSys);

        // Assertions to verify the expected behavior
        assertEquals(1, links.size(), "Link should be added when TRAIL component exists");
        assertNotNull(links.get(0).getSource(), "Source should be set for the link");
    }

    @Test
    void testProcessWithTrailComponentNotExists() {
        // Setup for a ClrComponent with TRAIL type that does not satisfy isNotNull
        ClrComponent clrComponent = new ClrComponent();
        clrComponent.setType("TRAIL");

        List<ClrComponent> clrComponentList = new ArrayList<>();
        clrComponentList.add(clrComponent);

        // Add a previous component that does not satisfy the condition

ClrComponent prevClrComponent = new ClrComponent();
        prevClrComponent.setType("TRAIL");
        clrComponentList.add(prevClrComponent);

        // Execute the process method
        trunkProcessor.process(nodes, links, clrComponent, clrComponentList, clliNodeMap, 1, ukCount, sourceSys);

        // Assertions to verify the expected behavior
        assertEquals(0, links.size(), "No link should be added when TRAIL component does not exist");
    }
}
```

### Explanation:

1. *Setup*: We initialize the necessary objects and lists before each test. This includes the `TrunkProcessor` instance, lists for nodes and links, a map for `clliNodeMap`, and an `AtomicInteger` for `ukCount`.

2. *Test for Trail Component Exists*:
   - We create a `ClrComponent` with a `TRAIL` type and populate it with a `CircuitComp` that contains `CircuitInfo`, satisfying the `isNotNull` condition.
   - We add this component to the `clrComponentList` and ensure there's a previous component to trigger the condition.
   - We assert that a link is added and that the source is set, indicating the branch was executed.

3. *Test for Trail Component Not Exists*:
   - We create a `ClrComponent` with a `TRAIL` type but do not populate it with `CircuitComp`, failing the `isNotNull` condition.
   - We assert that no link is added, indicating the branch was not executed.

These tests ensure that both branches of the `if(isNotNull(prevClrComponent, CommonWrapperConstants.TRAIL))` condition are covered, achieving 100% code coverage for this part of the method.   

~ Yatter Basic