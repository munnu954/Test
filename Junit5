import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.powermock.reflect.Whitebox;
import java.util.HashMap;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
public class MessageReaderServiceTest {

    @Mock
    private RulesLoadingService rulesLoadingService;

    @Test
    public void testRemoveOrloadRule() throws Exception {
        MessageReaderService messageReaderService = new MessageReaderService();
        Whitebox.setInternalState(messageReaderService, "rulesLoadingService", rulesLoadingService);

        HashMap<String, Object> ruleUpdateMap = new HashMap<>();
        ruleUpdateMap.put(AlarmPostingConstants.RULEID, 1L);

        when(rulesLoadingService.getRuleMap()).thenReturn(new HashMap<>() {{
            put(1L, "Test Rule");
        }});

        messageReaderService.removeOrloadRule(ruleUpdateMap);

        assertEquals("Loading Updated Rule from rulesMap: Test Rule", Whitebox.getInternalState(messageReaderService, "logMessage"));
    }
}