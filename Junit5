@Test
void testParseElseBlock() throws JsonMappingException, JsonProcessingException {
    // Given
    String value = "%attribute1%";
    Map<String, Object> srcMap = new HashMap<>();
    srcMap.put("attribute1", "value1");
    String ruleName = "rule1";
    
    // When
    String result = AlarmPostingUtils.parse(value, srcMap, ruleName);
    
    // Then
    assertEquals("value1", result);
}

@Test
void testParseElseBlockArrayIndex() throws JsonMappingException, JsonProcessingException {
    // Given
    String value = "%attribute1[0]%";
    List<String> attribute1List = new ArrayList<>();
    attribute1List.add("value1");
    
    Map<String, Object> srcMap = new HashMap<>();
    srcMap.put("attribute1", attribute1List);
    
    String ruleName = "rule1";
    
    // When
    String result = AlarmPostingUtils.parse(value, srcMap, ruleName);
    
    // Then
    assertEquals("value1", result);
}

@Test
void testParseElseBlockNestedField() throws JsonMappingException, JsonProcessingException {
    // Given
    String value = "%attribute1.field1%";
    Map<String, Object> field1Map = new HashMap<>();
    field1Map.put("field1", "value1");
    
    Map<String, Object> attribute1Map = new HashMap<>();
    attribute1Map.put("field1", field1Map);
    
    Map<String, Object> srcMap = new HashMap<>();
    srcMap.put("attribute1", attribute1Map);
    
    String ruleName = "rule1";
    
    // When
    String result = AlarmPostingUtils.parse(value, srcMap, ruleName);
    
    // Then
    assertEquals("value1", result);
}

@Test
void testParseElseBlockArrayNestedField() throws JsonMappingException, JsonProcessingException {
    // Given
    String value = "%attribute1[0].field1%";
    Map<String, Object> field1Map = new HashMap<>();
    field1Map.put("field1", "value1");
    
    List<Map<String, Object>> attribute1List = new ArrayList<>();
    attribute1List.add(field1Map);
    
    Map<String, Object> srcMap = new HashMap<>();
    srcMap.put("attribute1", attribute1List);
    
    String ruleName = "rule1";
    
    // When
    String result = AlarmPostingUtils.parse(value, srcMap, ruleName);
    
    // Then
    assertEquals("value1", result);
}

@Test
void testParseElseBlockAttributeNotPresent() throws JsonMappingException, JsonProcessingException {
    // Given
    String value = "%attribute2%";
    Map<String, Object> srcMap = new HashMap<>();
    srcMap.put("attribute1", "value1");
    String ruleName = "rule1";
    
    // When
    String result = AlarmPostingUtils.parse(value, srcMap, ruleName);
    
    // Then
    assertEquals("", result);
}