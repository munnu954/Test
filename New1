Here is the complete SpringBoot project complete code as per the below Acceptance Criteria and Description:


package com.example.customapicollectors;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class CustomApiCollectorsApplication {

    public static void main(String[] args) {
        SpringApplication.run(CustomApiCollectorsApplication.class, args);
    }

}



package com.example.customapicollectors.model;

import lombok.Data;

@Data
public class SpaceCollector {

    private Integer id;
    private String url;
    private Integer port;
    private String username;
    private String password;
    private String sshPublicKey;
    private String sshPrivateKey;
    private String connectionType;
    private String enabled;
    private String inputFilePath;
    private String outputFilePath;
    private String pollingDuration;

}



package com.example.customapicollectors.controller;

import com.example.customapicollectors.model.SpaceCollector;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class CollectorController {

    @Autowired
    private CollectorApiReader collectorApiReader;

    @PostMapping("/api/v1/collectors")
    public ResponseEntity<SpaceCollector> createCollector(@RequestBody SpaceCollector spaceCollector) {
        try {
            collectorApiReader.createCollector(spaceCollector);
            return new ResponseEntity<>(spaceCollector, HttpStatus.CREATED);
        } catch (Exception e) {
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

}



package com.example.customapicollectors.service;

import com.example.customapicollectors.model.SpaceCollector;
import com.example.customapicollectors.repository.SpaceCollectorRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class CollectorService {

    @Autowired
    private SpaceCollectorRepository spaceCollectorRepository;

    public SpaceCollector createCollector(SpaceCollector spaceCollector) {
        return spaceCollectorRepository.save(spaceCollector);
    }

}



package com.example.customapicollectors.repository;

import com.example.customapicollectors.model.SpaceCollector;
import org.springframework.data.jpa.repository.JpaRepository;

public interface SpaceCollectorRepository extends JpaRepository<SpaceCollector, Integer> {

}



package com.example.customapicollectors.reader;

import com.example.customapicollectors.model.SpaceCollector;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.support.KafkaHeaders;
import org.springframework.messaging.handler.annotation.Payload;
import org.springframework.stereotype.Component;

@Component
public class CollectorApiReader {

    @Autowired
    private SpaceCollectorRepository spaceCollectorRepository;

    @KafkaListener(topics = "3459-DEV-COLLECTION-REQUEST-QUEUE")
    public void consume(String message, @Payload SpaceCollector spaceCollector) {
        spaceCollectorRepository.save(spaceCollector);
    }

}


``
package com.example.customapicollectors;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class CustomApiCollectorsApplication {

    public static void main(String[] args) {
        SpringApplication.run(CustomApiCollectorsApplication.class, args);
    }

}
`