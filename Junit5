The error you're encountering typically suggests that the `RestTemplate` is unable to convert the HTTP response body into the expected Java object (`LinkAggregationResponse`). This usually happens when the object mapper cannot find a suitable converter for the response type or when the HTTP message converters are not properly set up.

Here's how you can address this issue:

1. **Ensure that the `LinkAggregationResponse` class is properly annotated** with JSON serialization/deserialization annotations (`@JsonIgnoreProperties(ignoreUnknown = true)`, `@JsonProperty`, etc.) if needed.
2. **Register a suitable HTTP message converter** in the `RestTemplate` configuration.

Below are the modifications you should make to your classes:

### AppConfig Class

Add the Jackson message converter to your `RestTemplate` bean to ensure it can handle JSON conversion:

```java
@Configuration
public class AppConfig {
    Map<String, String> configData = new HashMap<>();

    @Value("${com.tcoms.linkaggregation.service.name}")
    String tcomsLinkAggregationServiceName;

    @Value("${com.tcoms.linkaggregation.service.url}")
    String tcomsLinkAggregationServiceNameUrl;

    @Bean("configMap")
    public Map<String, String> getConfigData() {
        configData.put("tcomsLinkAggregationServiceName", tcomsLinkAggregationServiceName);
        configData.put("tcomsLinkAggregationServiceNameUrl", tcomsLinkAggregationServiceNameUrl);
        return configData;
    }

    @Bean
    public RestTemplate restTemplate(RestTemplateBuilder builder) {
        return builder
            .setConnectTimeout(Duration.ofMillis(20000))
            .setReadTimeout(Duration.ofMillis(100000))
            .messageConverters(new MappingJackson2HttpMessageConverter()) // Add this line
            .build();
    }
}
```

### LinkAggregationResponse Class

Ensure your `LinkAggregationResponse` class is properly set up for JSON serialization/deserialization:

```java
@JsonIgnoreProperties(ignoreUnknown = true)
public class LinkAggregationResponse {
    // Define your fields with proper annotations if needed
    // Example:
    // @JsonProperty("field_name")
    // private String fieldName;

    // Getters and setters
}
```

### LinkAggregationController, LinkAggregationService, LinkAggConfigService, and LinkAggregationUtil Classes

These classes generally do not require changes related to the error you're seeing, as the primary issue is with how the `RestTemplate` is configured. However, ensure that your `LinkAggregationResponse` class is correctly set up as noted above.

By adding the `MappingJackson2HttpMessageConverter` to the `RestTemplate`, you should be able to resolve the `UnknownContentTypeException` error. Let me know if you need further assistance!