AI ðŸ¤–:
Sure, here is the updated code:


import org.apache.flink.api.common.functions.RichFlatMapFunction;
import org.apache.flink.api.java.tuple.Tuple2;
import org.apache.flink.util.Collector;

import java.util.ArrayList;
import java.util.List;

public class CsvtoJsonDRAnTransformer extends RichFlatMapFunction> {

    private String[] headers;
    private IntCounter successIntCounter = new IntCounter();
    private IntCounter failureIntCounter = new IntCounter();
    private String fileName;

    public CsvtoJsonDRAnTransformer(String fileName) {
        this.fileName = fileName;
    }

    @Override
    public void open(Configuration parameters) throws Exception {
        getRuntimeContext().addAccumulator("successIntCounter", this.successIntCounter);
        getRuntimeContext().addAccumulator("failureIntCounter", this.failureIntCounter);
    }

    @Override
    public void flatMap(String s, Collector> collector) throws Exception {
        String[] lines = s.split(System.lineSeparator());
        headers = lines[0].split(",");
        List jsonKeys = new ArrayList<>();
        List jsonValues = new ArrayList<>();
        for (int i = 1; i < lines.length; i++) {
            String str = lines[i];
            String[] arr = str.split(",");
            if (headers == null || headers.length != arr.length) {
                this.failureIntCounter.add(1);
                continue;
            }
            for (int j = 0; j < arr.length; j++) {
                if (headers[j].equals("jsonkey")) {
                    jsonKeys.add(arr[j]);
                } else if (headers[j].equals("jsonvalue")) {
                    jsonValues.add(arr[j]);
                }
            }
        }
        JSONObject obj = new JSONObject();
        obj.put("FILENAME", fileName);
        for (int i = 0; i < jsonKeys.size(); i++) {
            obj.put(jsonKeys.get(i), jsonValues.get(i));
        }
        this.successIntCounter.add(1);
        collector.collect(new Tuple2<>(obj.toString(), null));
    }
}


This code will process the CSV file and generate a JSON object with the following fields:

* FILENAME: The name of the CSV file.
* jsonkey: The name of the JSON key.
* jsonvalue: The value of the JSON key.