import com.google.gson.JsonObject;
import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] lines = input.split(System.lineSeparator());
        JsonObject result = new JsonObject();

        String objectName = null;
        String sectionName = null;
        JsonObject sectionObject = null;

        for (String line : lines) {
            String[] arr = line.split(",");

            if (arr.length >= 3 && !arr[2].isEmpty()) {
                // Start of a new object
                if (objectName != null && sectionName != null && sectionObject != null) {
                    result.add(objectName + " - " + sectionName, sectionObject);
                }
                objectName = arr[2].trim();
                continue; // Skip the header row
            }

            // Check if there are enough columns
            if (arr.length >= 4) {
                if (sectionObject == null) {
                    sectionObject = new JsonObject();
                }

                sectionName = arr[0].trim();
                JsonObject metricObject = new JsonObject();
                metricObject.addProperty("Min", arr[1].trim());
                metricObject.addProperty("Average", arr[2].trim());
                metricObject.addProperty("Max", arr[3].trim());
                metricObject.addProperty("Cumulative Counter Value", arr[4].trim());
                sectionObject.add(sectionName, metricObject);
            }
        }

        // Add the last object if it exists
        if (objectName != null && sectionName != null && sectionObject != null) {
            result.add(objectName + " - " + sectionName, sectionObject);
        }

        collector.collect(result.toString());
    }
}
