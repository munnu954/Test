import org.apache.flink.api.common.functions.RichFlatMapFunction;
import org.apache.flink.configuration.Configuration;
import org.apache.flink.util.Collector;
import org.json.JSONArray;
import org.json.JSONObject;

public class CsvtoJsonMRFCnTransformer extends RichFlatMapFunction<String, String> {
    private String[] headers;
    private IntCounter successIntCounter = new IntCounter();
    private IntCounter failureIntCounter = new IntCounter();

    @Override
    public void open(Configuration parameters) throws Exception {
        getRuntimeContext().addAccumulator("successIntCounter", this.successIntCounter);
        getRuntimeContext().addAccumulator("failureIntCounter", this.failureIntCounter);
    }

    @Override
    public void flatMap(String s, Collector<String> collector) throws Exception {
        String[] lines = s.split(System.lineSeparator());
        String[] headerRow = lines[2].split(","); // Pick the 3rd line as the headers

        JSONObject obj = new JSONObject();

        // Process line 1 and line 2 as separate fields without hardcoding the keys
        for (int i = 0; i < 2; i++) {
            String[] lineComponents = lines[i].split(":");
            if (lineComponents.length == 2) {
                String jsonKey = lineComponents[0].replace("#", "").trim();
                String jsonValue = lineComponents[1].trim();
                obj.put(jsonKey, jsonValue);
            }
        }

        for (int i = 3; i < lines.length; i++) { // Start from the 4th line (index 3) as data lines
            String[] data = lines[i].split(",");
            if (headerRow.length == data.length) {
                JSONObject dataObj = new JSONObject();
                for (int j = 0; j < data.length; j++) {
                    String jsonKey = headerRow[j].trim().replace("\"", "");
                    String jsonValue = data[j].trim().replace("\"", "");
                    dataObj.put(jsonKey, jsonValue);
                }
                obj.append("DATA", dataObj); // Append the data to a unified "DATA" array within the main JSONObject
                this.successIntCounter.add(1);
            } else {
                this.failureIntCounter.add(1);
            }
        }

        collector.collect(obj.toString());
    }
}