Sure! Here's how you can write JUnit 5 test cases for the `CircuitDetailsProvider` class to cover both branches of the `if (null != response)` statement and ensure 100% code coverage. I'll also make sure to avoid the `NullPointerException` by mocking the necessary dependencies.

First, let's set up the test class:

```java
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.HttpMethod;

@ExtendWith(MockitoExtension.class)
public class CircuitDetailsProviderTest {

    @Mock
    private RestClientUtil restClientUtil;

    @InjectMocks
    private CircuitDetailsProvider circuitDetailsProvider;

    private static final String BASE_URL = "http://cktDetServiceName";
    private static final String CKT_DETAIL_URI = "/cktDetailUri";

    @BeforeEach
    void setUp() {
        // Mock the base URL and URI
        circuitDetailsProvider = spy(new CircuitDetailsProvider());
        doReturn(BASE_URL).when(circuitDetailsProvider).getBaseUrl();
        // Avoid NullPointerException by setting a non-null value for cktDetailUri
        setField(circuitDetailsProvider, "cktDetailUri", CKT_DETAIL_URI);
    }

    @Test
    void testGetCircuitDetails_ResponseNotNull() {
        String circuitId = "123";
        String sourceSys = "source";
        String cnd = "cnd";
        String phyModel = "phyModel";
        String finalUrl = BASE_URL + CKT_DETAIL_URI + "&cnd=" + cnd + "&phyModel=" + phyModel.trim();
        finalUrl = finalUrl.replace("#circuitId#", circuitId.trim());
        finalUrl = finalUrl.replace("#sourceSys#", sourceSys.trim());

        String mockResponse = "{\"someField\":\"someValue\"}";
        when(restClientUtil.callEndpoint(finalUrl, HttpMethod.GET, buildHeaders())).thenReturn(mockResponse);

        CircuitDetailResponse response = circuitDetailsProvider.getCircuitDetails(circuitId, sourceSys, cnd, phyModel);

        assertNotNull(response);
        assertEquals("someValue", response.getSomeField());
    }

    @Test
    void testGetCircuitDetails_ResponseNull() {
        String circuitId = "123";
        String sourceSys = "source";
        String cnd = "cnd";
        String phyModel = "phyModel";
        String finalUrl = BASE_URL + CKT_DETAIL_URI + "&cnd=" + cnd + "&phyModel=" + phyModel.trim();
        finalUrl = finalUrl.replace("#circuitId#", circuitId.trim());
        finalUrl = finalUrl.replace("#sourceSys#", sourceSys.trim());

        when(restClientUtil.callEndpoint(finalUrl, HttpMethod.GET, buildHeaders())).thenReturn(null);

        CircuitDetailResponse response = circuitDetailsProvider.getCircuitDetails(circuitId, sourceSys, cnd, phyModel);

        assertNull(response);
    }

    private HttpHeaders buildHeaders() {
        // Mock headers if needed
        return new HttpHeaders();
    }

    private void setField(Object targetObject, String fieldName, Object fieldValue) {
        try {
            Field field = targetObject.getClass().getDeclaredField(fieldName);
            field.setAccessible(true);
            field.set(targetObject, fieldValue);
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
}
```

### Explanation:
1. **Setup**: The `setUp` method ensures that the `cktDetailUri` is set to avoid `NullPointerException`.
2. **Test Cases**:
   - `testGetCircuitDetails_ResponseNotNull`: Tests the scenario where the response from `restClientUtil.callEndpoint` is not null.
   - `testGetCircuitDetails_ResponseNull`: Tests the scenario where the response from `restClientUtil.callEndpoint` is null.

This should cover both branches of the `if (null != response)` statement and ensure 100% code coverage for the `CircuitDetailsProvider` class. Let me know if you need any further assistance!

Source: Conversation with Copilot, 10/26/2024
(1) Writing Templates for Test Cases Using JUnit 5 - Baeldung. https://www.baeldung.com/junit5-test-templates.
(2) JUnit 5 Test @Suite with Examples - HowToDoInJava. https://howtodoinjava.com/junit5/junit5-test-suites-examples/.
(3) Writing Tests with JUnit 5 | The IntelliJ IDEA Blog - The JetBrains Blog. https://blog.jetbrains.com/idea/2020/09/writing-tests-with-junit-5/.
(4) A Guide to JUnit 5 - Baeldung. https://www.baeldung.com/junit-5.
(5) github.com. https://github.com/pranshuiitk/Direct2HomeSoftware-java-junit/tree/2abb95197b510fd88f6ffcdeb647eebcbecb6f68/src%2Ftest%2Fjava%2Fcom%2Ftechverito%2Fsattv%2Fservice%2FAuthenticationServiceTest.java.
(6) github.com. https://github.com/sgarbour/ovirt-engine/tree/5f8cc97df1378287e75e8cdcc9f5647a70c7545d/backend%2Fmanager%2Fmodules%2Fbll%2Fsrc%2Ftest%2Fjava%2Forg%2Fovirt%2Fengine%2Fcore%2Fbll%2Fstorage%2Fovfstore%2FProcessOvfUpdateForStoragePoolCommandTest.java.
(7) github.com. https://github.com/MarcinAmadeuszOlszewski/pet-clinic/tree/8b6945923a18653fb91bb163e9d083d69e927132/pet-clinic-web%2Fsrc%2Ftest%2Fjava%2Famadeuszx%2Fpetclinic%2Fspringpetclinic%2Fcontrollers%2FPetControllerTest.java.
(8) github.com. https://github.com/woowacourse-teams/2021-pick-git/tree/3c9eeb10f44b0dc1af77fa2396295d0b813d38e7/backend%2Fpick-git%2Fsrc%2Ftest%2Fjava%2Fcom%2Fwoowacourse%2Fpickgit%2Funit%2Fauthentication%2Fpresentation%2Finterceptor%2FIgnoreAuthenticationInterceptorTest.java.