import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

public class SpaceCollectorTest {

    @Test
    public void testEquals_SameObject_ReturnsTrue() {
        // Arrange
        SpaceCollector spaceCollector = new SpaceCollector("input.csv", 1, "http://example.com", 8080, "output.csv", ",", "csv");

        // Act
        boolean result = spaceCollector.equals(spaceCollector);

        // Assert
        assertTrue(result);
    }

    @Test
    public void testEquals_NullObject_ReturnsFalse() {
        // Arrange
        SpaceCollector spaceCollector = new SpaceCollector("input.csv", 1, "http://example.com", 8080, "output.csv", ",", "csv");

        // Act
        boolean result = spaceCollector.equals(null);

        // Assert
        assertFalse(result);
    }

    @Test
    public void testEquals_DifferentClass_ReturnsFalse() {
        // Arrange
        SpaceCollector spaceCollector = new SpaceCollector("input.csv", 1, "http://example.com", 8080, "output.csv", ",", "csv");
        Object obj = new Object();

        // Act
        boolean result = spaceCollector.equals(obj);

        // Assert
        assertFalse(result);
    }

    @Test
    public void testEquals_EqualInstances_ReturnsTrue() {
        // Arrange
        SpaceCollector spaceCollector1 = new SpaceCollector("input.csv", 1, "http://example.com", 8080, "output.csv", ",", "csv");
        SpaceCollector spaceCollector2 = new SpaceCollector("input.csv", 1, "http://example.com", 8080, "output.csv", ",", "csv");

        // Act
        boolean result = spaceCollector1.equals(spaceCollector2);

        // Assert
        assertTrue(result);
    }

    @Test
    public void testEquals_DifferentInputFilePath_ReturnsFalse() {
        // Arrange
        SpaceCollector spaceCollector1 = new SpaceCollector("input1.csv", 1, "http://example.com", 8080, "output.csv", ",", "csv");
        SpaceCollector spaceCollector2 = new SpaceCollector("input2.csv", 1, "http://example.com", 8080, "output.csv", ",", "csv");

        // Act
        boolean result = spaceCollector1.equals(spaceCollector2);

        // Assert
        assertFalse(result);
    }

    @Test
    public void testEquals_DifferentId_ReturnsFalse() {
        // Arrange
        SpaceCollector spaceCollector1 = new SpaceCollector("input.csv", 1, "http://example.com", 8080, "output.csv", ",", "csv");
        SpaceCollector spaceCollector2 = new SpaceCollector("input.csv", 2, "http://example.com", 8080, "output.csv", ",", "csv");

        // Act
        boolean result = spaceCollector1.equals(spaceCollector2);

        // Assert
        assertFalse(result);
    }

    @Test
    public void testEquals_DifferentUrl_ReturnsFalse() {
        // Arrange
        SpaceCollector spaceCollector1 = new SpaceCollector("input.csv", 1, "http://url1.com", 8080, "output.csv", ",", "csv");
        SpaceCollector spaceCollector2 = new SpaceCollector("input.csv", 1, "http://url2.com", 8080, "output.csv", ",", "csv");

        // Act
        boolean result = spaceCollector1.equals(spaceCollector2);

        // Assert
        assertFalse(result);
    }

    // Repeat similar test cases for other fields like port, outputFilePath, delimiters, and fileType
}