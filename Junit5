import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.lang.reflect.Field;
import java.util.Properties;

import org.apache.kafka.clients.producer.KafkaProducer;
import org.junit.jupiter.api.Test;

public class KafkaProducerServiceTest {

    @Test
    public void testReadObject() throws IOException, ClassNotFoundException {
        KafkaProducerService kafkaProducerService = new KafkaProducerService();
        KafkaProducer<String, String> mockProducer = mock(KafkaProducer.class);

        Field producerField = null;
        try {
            producerField = KafkaProducerService.class.getDeclaredField("producer");
            producerField.setAccessible(true);
            producerField.set(kafkaProducerService, mockProducer);
        } catch (NoSuchFieldException | IllegalAccessException e) {
            e.printStackTrace();
        }

        ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(new byte[0]));
        kafkaProducerService.readObject(ois);

        verify(mockProducer, times(1)).close();
        assertNotNull(kafkaProducerService.createProducer());
    }

    // Test for the catch block of createProducer method
    @Test
    public void testCreateProducerException() {
        KafkaProducerService kafkaProducerService = new KafkaProducerService();
        KafkaProducer<String, String> mockProducer = mock(KafkaProducer.class);

        try {
            Field producerField = KafkaProducerService.class.getDeclaredField("producer");
            producerField.setAccessible(true);
            producerField.set(kafkaProducerService, mockProducer);

            // Mocking the AppProperties to throw an exception
            AppProperties appPropMock = mock(AppProperties.class);
            when(appPropMock.setAndGetKafkaProducerSSLproperties()).thenThrow(new RuntimeException());
            kafkaProducerService.appProp = appPropMock;

            kafkaProducerService.createProducer();

        } catch (Exception e) {
            fail("Exception caught: " + e.getMessage());
        }
    }
}