public Optional<SpaceCollector> poll(int timeout) {
    ConsumerRecord<String, Object> consumerRecord = kafkaTemplate.executeInTransaction(operations -> {
        ListenableFuture<ConsumerRecord<String, Object>> future = operations.receive(topicName, timeout);
        try {
            return future.get();
        } catch (InterruptedException | ExecutionException e) {
            logger.error("Error while polling from Kafka", e);
            return null;
        }
    });

    if (consumerRecord != null) {
        SpaceCollector spaceCollector = (SpaceCollector) consumerRecord.value();
        return Optional.of(spaceCollector);
    } else {
        return Optional.empty();
    }
}