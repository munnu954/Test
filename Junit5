@Test
void testProcess_ifBranch() {
  
  // Create test data
  Node node = new Node();
  node.setSiteCode("siteCode1");
  List<Node> nodeList = new ArrayList<>();
  nodeList.add(node);
  
  Map<String, List<Node>> clliNodeMap = new HashMap<>();
  clliNodeMap.put("aclli", nodeList);
  
  CircuitInfo circuitInfo = new CircuitInfo();
  circuitInfo.setType("NAUTILUS SEGMENT");
  circuitInfo.setCircuitName("segmentName1");
  
  ClrComponent clrComponent = new ClrComponent();
  clrComponent.setType("segment");
  clrComponent.setCircuitComp(Collections.singletonList(circuitInfo));
  
  Link expectedLink = new Link();
  expectedLink.setLinkType("segment");
  expectedLink.addAttribute(new Attribute("segmentName", "segmentName1", "/site?id=123"));
  expectedLink.addAttribute(new Attribute("type", "NAUTILUS SEGMENT", "--"));
  expectedLink.addAttribute(new Attribute("serviceType", null, "--"));
  expectedLink.addAttribute(new Attribute("bandwidth", null, "--"));
  
  List<Link> links = new ArrayList<>();
  
  // Call the process method
  SegmentProcessor.getInstance().process(null, links, clrComponent, null, clliNodeMap, 0, null);
  
  // Validate the result
  assertEquals(1, links.size());
  Link actualLink = links.get(0);
  assertEquals(expectedLink, actualLink);
}

@Test
void testProcess_elseIfBranch() {
  
  // Create test data
  Node node = new Node();
  node.setSiteCode("siteCode1");
  List<Node> nodeList = new ArrayList<>();
  nodeList.add(node);
  
  Map<String, List<Node>> clliNodeMap = new HashMap<>();
  clliNodeMap.put("zclli", nodeList);
  
  CircuitInfo circuitInfo = new CircuitInfo();
  circuitInfo.setType("NAUTILUS SEGMENT");
  circuitInfo.setCircuitName("segmentName1");
  
  ClrComponent clrComponent = new ClrComponent();
  clrComponent.setType("segment");
  clrComponent.setCircuitComp(Collections.singletonList(circuitInfo));
  
  Link expectedLink = new Link();
  expectedLink.setLinkType("segment");
  expectedLink.addAttribute(new Attribute("segmentName", "segmentName1", "/site?id=123"));
  expectedLink.addAttribute(new Attribute("type", "NAUTILUS SEGMENT", "--"));
  expectedLink.addAttribute(new Attribute("serviceType", null, "--"));
  expectedLink.addAttribute(new Attribute("bandwidth", null, "--"));
  
  List<Link> links = new ArrayList<>();
  
  // Call the process method
  SegmentProcessor.getInstance().process(null, links, clrComponent, null, clliNodeMap, 0, null);
  
  // Validate the result
  assertEquals(1, links.size());
  Link actualLink = links.get(0);
  assertEquals(expectedLink, actualLink);
}