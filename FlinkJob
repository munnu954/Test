@Override
public void flatMap(String s, Collector<String> collector) throws Exception {
    String[] lines = s.split(System.lineSeparator());

    // Extract headers from line 13 (assuming it starts from index 0)
    headers = lines[12].split(",");

    for (int i = 13; i < lines.length; i++) {
        String str = lines[i];
        String[] arr = str.split(",");

        if (headers == null || headers.length != arr.length) {
            this.failureIntCounter.add(1);
            continue;
        }

        JSONObject obj = new JSONObject();

        // Adding headers and values from line 1 to line 11 as key-value pairs
        for (int j = 0; j < 11; j++) {
            String jsonkey = lines[j].split(",")[0].trim().replace("\"", "");
            String jsonvalue = lines[j].split(",")[1].trim().replace("\"", "").replace("\\/", "/");
            obj.put(jsonkey, jsonvalue);
        }

        obj.put("FILENAME", fileName);

        // Adding headers and values from line 13 (index 12) onwards
        for (int j = 0; j < arr.length; j++) {
            String jsonkey = headers[j].trim().replace("\"", "");
            String jsonvalue = arr[j].trim().replace("\"", "").replace("\\/", "/");
            
            // Handle date format conversion
            if (jsonvalue.matches("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}:\\d{2} UTC")) {
                SimpleDateFormat inputDateFormat = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss z");
                Date date = inputDateFormat.parse(jsonvalue);
                SimpleDateFormat outputDateFormat = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss z");
                jsonvalue = outputDateFormat.format(date);
            }
            
            obj.put(jsonkey, jsonvalue);
        }

        this.successIntCounter.add(1);
        collector.collect(obj.toString());
    }
}