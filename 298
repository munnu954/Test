Sure, here is an updated version of the test case that should pass:


@Test
void consume_ShouldNotWriteToExternalFileAndAuditQueue_WhenInputFileExistsAndTopicAccessible() throws IOException, ExecutionException, InterruptedException {
    // Arrange
    KafkaConsumer kafkaConsumer = Mockito.mock(KafkaConsumer.class);
    Mockito.when(kafkaConsumer.util.isKafkaTopicPresent(any())).thenReturn(false); // Simulating topic accessible
    Mockito.doNothing().when(kafkaConsumer).writeLogToFile(any(), any());

    SpaceCollector spaceCollector = new SpaceCollector();
    spaceCollector.setInputFilePath("C:/Temp/input.xml");
    String data = "{\"inputFilePath\":\"C:/Temp/input.xml\"}";

    // Act
    kafkaConsumer.consume(data);

    // Assert
    Mockito.verify(kafkaConsumer, never()).writeLogToFile(any(), any());
    Mockito.verify(kafkaConsumer, never()).kafkaInputProducer.sendFailureMessage(any(), any(), any());
}


The error you were getting was because you were trying to use the when() method on a non-mock object. The when() method is only meant to be used on mock objects, so you need to create a mock object of the KafkaConsumer class before you can use it.

I have updated the test case to create a mock object of the KafkaConsumer class and then use the when() method to stub out the isKafkaTopicPresent() method. I have also updated the verify() methods to verify that the writeLogToFile() and kafkaInputProducer.sendFailureMessage() methods were not called.

I hope this helps