To write JUnit 5 test cases for the `covertV3Format` method in the `IVAPPDeviceUtil` class, we need to cover all the branches and handle the potential exceptions to achieve 100% code coverage. Below is an example of how you can write these test cases:

```java
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.slf4j.Logger;
import org.springframework.test.util.ReflectionTestUtils;

import java.util.ArrayList;
import java.util.List;

public class IVAPPDeviceUtilTest {

    @InjectMocks
    private IVAPPDeviceUtil ivappDeviceUtil;

    @Mock
    private Logger logger;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.openMocks(this);
        ReflectionTestUtils.setField(ivappDeviceUtil, "LOGGER", logger);
    }

    @Test
    public void testCovertV3Format_success() throws NoDataFoundException {
        // Arrange
        UTSEquipmentList inputList = new UTSEquipmentList();
        EquipmentLst equipmentLst = new EquipmentLst();
        List<EquipmentContainer> equipmentContainers = new ArrayList<>();

        EquipmentContainer container = new EquipmentContainer();
        Location location = new Location();
        location.setLocationCode("LC123");
        VirtualNE virtualNE = new VirtualNE();
        virtualNE.setName("NE123");

        container.setLocation(location);
        container.setVirtualNE(virtualNE);
        equipmentContainers.add(container);

        equipmentLst.setEquipmentContainer(equipmentContainers);
        inputList.setEquipmentLst(equipmentLst);

        // Act
        UTSEquipmentList result = ivappDeviceUtil.covertV3Format(inputList);

        // Assert
        assertNotNull(result);
        assertNotNull(result.getEquipmentLst());
        assertEquals(1, result.getEquipmentLst().getEquipmentContainer().size());
        assertEquals("LC123", result.getEquipmentLst().getEquipmentContainer().get(0).getLocation().getLocationCode());
    }

    @Test
    public void testCovertV3Format_noDataFoundException() {
        // Arrange
        UTSEquipmentList inputList = new UTSEquipmentList();

        // Act & Assert
        assertThrows(NoDataFoundException.class, () -> {
            ivappDeviceUtil.covertV3Format(inputList);
        });
    }

    @Test
    public void testCovertV3Format_emptyEquipmentContainer() throws NoDataFoundException {
        // Arrange
        UTSEquipmentList inputList = new UTSEquipmentList();
        inputList.setEquipmentLst(new EquipmentLst());

        // Act
        UTSEquipmentList result = ivappDeviceUtil.covertV3Format(inputList);

        // Assert
        assertNotNull(result);
        assertNull(result.getEquipmentLst().getEquipmentContainer());
    }

    @Test
    public void testCovertV3Format_exceptionInIteration() throws NoDataFoundException {
        // Arrange
        UTSEquipmentList inputList = new UTSEquipmentList();
        EquipmentLst equipmentLst = new EquipmentLst();
        List<EquipmentContainer> equipmentContainers = new ArrayList<>();

        EquipmentContainer container = mock(EquipmentContainer.class);
        when(container.getLocation()).thenThrow(new RuntimeException("Test Exception"));

        equipmentContainers.add(container);
        equipmentLst.setEquipmentContainer(equipmentContainers);
        inputList.setEquipmentLst(equipmentLst);

        // Act
        UTSEquipmentList result = ivappDeviceUtil.covertV3Format(inputList);

        // Assert
        assertNotNull(result);
        verify(logger).error(eq("Exception Occurred in convertutsEquipmentListToUTS:"), any(RuntimeException.class));
    }
}
```

### Explanation:
1. **Setup with Mocks:** We use Mockito to mock the `Logger` and inject it into the `IVAPPDeviceUtil` class.
2. **Test Cases:**
   - **Success Case:** We create a valid `UTSEquipmentList` with data and verify that the method processes it correctly.
   - **NoDataFoundException Case:** We test the case where `UTSEquipmentList` is empty, which should throw a `NoDataFoundException`.
   - **Empty Equipment Container:** We test the case where `equipmentLst` has no `equipmentContainer`.
   - **Exception Handling:** We mock an exception during the iteration to ensure the catch block is executed and the error is logged.

These test cases cover all possible branches in the `covertV3Format` method for 100% code coverage.