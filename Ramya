import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;
import org.json.JSONObject;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    private JSONObject jsonObject;

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] values = input.split(","); // Assuming the CSV is comma-separated

        // Assuming the first column (C) contains the object name
        String objectName = values[2].trim();

        if (jsonObject != null) {
            // Save the completed object
            collector.collect(jsonObject.toString());
        }

        // Start a new JSON object for the current row
        jsonObject = new JSONObject();
        jsonObject.put("ObjectName", objectName);

        // Process other columns (A, B, D, E, F, G)
        jsonObject.put("Begin date", values[0].trim());
        jsonObject.put("End date", values[1].trim());
        jsonObject.put("Ticket number", values[3].trim());

        // Assuming the remaining columns represent sub-objects and their values
        for (int i = 4; i < values.length; i += 4) {
            String subObjectName = values[i].trim();
            JSONObject subObject = new JSONObject();
            subObject.put("Min", values[i + 1].trim());
            subObject.put("Average", values[i + 2].trim());
            subObject.put("Max", values[i + 3].trim());
            subObject.put("Cumulative counter value", "-");
            jsonObject.put(subObjectName, subObject);
        }
    }

    @Override
    public void close() {
        if (jsonObject != null) {
            collector.collect(jsonObject.toString());
            jsonObject = null;
        }
    }
}
