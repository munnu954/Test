public class ConsumerServiceTest {

    @Autowired
    private SpaceCollector spaceCollector;

    @Autowired
    private CollectorUtil collectorUtil;

    @InjectMocks
    private ConsumerService consumerService;

    @Mock
    private KafkaProducerService kafkaProducerService;

    @BeforeEach
    void setup() {
        MockitoAnnotations.openMocks(this);
    }
    
    @Test
    void givenOutputFilePathNotAccessible() throws Exception {
        Mockito.when(collectorUtil.getDateAsString(Mockito.any(Date.class))).thenReturn("2021-07-20T12:00:00");
        
        spaceCollector.setUrl("192.168.1.243");
        spaceCollector.setPort(8080);
        spaceCollector.setUserName("custom");
        spaceCollector.setPassword("sshcollector");
        spaceCollector.setInputFilePath("C:/Temp/sampleMeasInfoData.xml");
        spaceCollector.setOutputFilePath("");
        
        JsonNode auditQueueJSON = collectorUtil.buildAuditQueueJSON(spaceCollector,
                collectorUtil.getDateAsString(new Date()),
                collectorUtil.getDateAsString(new Date()), "", JobStatus.COLLECTION_FAILED);
        
        boolean result = consumerService.consume(spaceCollector);
        
        assertTrue(result);
        verify(kafkaProducerService).writeMessage(auditQueueJSON.toString(), "", "3459-DEV-COLLECTION-AUDIT-QUEUE");
    }
}