@Test
void testApplyPostingRule_TopologyObjectsNodeIsNull() {
    // Arrange
    Alarm alarm = new Alarm();
    PostingRule rule = new PostingRule();
    Map<String, Object> alarmMap = new HashMap<>();
    JsonNode jsonNode = MissingNode.getInstance();
    when(topologyApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), anyString())).thenReturn(ResponseEntity.ok().body(jsonNode.toString()));

    // Act
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);

    // Assert
    assertNull(result.getTopologyDetails());
}

@Test
void testApplyPostingRule_TopologyObjectsNodeIsArray() {
    // Arrange
    Alarm alarm = new Alarm();
    PostingRule rule = new PostingRule();
    Map<String, Object> alarmMap = new HashMap<>();
    ArrayNode arrayNode = new ObjectMapper().createArrayNode();
    JsonNode jsonNode = arrayNode;
    when(topologyApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), anyString())).thenReturn(ResponseEntity.ok().body(jsonNode.toString()));

    // Act
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);

    // Assert
    assertNull(result.getTopologyDetails());
}

@Test
void testApplyPostingRule_TopologyObjectEligibilityValueMatches() {
    // Arrange
    Alarm alarm = new Alarm();
    PostingRule rule = new PostingRule();
    Map<String, Object> alarmMap = new HashMap<>();
    ObjectNode objectNode = new ObjectMapper().createObjectNode();
    objectNode.put("componentId", "12345");
    ArrayNode arrayNode = new ObjectMapper().createArrayNode();
    arrayNode.add(objectNode);
    JsonNode jsonNode = arrayNode;
    when(topologyApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), anyString())).thenReturn(ResponseEntity.ok().body(jsonNode.toString()));
    when(utils.evaluateExpression(anyString(), anyMap())).thenReturn("12345");

    // Act
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);

    // Assert
    assertNotNull(result.getTopologyDetails());
}

@Test
void testApplyPostingRule_TopologyObjectEligibilityValueDoesNotMatch() {
    // Arrange
    Alarm alarm = new Alarm();
    PostingRule rule = new PostingRule();
    Map<String, Object> alarmMap = new HashMap<>();
    ObjectNode objectNode = new ObjectMapper().createObjectNode();
    objectNode.put("componentId", "54321");
    ArrayNode arrayNode = new ObjectMapper().createArrayNode();
    arrayNode.add(objectNode);
    JsonNode jsonNode = arrayNode;
    when(topologyApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), anyString())).thenReturn(ResponseEntity.ok().body(jsonNode.toString()));
    when(utils.evaluateExpression(anyString(), anyMap())).thenReturn("12345");

    // Act
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);

    // Assert
    assertNull(result.getTopologyDetails());
}