import static org.mockito.Mockito.*;

import org.apache.kafka.clients.consumer.Consumer;
import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.apache.kafka.clients.consumer.ConsumerRecords;
import org.junit.Test;

public class KafkaConsumerTest {

    @Test
    public void testKafkaConsumer() {
        // Mock consumer record
        ConsumerRecord<String, String> record = mock(ConsumerRecord.class);
        when(record.topic()).thenReturn("topic");
        when(record.offset()).thenReturn(0L);
        when(record.partition()).thenReturn(0);
        when(record.key()).thenReturn("key");
        when(record.value()).thenReturn("value");

        // Build the mock consumer records with the mock record
        ConsumerRecords<String, String> records = 
                new ConsumerRecords<>(new HashMap<>(), new ArrayList<>());

        // Set up the behavior of the consumer
        Consumer<String, String> consumer = mock(Consumer.class);
        when(consumer.poll(any())).thenReturn(records);

        // Call the consumer method
        consumer.poll(100);

        // Verify that the poll method was called once
        verify(consumer, times(1)).poll(100);
    }
}