@Test
void testApplyPostingRule_TopologyObjectsNodeIsNull() throws Exception {
    // Arrange
    Alarm alarm = new Alarm();
    PostingRule rule = new PostingRule();
    HashMap<String, Object> alarmMap = new HashMap<>();
    
    when(topoApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), anyString())).thenReturn(null);
    
    // Act
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);
    
    // Assert
    assertNull(result.getTopologyDetails());
}

@Test
void testApplyPostingRule_AlarmTopologyDetailsNotNull() throws Exception {
    // Arrange
    Alarm alarm = new Alarm();
    alarm.setTopologyDetails("{\"key\": \"value\"}");
    
    PostingRule rule = new PostingRule();
    HashMap<String, Object> alarmMap = new HashMap<>();
    
    when(topoApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), anyString())).thenReturn(ResponseEntity.ok("{\"key\": \"value\"}"));
    
    // Act
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);
    
    // Assert
    assertEquals("{\"key\": \"value\"}", result.getTopologyDetails());
}

@Test
void testApplyPostingRule_ExceptionInParsingTopologyData() throws Exception {
    // Arrange
    Alarm alarm = new Alarm();
    PostingRule rule = new PostingRule();
    HashMap<String, Object> alarmMap = new HashMap<>();
    
    when(topoApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), anyString())).thenReturn(ResponseEntity.ok("invalid json"));
    
    // Act
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);
    
    // Assert
    assertEquals(null, result.getTopologyDetails());
}
  
@Test
void testApplyPostingRule_AlarmedObjectNotNull() throws Exception {
    // Arrange
    Alarm alarm = new Alarm();
    PostingRule rule = new PostingRule();
    HashMap<String, Object> alarmMap = new HashMap<>();
    
    when(topoApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), anyString())).thenReturn(ResponseEntity.ok("{\"key\": \"value\"}"));
    
    // Act
    Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);
    
    // Assert
    assertEquals("{\"key\": \"value\"}", result.getTopologyDetails());
}