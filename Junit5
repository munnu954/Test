import static org.mockito.Mockito.doReturn;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import java.util.Optional;

class YourTestClass {

    @Mock
    private EmployeeRepository employeeRepo;

    @InjectMocks
    private YourServiceClass service;  // Assuming there is a service class using the employeeRepo

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testDeleteNonExistentRecord() {
        doReturn(Optional.empty()).when(employeeRepo).findById(999);

        Exception exception = assertThrows(ResourceNotFoundException.class, () -> {
            service.findById(999);  // Assuming there is a method findById in the service using employeeRepo
        });

        String expectedMessage = "Entity not found for id: 999";
        String actualMessage = exception.getMessage();

        assertTrue(actualMessage.contains(expectedMessage));
    }
}