Certainly! Below is the updated `CoconutServiceVersion3` class with the modified `queryBasedOnParameter` method to handle the conditions for `locationCLLI` and `siteName` as specified:

```java
@Service
public class CoconutServiceVersion3 {

    @Autowired
    CoconutDeviceDao coconutDeviceDao;

    @Autowired
    EuipmentListCoconutDeviceDao euipmentListCoconutDeviceDao;

    @Autowired
    EquipmentListCoconutDeviceV3Dao equipmentListCoconutDeviceV3Dao;

    private CoconutDeviceMSConstants coconutDeviceMSConstants;

    private static Logger logger = LoggerFactory.getLogger(CoconutServiceVersion3.class);

    // Newly created for v3api
    public UTSEquipmentList getCOCONUTEquipListV3(EquipmentInputRequest request, UTSEquipmentList utsEquipmentList) throws InternalServerErrorException, NoDataFoundException, InterruptedException, ExecutionException, DaoException {
        try {
            String qry = null;
            String fullQuery = null;
            Map<String, Object> criteria = request.getRequestParameters();
            qry = queryBasedOnParameter(criteria);
            fullQuery = "select COUNT(*) from (" + qry + ")";
            Integer skip = 0;
            Integer limit = 10;

            if (criteria.containsKey("pageNo")) {
                if (criteria.get("pageNo").equals("1")) {
                    skip = 0;
                } else {
                    skip = (Integer.parseInt(criteria.get("pageNo").toString()) * Integer.parseInt(criteria.get("size").toString()));
                    skip = skip - Integer.parseInt(criteria.get("size").toString());
                }
            } else {
                skip = 0;
            }

            if (criteria.containsKey("size")) {
                limit = skip + Integer.parseInt(criteria.get("size").toString());
            } else {
                limit = 10;
            }

            qry = "select * from (select t.*, rownum as rn from (" + qry;
            qry = qry.concat(" ) t ) WHERE rn BETWEEN " + skip + " and " + limit + " ");

            if (criteria.containsKey("sortByField")) {
                qry = qry.concat(" order by " + criteria.get("sortByField") + " ");
            }
            if (criteria.containsKey("sortDirection")) {
                qry = qry.concat(" " + criteria.get("sortDirection") + " ");
            }

            UTSEquipmentList response = new UTSEquipmentList();
            response = equipmentListCoconutDeviceV3Dao.getEquipListDaoV3(criteria, qry, fullQuery, utsEquipmentList, request);
            return response;
        } catch (Exception ex) {
            logger.error(ex.getMessage());
            throw new InternalServerErrorException(ex.getMessage());
        }
    }

    private String queryBasedOnParameter(Map<String, Object> queryParams) {
        StringJoiner finalQuery = new StringJoiner(" ");

        if ("LOCATION".equalsIgnoreCase((String) queryParams.get("outputControl"))) {
            finalQuery.add(coconutDeviceMSConstants.COCONUT_V3_SITE_QUERY);
        }

        boolean hasLocationCLLI = queryParams.containsKey("locationCLLI");
        boolean hasSiteName = queryParams.containsKey("siteName");

        if (hasLocationCLLI || hasSiteName) {
            finalQuery.add("WHERE");
        }

        if (hasLocationCLLI) {
            finalQuery.add("(site.clli_code = lower(:locationCLLI) OR site.clli_code = upper(:locationCLLI))");
        }

        if (hasLocationCLLI && hasSiteName) {
            finalQuery.add("AND");
        }

        if (hasSiteName) {
            finalQuery.add("site.site_name = :siteName");
        }

        return finalQuery.toString();
    }
}
```

### Explanation:

1. **Condition for `LOCATION`**:
   - The base query is added if the `outputControl` is `LOCATION`.

2. **Conditions for `locationCLLI` and `siteName`**:
   - Check if `locationCLLI` and/or `siteName` are present in the `queryParams` map.
   - If either is present, add a `WHERE` clause.
   - If `locationCLLI` is present, add the corresponding condition.
   - If both `locationCLLI` and `siteName` are present, add an `AND` between the conditions.
   - If `siteName` is present, add the corresponding condition.

This ensures that the final query is dynamically constructed based on the presence of `locationCLLI` and `siteName` in the query parameters.