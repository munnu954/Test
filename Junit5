import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

public class EventManagerTest {

    @InjectMocks
    private EventManager eventManager;

    @Mock
    private EventsRepository eventsRepository;

    @Mock
    private EventsValidator validator;

    @Test
    public void testSaveEvents_SystemException() throws Exception {
        // Mocking behavior to throw SystemException when convertAndSaveToEvents method is called
        when(eventsRepository.save(any(EventsEntity.class))).thenThrow(new SystemException("Mocked SystemException"));

        // Initialize mocks
        MockitoAnnotations.initMocks(this);

        // Creating a dummy request
        EventSaveRequest request = new EventSaveRequest();

        // Call the method under test
        EventResponse response = eventManager.saveEvents(request);

        // Verify that the status message is set to the exception message
        assertEquals("Mocked SystemException", response.getStatus().getMessage());
    }
}