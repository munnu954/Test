To submit a Flink job with command line parameters and read those parameters in the Flink job, you can follow the steps below.

First, submit the Flink job with command line parameters using the `flink run` command:

```bash
flink run -c com.example.MyFlinkJob /path/to/your/flink-job.jar --param1 value1 --param2 value2
```

In the Flink job, you can read the passed parameters using the `ParameterTool` class.

Here's an example of how you can read the parameters in your Flink job:

```java
import org.apache.flink.api.java.utils.ParameterTool;
import org.apache.flink.api.common.ExecutionConfig;
import org.apache.flink.api.common.Plan;
import org.apache.flink.api.java.ExecutionEnvironment;

public class MyFlinkJob {
    public static void main(String[] args) {
        // Read the input parameters using ParameterTool
        ParameterTool params = ParameterTool.fromArgs(args);
        
        // Read parameter values
        String param1 = params.get("param1", "defaultParam1Value");
        String param2 = params.get("param2", "defaultParam2Value");

        // Use the parameter values in your Flink job
        ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();
        env.getConfig().setGlobalJobParameters(params);

        // Your Flink job logic goes here
        // ...
    }
}
```

In this example, `ParameterTool.fromArgs(args)` is used to read the input parameters from the `main` method's `args` array. Afterwards, you can retrieve the parameter values using the `get` method. If a parameter is not present in the input, you can provide a default value as the second argument to the `get` method. For example, `params.get("param1", "defaultParam1Value")`.

You can also set the parameters as global job parameters in the Flink `ExecutionEnvironment` configuration as shown in the example above. This would allow you to access the global parameters from any part of your Flink job.

When you submit the Flink job with the command line parameters using the `flink run` command, Flink will pass the parameters to your Flink job, and you can retrieve and use them as shown in the example.