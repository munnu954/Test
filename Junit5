Sure! Below is the updated code for the `CoconutServiceVersion3` class, where the `queryBasedOnParameter` method has been modified to include the logic that checks for `locationCLLI` and `siteName` parameters in the `queryParams` map and conditionally appends the corresponding conditions to the `finalQuery`.

```java
@Service
public class CoconutServiceVersion3 {

    @Autowired
    CoconutDeviceDao coconutDeviceDao;

    @Autowired
    EuipmentListCoconutDeviceDao euipmentListCoconutDeviceDao;

    @Autowired
    EquipmentListCoconutDeviceV3Dao equipmentListCoconutDeviceV3Dao;

    private CoconutDeviceMSConstants coconutDeviceMSConstants;

    private static Logger logger = LoggerFactory.getLogger(CoconutServiceVersion3.class);

    // newly created for v3api
    public UTSEquipmentList getCOCONUTEquipListV3(EquipmentInputRequest request, UTSEquipmentList utsEquipmentList) throws InternalServerErrorException, NoDataFoundException, InterruptedException, ExecutionException, DaoException {
        try {
            String qry = null;
            String fullQuery = null;
            Map<String, Object> criteria = request.getRequestParameters();
            qry = queryBasedOnParameter(criteria);
            fullQuery = "select COUNT(*) from (" + qry + ")";
            Integer skip = 0;
            Integer limit = 10;
            if (criteria.containsKey("pageNo")) {
                if (criteria.get("pageNo").equals("1")) {
                    skip = 0;
                } else {
                    skip = (Integer.parseInt(criteria.get("pageNo").toString()) * Integer.parseInt(criteria.get("size").toString()));
                    skip = skip - Integer.parseInt(criteria.get("size").toString());
                }
            } else {
                skip = 0;
            }
            if (criteria.containsKey("size")) {
                limit = skip + Integer.parseInt(criteria.get("size").toString());
            } else {
                limit = 10;
            }
            qry = "select * from (select t.*, rownum as rn from (" + qry;
            qry = qry.concat(" ) t ) WHERE rn BETWEEN " + skip + " and " + limit + " ");
            if (criteria.containsKey("sortByField")) {
                qry = qry.concat(" order by " + criteria.get("sortByField") + " ");
            }
            if (criteria.containsKey("sortDirection")) {
                qry = qry.concat(" " + criteria.get("sortDirection") + " ");
            }
            UTSEquipmentList response = new UTSEquipmentList();
            response = equipmentListCoconutDeviceV3Dao.getEquipListDaoV3(criteria, qry, fullQuery, utsEquipmentList, request);
            return response;
        } catch (Exception ex) {
            logger.error(ex.getMessage());
            throw new InternalServerErrorException(ex.getMessage());
        }
    }

    private String queryBasedOnParameter(Map<String, Object> queryParams) {
        String query = "";
        StringJoiner finalQuery = new StringJoiner(" ");
        
        if ("LOCATION".equalsIgnoreCase((String) queryParams.get("outputControl"))) {
            finalQuery.add(coconutDeviceMSConstants.COCONUT_V3_SITE_QUERY);
            
            if (queryParams.containsKey("locationCLLI")) {
                finalQuery.add("AND (site.clli_code = lower(:locationCLLI) OR site.clli_code = upper(:locationCLLI))");
            }
            
            if (queryParams.containsKey("siteName")) {
                finalQuery.add("AND site.site_name = :siteName");
            }
        }
        
        return finalQuery.toString();
    }
}
```

In the `queryBasedOnParameter` method, the `finalQuery` StringJoiner is used to build the query string. It checks if `locationCLLI` and `siteName` parameters are present in the `queryParams` map, and if so, appends the corresponding conditions to the query. The resulting `finalQuery` will work even without `locationCLLI` or `siteName`.













Certainly! Here's the query formatted as a single line:

```sql
SELECT DISTINCT site.clli_code AS locationCLLI, site.site_name AS locationCode, site.site_name AS siteName, site.address AS "unparsedAddress", site.city as city, site.state AS state, site.country as country, site.zip_code as zip, site.site_code, 'COCONUT' AS "createdBySys" FROM gdnm_switch switch LEFT JOIN gdnm_hardware hardware ON switch.hardware_id = hardware.id LEFT JOIN gdnm_site site ON switch.site_id = site.id WHERE 1=1 AND (:locationCLLI IS NULL OR site.clli_code = lower(:locationCLLI) OR site.clli_code = upper(:locationCLLI)) AND (:siteName IS NULL OR site.site_name = :siteName)
```