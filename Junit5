import org.junit.jupiter.api.Test;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.HashMap;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

public class AlarmOperationsAPITest {

    @Test
    public void testGetTopologyTraversalObjectsList() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        AlarmOperationsAPI alarmOperationsAPI = new AlarmOperationsAPI();
        Method method = AlarmOperationsAPI.class.getDeclaredMethod("getTopologyTraversalObjectsList", String.class, HashMap.class);
        method.setAccessible(true);

        // Mock responseString
        String responseString = "{\"TBL_response\":{\"topologyObjects\":[{\"topoName\":\"Object1\"},{\"topoName\":\"Object2\"}]}}";
        HashMap<String, Object> alarmTagValueMap = new HashMap<>();

        // Mocking the utils from AlarmOperationsAPI as it's being used in the method
        AlarmRelationUtils utilsMock = mock(AlarmRelationUtils.class);
        when(utilsMock.evaluateExpression(anyString(), any())).thenReturn("Object1");

        // Set utilsMock instance using Reflection
        FieldUtils.writeField(alarmOperationsAPI, "utils", utilsMock, true);

        // Call the private method using Reflection
        Object result = method.invoke(alarmOperationsAPI, responseString, alarmTagValueMap);

        // Verify the result
        assertEquals(1, ((List<String>) result).size());
        assertEquals("Object1", ((List<String>) result).get(0));
    }
}