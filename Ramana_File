Here's a complete workable and executable Maven Java project code for the requirement:

1. Create a new Maven project in your IDE of choice.
2. Add the following dependencies to your pom.xml file:

```


<dependency>
    <groupId>org.json</groupId>
    <artifactId>json</artifactId>
    <version>20200518</version>
</dependency>


```

3. Create a new Java class called TextToJsonTransformer.

TextToJsonTransformer.java

```
import org.json.JSONObject;
import org.json.JSONTokener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class TextToJsonTransformer {
public static JSONObject transform(String filePath) throws IOException {
BufferedReader reader = new BufferedReader(new FileReader(filePath));
String line;
StringBuilder sb = new StringBuilder();
while ((line = reader.readLine()) != null) {
sb.append(line);
}
reader.close();
JSONTokener tokener = new JSONTokener(sb.toString());
return new JSONObject(tokener);
}
}
```

4. Create a new Java class called CustomTextDataTransformer.

CustomTextDataTransformer.java

```
import org.json.JSONObject;
import java.io.IOException;

public class CustomTextDataTransformer {
public static void main(String[] args) {
String filePath = "example.txt";
try {
JSONObject json = TextToJsonTransformer.transform(filePath);
System.out.println(json.toString());
} catch (IOException e) {
System.out.println("Error reading file: " + e.getMessage());
}
}
}
```

5. Create a new text file called example.txt in the project's root directory and add the following content:

```
{
"name": "John",
"age": 30,
"city": "New York"
}
```

6. Run the CustomTextDataTransformer class. This will read the example.txt file, transform it to JSON using the TextToJsonTransformer, and then print the generated JSON to the console. If there are any errors, they will be printed to the console.

That's it! You now have a complete workable and executable Maven Java project for converting text files to JSON.