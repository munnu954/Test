Certainly! Below is an example of a Java program that uses Java 8 Stream APIs to sort a list of employees in descending order based on their salary. The salary of the employee is calculated based on the department they belong to.

```java
import java.util.*;
import java.util.stream.Collectors;

class Employee {
    private String empName;
    private String department;
    private double salary;

    public Employee(String empName, String department) {
        this.empName = empName;
        this.department = department;
        this.salary = calculateSalary(department);
    }

    public String getEmpName() {
        return empName;
    }

    public String getDepartment() {
        return department;
    }

    public double getSalary() {
        return salary;
    }

    private double calculateSalary(String department) {
        // Example salary calculation based on department
        switch (department) {
            case "HR":
                return 50000;
            case "IT":
                return 70000;
            case "Finance":
                return 60000;
            case "Sales":
                return 55000;
            default:
                return 40000;
        }
    }

    @Override
    public String toString() {
        return String.format("Employee{name='%s', department='%s', salary=%.2f}", empName, department, salary);
    }

    public static void main(String[] args) {
        List<Employee> employees = Arrays.asList(
                new Employee("Alice", "IT"),
                new Employee("Bob", "HR"),
                new Employee("Charlie", "Finance"),
                new Employee("David", "Sales"),
                new Employee("Eve", "IT")
        );

        // Sorting and printing employees in descending order of their salary
        List<Employee> sortedEmployees = employees.stream()
                .sorted(Comparator.comparingDouble(Employee::getSalary).reversed())
                .collect(Collectors.toList());

        sortedEmployees.forEach(System.out::println);
    }
}
```

### Explanation
1. **Employee Class**: 
    - The `Employee` class has three attributes: `empName`, `department`, and `salary`.
    - The constructor takes `empName` and `department`, and calculates the `salary` based on the department using the `calculateSalary` method.

2. **calculateSalary Method**:
    - This method assigns a salary based on the department name. You can modify the salary values to fit your specific requirements.

3. **Main Method**:
    - A list of `Employee` objects is created.
    - The list is then sorted in descending order according to the `salary` attribute using Java 8 Stream APIs.
    - The sorted list is printed to the console.

You can run this program and it will print the list of employees sorted by their salary in descending order. You can also modify the departments and salary calculation logic as per your needs.