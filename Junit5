import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.slf4j.Logger;
import org.junit.jupiter.api.BeforeEach;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.when;

class KafkaConsumerTest {

    private KafkaConsumer kafkaConsumer;

    @Mock
    private CSVParser mockCSVParser;

    @BeforeEach
    void setUp() {
        kafkaConsumer = new KafkaConsumer();
    }

    @Test
    void testRetrieveCsvFile_Successful() throws IOException {
        FileReader fileReader = new FileReader("test.csv");
        when(mockCSVParser.iterator()).thenReturn(List.of(createMockCSVRecord()).iterator());

        List<String[]> rows = kafkaConsumer.retrieveCsvFile(fileReader, mockCSVParser);

        assertEquals(1, rows.size());
        assertArrayEquals(new String[]{"Data1", "Data2"}, rows.get(0));
    }

    private CSVRecord createMockCSVRecord() {
        CSVRecord record = Mockito.mock(CSVRecord.class);
        when(record.size()).thenReturn(2);
        when(record.get(0)).thenReturn("Data1");
        when(record.get(1)).thenReturn("Data2");
        return record;
    }
}