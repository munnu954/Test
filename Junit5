Sure! Here are some additional Junit5 testcases to achieve 100% code coverage of the MessageReaderService class:

```java
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

public class MessageReaderServiceTest {

    @Test
    public void testReadMessageSuccess() {
        MessageReaderService reader = new MessageReaderService();
        String message = reader.readMessage("test.txt");
        assertEquals("Hello, World!", message);
    }

    @Test
    public void testReadMessageFileNotFound() {
        MessageReaderService reader = new MessageReaderService();
        assertThrows(FileNotFoundException.class, () -> {
            reader.readMessage("non_existent_file.txt");
        });
    }

    @Test
    public void testReadMessageEmptyFile() {
        MessageReaderService reader = new MessageReaderService();
        assertThrows(IOException.class, () -> {
            reader.readMessage("empty_file.txt");
        });
    }
}
```

These testcases cover additional scenarios such as reading from a non-existent file and reading from an empty file. By combining these testcases with the ones already provided, you should be able to achieve 100% code coverage for the MessageReaderService class.