To achieve 100% code coverage for the given if block, we need to cover all possible scenarios including corner cases and edge cases. Below is an outline of the test cases along with sample code snippets:

1. Test when both sourceFilePath exists and Kafka topic is present:
```java
@Test
void testSourceFileExistsAndKafkaTopicPresent() {
    // Mock the dependency 'util' to return true for isKafkaTopicPresent(topic)
    Mockito.when(util.isKafkaTopicPresent(Mockito.anyString())).thenReturn(true);

    // Create a file in the sourceFilePath location
    File sourceFile = new File(sourceFilePath);
    sourceFile.createNewFile();

    // Call the method
    kafkaConsumer.consume("Test Data");

    // Add assertions to check the behavior
    // Assert that no exceptions were thrown or that the message was not logged
}
```

2. Test when sourceFilePath does not exist and Kafka topic is present:
```java
@Test
void testSourceFileNotExistsAndKafkaTopicPresent() {
    // Mock the dependency 'util' to return true for isKafkaTopicPresent(topic)
    Mockito.when(util.isKafkaTopicPresent(Mockito.anyString())).thenReturn(true);

    // Call the method
    kafkaConsumer.consume("Test Data");

    // Add assertions to check the behavior
    // Assert that the appropriate action is taken in case of non-existent file
}
```

3. Test when sourceFilePath exists but Kafka topic is not present:
```java
@Test
void testSourceFileExistsAndKafkaTopicNotPresent() {
    // Mock the dependency 'util' to return false for isKafkaTopicPresent(topic)
    Mockito.when(util.isKafkaTopicPresent(Mockito.anyString())).thenReturn(false);

    // Create a file in the sourceFilePath location
    File sourceFile = new File(sourceFilePath);
    sourceFile.createNewFile();

    // Call the method
    kafkaConsumer.consume("Test Data");

    // Add assertions to check the behavior
    // Assert that the appropriate action is taken in case of missing Kafka topic
}
```

4. Test when sourceFilePath does not exist and Kafka topic is not present:
```java
@Test
void testSourceFileNotExistsAndKafkaTopicNotPresent() {
    // Mock the dependency 'util' to return false for isKafkaTopicPresent(topic)
    Mockito.when(util.isKafkaTopicPresent(Mockito.anyString())).thenReturn(false);

    // Call the method
    kafkaConsumer.consume("Test Data");

    // Add assertions to check the behavior
    // Assert that the appropriate action is taken in case of both conditions being false
}
```

By covering these test cases, you will achieve 100% code coverage for the given `if` block in the `consume` method of the `KafkaConsumer` class.