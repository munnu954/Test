The `UnknownContentTypeException` you're encountering indicates that Spring's `RestTemplate` is unable to find a suitable `HttpMessageConverter` to convert the response body to the desired type, `LinkAggregationResponse`, with the content type `application/json`. Here's how you can resolve this issue:

1. **Ensure Correct Dependency**:
   - Make sure you have included the necessary dependencies for JSON processing in your `pom.xml` or `build.gradle`. For example, if you are using Jackson for JSON conversion, include:

   ```xml
   <!-- For Maven -->
   <dependency>
       <groupId>com.fasterxml.jackson.core</groupId>
       <artifactId>jackson-databind</artifactId>
       <version>2.14.2</version>
   </dependency>
   ```

   ```gradle
   // For Gradle
   implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
   ```

2. **Register HttpMessageConverters**:
   - Ensure that the `RestTemplate` is configured with the appropriate `HttpMessageConverter`. If it's not automatically configured, you can manually add the `MappingJackson2HttpMessageConverter`:

   ```java
   RestTemplate restTemplate = new RestTemplate();
   restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
   ```

3. **Verify Response Type**:
   - Ensure that the `LinkAggregationResponse` class is correctly annotated with Jackson annotations (if necessary) and that it matches the structure of the JSON response.

4. **Check Content-Type Header**:
   - Make sure the server is correctly setting the `Content-Type` header to `application/json`. You can log or inspect the response headers to confirm this.

5. **Test with a Simple Object**:
   - As a diagnostic step, try to receive the response as a `String` or a simple map (`Map<String, Object>`) to ensure you're getting the expected JSON. This can help isolate whether the issue is with the `RestTemplate` setup or the `LinkAggregationResponse` class.

6. **Debug Logging**:
   - Enable debug logging for `org.springframework.web.client` to get more detailed information about what's happening when the request is made.

By following these steps, you should be able to resolve the issue and correctly map the JSON response to your `LinkAggregationResponse` class.