import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.util.Properties;

import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.apache.kafka.clients.consumer.ConsumerRecords;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

class KafkaConsumerServiceTest {

    KafkaConsumerService kafkaConsumerService;

    @Mock
    private KafkaConsumer<String, String> kafkaConsumerMock;

    @BeforeEach
    void setup() {
        MockitoAnnotations.openMocks(this);
        kafkaConsumerService = new KafkaConsumerService();
        kafkaConsumerService.consumer = kafkaConsumerMock;
    }

    @Test
    void testGetConsumerProps() {
        Properties expectedProps = new Properties();
        expectedProps.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");
        expectedProps.put(ConsumerConfig.GROUP_ID_CONFIG, "test-group");
        expectedProps.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());
        expectedProps.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class.getName());
        expectedProps.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, "earliest");

        Properties actualProps = kafkaConsumerService.getConsumerProps();

        assertEquals(expectedProps, actualProps);
    }

    // Add more test cases to achieve 100% coverage of the getConsumerProps() method

}