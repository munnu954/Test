import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import com.fasterxml.jackson.databind.JsonNode;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

@ExtendWith(MockitoExtension.class)
public class AlarmOperationsAPITest {

    @Mock
    AlarmOperationsAPI alarmOperationsAPI;

    @Test
    public void testGetTopologyTraversalObjectsList() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        String responseString = "{ \"TBL_response\": { \"topologyObjects\": [ { \"topoObject\": \"XYZ\" }, { \"topoObject\": \"ABC\" } ] } }";
        HashMap<String, Object> alarmTagValueMap = new HashMap<>();

        Method getTopologyTraversalObjectsList = AlarmOperationsAPI.class.getDeclaredMethod("getTopologyTraversalObjectsList", String.class, HashMap.class);
        getTopologyTraversalObjectsList.setAccessible(true);

        when(alarmOperationsAPI.getTopologyTraversalObjectsList(responseString, alarmTagValueMap)).thenCallRealMethod();
        String result = (String) getTopologyTraversalObjectsList.invoke(alarmOperationsAPI, responseString, alarmTagValueMap);

        assertNotNull(result);
    }

}
