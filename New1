pom.xml dependencies:

<dependencies>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-csv</artifactId>
        <version>1.8</version>
    </dependency>
</dependencies>


Import statements:

import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


Here's an example SpringBoot code that reads an existing CSV file from a local folder location specified in the application.yml file:

1. Create a new SpringBoot project using Spring Initializr and add the following dependencies:

- Spring Web
- Spring Boot DevTools
- Apache Commons CSV

2. Create a new application.yml file in the src/main/resources directory and add the following properties:

csv:
  file-location: C:/data/sample.csv


3. Create a CsvReaderService class that reads the CSV file using the Apache Commons CSV library:

@Service
public class CsvReaderService {
    
    private static final Logger logger = LoggerFactory.getLogger(CsvReaderService.class);
    
    @Value("${csv.file-location}")
    private String csvFileLocation;
    
    public List<String[]> readCsvFile() {
        List<String[]> rows = new ArrayList<>();
        
        try (CSVParser parser = new CSVParser(new FileReader(csvFileLocation), CSVFormat.DEFAULT)) {
            for (CSVRecord record : parser) {
                String[] row = new String[record.size()];
                
                for (int i = 0; i < record.size(); i++) {
                    row[i] = record.get(i);
                }
                
                rows.add(row);
            }
            
            logger.info("Successfully read {} rows from CSV file {}", rows.size(), csvFileLocation);
        } catch (IOException e) {
            logger.error("Error reading CSV file {}", csvFileLocation, e);
        }
        
        return rows;
    }
}


4. Create a CsvReaderController class that exposes an endpoint to read the CSV file:

@RestController
@RequestMapping("/csv")
public class CsvReaderController {
    
    @Autowired
    private CsvReaderService csvReaderService;
    
    @GetMapping("/read")
    public List<String[]> readCsvFile() {
        return csvReaderService.readCsvFile();
    }
}


5. Run the SpringBoot application and access the endpoint at http://localhost:8080/csv/read to read the CSV file. The file location is specified in the application.yml file and can be easily changed without modifying the code.