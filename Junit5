To fix the "UnknownContentTypeException" error and ensure that the `RestTemplate` can handle the conversion of JSON responses to `LinkAggregationResponse` objects, you can make the following adjustments in your code:

1. **Update AppConfig class**:
   - Add the `MappingJackson2HttpMessageConverter` to the `RestTemplate` bean.

```java
@Configuration
public class AppConfig {
    Map<String, String> configData = new HashMap<>();

    @Value("${com.tcoms.linkaggregation.service.name}")
    String tcomsLinkAggregationServiceName;

    @Value("${com.tcoms.linkaggregation.service.url}")
    String tcomsLinkAggregationServiceNameUrl;

    @Bean("configMap")
    public Map<String, String> getConfigData() {
        configData.put("tcomsLinkAggregationServiceName", tcomsLinkAggregationServiceName);
        configData.put("tcomsLinkAggregationServiceNameUrl", tcomsLinkAggregationServiceNameUrl);
        return configData;
    }

    @Bean
    public RestTemplate restTemplate(RestTemplateBuilder builder) {
        RestTemplate restTemplate = builder
                .setConnectTimeout(Duration.ofMillis(20000))
                .setReadTimeout(Duration.ofMillis(100000))
                .build();
        restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
        return restTemplate;
    }
}
```

2. **Update LinkAggregationUtil class**:
   - Ensure that the `RestTemplate` bean is properly injected and used for making REST API calls.

3. **Reframe updated classes**:
   - To solve the serialization/deserialization issue and properly handle JSON responses, you need to adjust the classes where the `LinkAggregationResponse` object is used. This may include `LinkAggregationController`, `LinkAggregationService`, `LinkAggConfigService`, and any other classes where the response object is processed.

4. **Code Changes**:
   - In the classes where you receive the JSON response using `RestTemplate`, make sure the `RestTemplate` instance with `MappingJackson2HttpMessageConverter` is used to parse the response into instances of `LinkAggregationResponse`.

By ensuring that the `RestTemplate` is configured with the `MappingJackson2HttpMessageConverter`, you should be able to resolve the issue of converting JSON responses to `LinkAggregationResponse` objects.

If you need specific code changes or further assistance in reframing the updated classes, please provide more details on how the `LinkAggregationResponse` is used in those classes.