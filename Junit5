Here's an example of how you can write JUnit 5 test cases for the `MtnInsightsValidator` class to achieve 100% code coverage:

```
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class MtnInsightsValidatorTest {

    private MtnInsightsValidator validator = new MtnInsightsValidator();

    @Test
    public void testValidate_MandatoryFieldsPresent() {
        MtnInsightsRequest request = new MtnInsightsRequest();
        request.setRequestType(InsightsRequestType.INSERTMTNINSIGHTS);
        MtnInsightsAttributes attributes = new MtnInsightsAttributes();
        attributes.setMtn("123");
        attributes.setInsightCategory("category");
        attributes.setInsightName("name");
        attributes.setEcpdId("ecpdId");
        attributes.setOutageId("outageId");
        request.setKeyAttributes(attributes);
        ServiceHeader serviceHeader = new ServiceHeader();
        serviceHeader.setClientId("client");
        serviceHeader.setClientTransactionId("transaction");
        serviceHeader.setServiceName("service");
        request.setServiceHeader(serviceHeader);

        assertDoesNotThrow(() -> validator.validate(request));
    }

    @Test
    public void testValidate_InvalidRequestType() {
        MtnInsightsRequest request = new MtnInsightsRequest();
        request.setRequestType(InsightsRequestType.INVALID);
        ServiceHeader serviceHeader = new ServiceHeader();
        serviceHeader.setClientId("client");
        serviceHeader.setClientTransactionId("transaction");
        serviceHeader.setServiceName("service");
        request.setServiceHeader(serviceHeader);

        assertThrows(InvalidRequestException.class, () -> validator.validate(request));
    }

    @Test
    public void testValidate_MissingKeyAttributes() {
        MtnInsightsRequest request = new MtnInsightsRequest();
        request.setRequestType(InsightsRequestType.INSERTMTNINSIGHTS);
        ServiceHeader serviceHeader = new ServiceHeader();
        serviceHeader.setClientId("client");
        serviceHeader.setClientTransactionId("transaction");
        serviceHeader.setServiceName("service");
        request.setServiceHeader(serviceHeader);

        assertThrows(InvalidRequestException.class, () -> validator.validate(request));
    }

    @ParameterizedTest
    @MethodSource("provideMyBizScenarios")
    public void testValidate_MyBizScenarios(String mtn, String insightCategory, String insightName, String expectedErrorMessage) {
        MtnInsightsRequest request = new MtnInsightsRequest();
        request.setRequestType(InsightsRequestType.INSERTMTNINSIGHTS);
        MtnInsightsAttributes attributes = new MtnInsightsAttributes();
        attributes.setMtn(mtn);
        attributes.setInsightCategory(insightCategory);
        attributes.setInsightName(insightName);
        attributes.setEcpdId("ecpdId");
        attributes.setOutageId("outageId");
        request.setKeyAttributes(attributes);
        ServiceHeader serviceHeader = new ServiceHeader();
        serviceHeader.setClientId("client");
        serviceHeader.setClientTransactionId("transaction");
        serviceHeader.setServiceName("service");
        request.setServiceHeader(serviceHeader);

        if (expectedErrorMessage != null) {
            assertThrows(InvalidRequestException.class, () -> validator.validate(request));
        } else {
            assertDoesNotThrow(() -> validator.validate(request));
        }
    }

    private static Stream<Arguments> provideMyBizScenarios() {
        return Stream.of(
                Arguments.of("123", "", "", EventLedgerConstants.LOGGER_MESSAGE_MYBIZ),
                Arguments.of("", "category", "name", EventLedgerConstants.LOGGER_MESSAGE_MYBIZ),
                Arguments.of("123", "category", "", EventLedgerConstants.LOGGER_MESSAGE_MYBIZ),
                Arguments.of("", "", "", EventLedgerConstants.LOGGER_MESSAGE_MYBIZ),
                Arguments.of("123", EventLedgerConstants.INSIGHT_CATEGORY_MYBIZZ, EventLedgerConstants.INSIGHT_NAME_MYBIZZ.get(0), null)
        );
    }

    @Test
    public void testValidateSearch_MandatoryFieldsPresent() {
        MtnInsightsSearchRequest request = new MtnInsightsSearchRequest();
        MtnInsightsSearchParam searchParam = new MtnInsightsSearchParam();
        searchParam.setMtn("123");
        searchParam.setEcpdId("ecpdId");
        searchParam.setInsightCategory(new String[]{"category"});
        searchParam.setInsightName(new String[]{"name"});
        request.setServiceRequest(searchParam);
        ServiceHeader serviceHeader = new ServiceHeader();
        serviceHeader.setClientId("client");
        serviceHeader.setClientTransactionId("transaction");
        serviceHeader.setServiceName("service");
        request.set
```