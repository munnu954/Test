@Test
void testCreateAlarm_PerceivedSeverityNullAndStateIsCleared() throws Exception {
    // Arrange
    ObjectMapper obj = new ObjectMapper();
    Map<String, Integer> percMap = new HashMap<>();
    Map<String, Integer> stateMap = new HashMap<>();
    
    percMap.put("Other", 6);
    stateMap.put("cleared", 6);
    
    when(postgresConf.getAlarmTypeMap()).thenReturn(percMap);
    when(postgresConf.getPerceivedSeverityMap()).thenReturn(percMap);
    when(postgresConf.getAlarmStateMap()).thenReturn(stateMap);
    
    String j = "{ \"externalAlarmId\":\"pqwer\", \"State\":\"cleared\",\"sequenceId\":\"23423\"}";
    JsonNode json = obj.readTree(j);
    
    // Act
    Alarm result = alarmRepositoryImpl.createAlarm(j);
    
    // Assert
    assertEquals(-1, result.getPerceivedSeverity());
}

@Test
void testCreateAlarm_PerceivedSeverityEmptyAndStateIsCleared() throws Exception {
    // Arrange
    ObjectMapper obj = new ObjectMapper();
    Map<String, Integer> percMap = new HashMap<>();
    Map<String, Integer> stateMap = new HashMap<>();
    
    percMap.put("Other", 6);
    stateMap.put("cleared", 6);
    
    when(postgresConf.getAlarmTypeMap()).thenReturn(percMap);
    when(postgresConf.getPerceivedSeverityMap()).thenReturn(percMap);
    when(postgresConf.getAlarmStateMap()).thenReturn(stateMap);
    
    String j = "{ \"externalAlarmId\":\"pqwer\", \"State\":\"cleared\",\"sequenceId\":\"23423\", \"perceivedSeverity\": \"\"}";
    JsonNode json = obj.readTree(j);
    
    // Act
    Alarm result = alarmRepositoryImpl.createAlarm(j);
    
    // Assert
    assertEquals(-1, result.getPerceivedSeverity());
}

@Test
void testCreateAlarm_NoMatchedPerceivedSeverityAndStateIsCleared() throws Exception {
    // Arrange
    ObjectMapper obj = new ObjectMapper();
    Map<String, Integer> percMap = new HashMap<>();
    Map<String, Integer> stateMap = new HashMap<>();
    
    percMap.put("Other", 6);
    stateMap.put("cleared", 6);
    
    when(postgresConf.getAlarmTypeMap()).thenReturn(percMap);
    when(postgresConf.getPerceivedSeverityMap()).thenReturn(percMap);
    when(postgresConf.getAlarmStateMap()).thenReturn(stateMap);
    
    String j = "{ \"externalAlarmId\":\"pqwer\", \"State\":\"cleared\",\"sequenceId\":\"23423\", \"perceivedSeverity\": \"Unknown\"}";
    JsonNode json = obj.readTree(j);
    
    // Act
    Alarm result = alarmRepositoryImpl.createAlarm(j);
    
    // Assert
    assertEquals(postgresConf.getPerceivedSeverityMap().get(postgresConf.getPerceivedSeverityIndeterminate()), result.getPerceivedSeverity());
}