import org.junit.jupiter.api.Test;
import java.util.Set;
import java.util.HashSet;
import static org.junit.jupiter.api.Assertions.*;

public class AlarmRepositoryImplTest {

    @Test
    public void testMergeArrayMethodWithNonNullTagFromDb() throws Exception {
        Alarm alarm = new Alarm();
        alarm.setTag(new String[]{"tag1", "tag2"});

        AlarmRepositoryImpl alarmRepositoryImpl = new AlarmRepositoryImpl();
        Method method = AlarmRepositoryImpl.class.getDeclaredMethod("mergeArrayMethod", Object.class, Alarm.class);
        method.setAccessible(true);

        // Mocking tagFromDb as an array of strings
        Object tagFromDb = new String[]{"tag3", "tag4"};

        Set<String> result = (Set<String>) method.invoke(alarmRepositoryImpl, tagFromDb, alarm);

        assertEquals(4, result.size());
        assertTrue(result.contains("tag1"));
        assertTrue(result.contains("tag2"));
        assertTrue(result.contains("tag3"));
        assertTrue(result.contains("tag4"));
    }

    @Test
    public void testMergeArrayMethodWithNullTagFromDb() throws Exception {
        Alarm alarm = new Alarm();
        alarm.setTag(new String[]{"tag1", "tag2"});

        AlarmRepositoryImpl alarmRepositoryImpl = new AlarmRepositoryImpl();
        Method method = AlarmRepositoryImpl.class.getDeclaredMethod("mergeArrayMethod", Object.class, Alarm.class);
        method.setAccessible(true);

        // Mocking tagFromDb as null
        Object tagFromDb = null;

        Set<String> result = (Set<String>) method.invoke(alarmRepositoryImpl, tagFromDb, alarm);

        assertEquals(2, result.size());
        assertTrue(result.contains("tag1"));
        assertTrue(result.contains("tag2"));
    }

    @Test
    public void testConvertTagToStringArray() throws Exception {
        AlarmRepositoryImpl alarmRepositoryImpl = new AlarmRepositoryImpl();

        // Mocking tagFromDb as an object that needs to be converted to a String array
        Object tagFromDb = new String[]{"tag3", "tag4"};

        Method convertTagToStringArrayMethod = AlarmRepositoryImpl.class.getDeclaredMethod("convertTagToStringArray", Object.class);
        convertTagToStringArrayMethod.setAccessible(true);

        String[] result = (String[]) convertTagToStringArrayMethod.invoke(alarmRepositoryImpl, tagFromDb);

        assertArrayEquals(new String[]{"tag3", "tag4"}, result);
    }

    @Test
    public void testAddTagsToSet() throws Exception {
        AlarmRepositoryImpl alarmRepositoryImpl = new AlarmRepositoryImpl();

        // Mocking a string array to add to a set
        String[] tags = new String[]{"tag1", "tag2"};

        Method addTagsToSetMethod = AlarmRepositoryImpl.class.getDeclaredMethod("addTagsToSet", String[].class);
        addTagsToSetMethod.setAccessible(true);

        Set<String> result = (Set<String>) addTagsToSetMethod.invoke(alarmRepositoryImpl, tags);

        Set<String> expectedSet = new HashSet<>();
        expectedSet.add("tag1");
        expectedSet.add("tag2");

        assertEquals(expectedSet, result);
    }
}