import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;

import javax.sql.DataSource;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.*;

public class DataSourceConfigTest {

    @InjectMocks
    private DataSourceConfig dataSourceConfig;

    @Mock
    private DataSourceModal dataSourceModal;

    @Mock
    private EntityManagerFactoryBuilder entityManagerFactoryBuilder;

    @Mock
    private DataSource dataSource;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
        when(dataSourceModal.getUrl()).thenReturn("jdbc:h2:mem:testdb");
        when(dataSourceModal.getUsername()).thenReturn("sa");
        when(dataSourceModal.getPassword()).thenReturn("");
        when(dataSourceModal.getDriver()).thenReturn("org.h2.Driver");
    }

    @Test
    public void testEntityManagerFactoryBean() {
        // Arrange
        when(entityManagerFactoryBuilder.dataSource(dataSource)).thenReturn(entityManagerFactoryBuilder);
        when(entityManagerFactoryBuilder.packages("com.verizon.vbg.ledger.entity")).thenReturn(entityManagerFactoryBuilder);
        when(entityManagerFactoryBuilder.persistenceUnit("fallout-db")).thenReturn(entityManagerFactoryBuilder);
        
        LocalContainerEntityManagerFactoryBean expectedEntityManagerFactory = new LocalContainerEntityManagerFactoryBean();
        when(entityManagerFactoryBuilder.build()).thenReturn(expectedEntityManagerFactory);

        // Act
        LocalContainerEntityManagerFactoryBean result = dataSourceConfig.entityManagerFactoryBean(entityManagerFactoryBuilder, dataSource);

        // Assert
        assertNotNull(result);
        verify(entityManagerFactoryBuilder).dataSource(dataSource);
        verify(entityManagerFactoryBuilder).packages("com.verizon.vbg.ledger.entity");
        verify(entityManagerFactoryBuilder).persistenceUnit("fallout-db");
        verify(entityManagerFactoryBuilder).build();
    }
}