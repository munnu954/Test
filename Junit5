import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import javax.sql.DataSource;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;

import com.verizon.vbg.ledger.config.DataSourceConfig;
import com.verizon.vbg.ledger.model.DataSourceModal;

@ExtendWith(MockitoExtension.class)
public class DataSourceConfigTest {

    @InjectMocks
    private DataSourceConfig dataSourceConfig;

    @Mock
    private DataSourceModal dataSourceModal;

    @Mock
    private EntityManagerFactoryBuilder entityManagerFactoryBuilder;

    @Test
    public void testEntityManagerFactoryBean() {
        // Mock DataSource
        DataSource dataSource = mock(DataSource.class);
        when(dataSourceModal.getUrl()).thenReturn("jdbc:h2:mem:testdb");
        when(dataSourceModal.getUsername()).thenReturn("user");
        when(dataSourceModal.getPassword()).thenReturn("password");
        when(dataSourceModal.getDriver()).thenReturn("org.h2.Driver");
        when(dataSourceConfig.falloutDataSource()).thenReturn(dataSource);

        // Mock EntityManagerFactoryBuilder
        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = mock(LocalContainerEntityManagerFactoryBean.class);
        when(entityManagerFactoryBuilder.dataSource(dataSource)).thenReturn(entityManagerFactoryBuilder);
        when(entityManagerFactoryBuilder.packages("com.verizon.vbg.ledger.entity")).thenReturn(entityManagerFactoryBuilder);
        when(entityManagerFactoryBuilder.persistenceUnit("fallout-db")).thenReturn(entityManagerFactoryBuilder);
        when(entityManagerFactoryBuilder.build()).thenReturn(entityManagerFactoryBean);

        // Call the method
        LocalContainerEntityManagerFactoryBean result = dataSourceConfig.entityManagerFactoryBean(entityManagerFactoryBuilder, dataSource);

        // Assertions
        assertThat(result).isEqualTo(entityManagerFactoryBean);
    }
}