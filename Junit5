   @Test
    public void testApplyGroupingClearingLogic_RuleIsNull() {
        // Arrange
        HashMap<String, Object> alarmMap = new HashMap<>();
        String alarmIdentity = "test-alarm-id";

        // Simulate a generated alarm situation
        when(utils.isGeneratedAlarm(alarmMap)).thenReturn(false);
        
        // Mock GroupingContributors to return a list
        GroupingContributors contributor = new GroupingContributors();
        GroupingAlarms groupingAlarms = new GroupingAlarms();
        groupingAlarms.setGroupingId(1);
        groupingAlarms.setRuleId(1L); // Example ID
        groupingAlarms.setGroupingCreated(true);
        groupingAlarms.setContributorsCount(1);
        
        contributor.setGroupingAlarms(groupingAlarms);
        List<GroupingContributors> contributorList = new ArrayList<>();
        contributorList.add(contributor);
        
        // Setup repository to return contributors list
        when(groupingContributorsRepo.getGroupingContributorsByIdentity(alarmIdentity))
                .thenReturn(Optional.of(contributorList));

        // Mock repository to return the grouping alarm
        when(groupingAlarmsRepo.getGroupingAlarmByGroupingId(anyInt()))
                .thenReturn(Optional.of(groupingAlarms));

        // Mock the RulesLoadingService to return a null rule
        when(RulesLoadingService.getRuleMap().get(anyLong())).thenReturn(null);

        // Act
        groupingService.applyGroupingClearingLogic(alarmMap, alarmIdentity);

        // Assert: You could check if log messages were recorded
        // This requires using a log capturing technique or library
        // For example, LogCaptor can be used here to verify the log entry

        // Verify that the warn log indicates the rule is null
        Logger logger = LoggerFactory.getLogger(GroupingService.class);
        String expectedWarningMessage = "Rule is null for GroupingAlarm with ID: 1";
        // Capture log output to assert that it was logged correctly
        // Example: (using LogCaptor)
        // LogCaptor logCaptor = LogCaptor.forClass(GroupingService.class);
        // List<String> warnLogs = logCaptor.getWarnLogs();
        // assertTrue(warnLogs.contains(expectedWarningMessage)); // Check if the warning log is present
    }