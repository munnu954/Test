public HashMap<String, Object> removeNullValuesInJsonAttributes(Map<String, Object> msg) {
    HashMap<String, Object> resultMsg = new HashMap<>(msg);
    try {
        for (Map.Entry<String, Object> iterate : msg.entrySet()) {
            Object value = iterate.getValue();

            if (value != null && !value.toString().trim().isEmpty()) {
                // Ensure proper JSON serialization and deserialization before processing
                if (checkIfJsonValue(value)) {
                    try {
                        HashMap<String, Object> updatedMsg = removeNullValuesInJsonAttributes(
                            RulesConstants.getObjectMapper().readValue(
                                RulesConstants.getObjectMapper().writeValueAsString(value), HashMap.class
                            )
                        );
                        resultMsg.put(iterate.getKey(), updatedMsg);
                    } catch (Exception e) {
                        logger.error("Failed to parse JSON for key: " + iterate.getKey() + ", value: " + value, e);
                    }
                } else {
                    resultMsg.put(iterate.getKey(), value);
                }
            } else {
                // Remove null or empty values
                resultMsg.remove(iterate.getKey());
            }
        }
    } catch (Exception e) {
        logger.error("Exception occurred while trying to remove null/empty values from JSON attributes: ", e);
    }
    return resultMsg;
}