import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class AlarmRepositoryImplTest {

    @Test
    public void testCreateAlarm_PerceivedSeverityIsNull_StateIsCleared() throws Exception {
        // Mock necessary objects
        AlarmRepositoryImpl alarmRepository = new AlarmRepositoryImpl();
        Alarm alarm = new Alarm();
        alarmRepository.setPostgresConf(mock(PostgresConf.class));

        // Mock the postgresConf and its methods
        PostgresConf postgresConf = alarmRepository.getPostgresConf();
        when(postgresConf.getAlarmStateMap()).thenReturn(Collections.singletonMap("Cleared", 1));
        when(postgresConf.getAlarmStateMap().get(postgresConf.getAlarmStateCleared())).thenReturn(1);

        // Mock the input message with null perceivedSeverity
        String msg = "{\"perceivedSeverity\": null, \"State\": \"Cleared\"}";

        // Create the alarm
        Alarm createdAlarm = alarmRepository.createAlarm(msg);

        // Validate the perceivedSeverity value in the created alarm
        assertEquals(-1, createdAlarm.getPerceivedSeverity());
    }
    
    // Add similar test methods to cover all branches of the specified block

}