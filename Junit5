import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import org.junit.jupiter.api.Test;
import java.util.HashMap;
import java.util.Map;
import static org.junit.jupiter.api.Assertions.assertEquals;

class AlarmPostingUtilsTest {

    @Test
    void testParse() throws JsonProcessingException {
        Map<String, Object> srcMap = new HashMap<>();
        srcMap.put("key1", "value1");
        srcMap.put("key2", "value2");

        String value = "Test %key1%";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals("Test value1", result);
    }

    @Test
    void testParseWithArrayIndex() throws JsonProcessingException {
        Map<String, Object> srcMap = new HashMap<>();
        srcMap.put("key1", "value1");
        srcMap.put("key2", "value2");
        srcMap.put("key3", new String[]{"element1", "element2"});

        String value = "Test %key3[1]%";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
    assertEquals("Test element2", result);
    }

    @Test
    void testParseWithNestedAttributes() throws JsonProcessingException {
        Map<String, Object> srcMap = new HashMap<>();
        srcMap.put("key1", "value1");
        srcMap.put("key2", "value2");
        Map<String, Object> nestedMap = new HashMap<>();
        nestedMap.put("nestedKey", "nestedValue");
        srcMap.put("nested", nestedMap);

        String value = "Test %nested:nestedKey%";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals("Test nestedValue", result);
    }

    @Test
    void testParseWithMissingAttributes() throws JsonProcessingException {
        Map<String, Object> srcMap = new HashMap<>();
        srcMap.put("key1", "value1");
        srcMap.put("key2", "value2");

        String value = "Test %key4%";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals("Test ", result);
    }

    @Test
    void testParseWithInvalidJsonFormat() throws JsonProcessingException {
        Map<String, Object> srcMap = new HashMap<>();
        srcMap.put("key1", "value1");
        srcMap.put("key2", "value2");
        srcMap.put("key3", "invalidJson");

        String value = "Test %key3:invalidField%";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals("Test ", result);
    }
}