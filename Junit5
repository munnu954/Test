import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.apache.flink.util.Collector;

import static org.mockito.Mockito.verify;
import static org.mockito.ArgumentMatchers.any;

@ExtendWith(MockitoExtension.class)
public class CsvtoJsonConversionTests {

    @InjectMocks
    private CsvtoJsonConversion csvtoJsonConversion;

    @Mock
    private Collector<String> collector;

    @Test
    public void givenValidGigamonCSV_whenConvertedToJSON_thenReturnValidJSONObject() throws Exception {
        String validGigamonCSVRecord = "2023-11-21 14:14:51,node-1,connection-1,entity-1,monitoring-domain-1,vseries-1,100,200,300,400,5,6,7,8";

        csvtoJsonConversion.flatMap(validGigamonCSVRecord, collector);

        verify(collector).collect(any(String.class)); // Verifies that collector.collect was called with any string argument
    }

    @Test
    public void givenInvalidGigamonCSV_whenConvertedToJSON_thenReturnEmptyJSON() throws Exception {
        String invalidGigamonCSVRecord = "Invalid CSV Record";

        csvtoJsonConversion.flatMap(invalidGigamonCSVRecord, collector);

        verify(collector).collect("{}"); // Verifies that collector.collect was called with an empty JSON object as an argument
    }
}