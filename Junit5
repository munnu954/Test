import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;
import org.json.JSONObject;

public class TextToJsonTransformer implements FlatMapFunction<String, String> {

  @Override
  public void flatMap(String s, Collector<String> collector) throws Exception {
    // Remove unnecessary characters and split the input string
    String[] arr = s.replaceAll("[{}\"]", "").split(",");

    JSONObject obj = new JSONObject();
    for (String input : arr) {
      // Split the key-value pair by colon (":")
      String[] keyValue = input.split(":");

      // Remove leading and trailing spaces from the key and value
      String jsonKey = keyValue[0].trim();
      String jsonValue = keyValue[1].trim();

      // Handling special cases for values
      if (jsonValue.startsWith("\"") && jsonValue.endsWith("\"")) {
        // Remove double quotes from the value if it's a string
        jsonValue = jsonValue.substring(1, jsonValue.length() - 1);
      } else if (jsonValue.trim().equals("true") || jsonValue.trim().equals("false")) {
        // Convert "true" or "false" strings to boolean values
        jsonValue = Boolean.parseBoolean(jsonValue.trim()) + "";
      } else if (jsonValue.trim().matches("[+-]?\\d*(\\.\\d+)?")) {
        // Convert numeric strings to their respective types
        if (jsonValue.trim().contains(".")) {
          jsonValue = Double.parseDouble(jsonValue.trim()) + "";
        } else {
          jsonValue = Integer.parseInt(jsonValue.trim()) + "";
        }
      }

      // Add the key-value pair to the JSON object
      obj.put(jsonKey, jsonValue);
    }

    // Collect the transformed JSON message
    collector.collect(obj.toString());
  }
}