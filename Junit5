@Test
    public void testApplyGroupingClearingLogic_RuleIsNull() {
        // Arrange
        HashMap<String, Object> alarmMap = new HashMap<>();
        String alarmIdentity = "test-alarm-id";

        // Simulate a generated alarm situation
        when(utils.isGeneratedAlarm(alarmMap)).thenReturn(false);

        // Mock GroupingContributors to return a list
        GroupingContributors contributor = new GroupingContributors();
        GroupingAlarms groupingAlarms = new GroupingAlarms();
        groupingAlarms.setGroupingId(1);
        groupingAlarms.setRuleId(1L); // Example ID
        groupingAlarms.setGroupingCreated(true);
        groupingAlarms.setContributorsCount(1);

        contributor.setGroupingAlarms(groupingAlarms);
        List<GroupingContributors> contributorList = new ArrayList<>();
        contributorList.add(contributor);

        // Setup repository to return contributors list
        when(groupingContributorsRepo.getGroupingContributorsByIdentity(alarmIdentity))
                .thenReturn(Optional.of(contributorList));

        // Mock repository to return the grouping alarm
        when(groupingAlarmsRepo.getGroupingAlarmByGroupingId(anyInt()))
                .thenReturn(Optional.of(groupingAlarms));

        // Mock the static method `getRuleMap` to return null
        PowerMockito.mockStatic(RulesLoadingService.class);
        when(RulesLoadingService.getRuleMap()).thenReturn(new TreeMap<Long, GroupingRule>()); // Return empty map

        // Act
        groupingService.applyGroupingClearingLogic(alarmMap, alarmIdentity);