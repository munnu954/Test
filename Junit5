Certainly! Below are additional JUnit 5 test cases covering different branches of the `createAlarm(String msg)` method in the `AlarmRepositoryImpl` class to achieve 100% code coverage:

```java
@Test
void testCreateAlarm_setStateNull() throws Exception {
    // Arrange
    String msg = "{\"externalAlarmId\":\"pqwer\",\"perceivedSeverity\":\"Other\",\"sequenceId\":\"23423\"}";
    ObjectMapper obj = new ObjectMapper();
    Map<String, Integer> percMap = new HashMap<>();
    Map<String, Integer> stateMap = new HashMap<>();

    percMap.put("Other", 6);
    percMap.put("Indeterminate", 1);

    stateMap.put("cleared", 6);

    when(postgresConf.getAlarmTypeMap()).thenReturn(percMap);
    when(postgresConf.getPerceivedSeverityMap()).thenReturn(percMap);
    when(postgresConf.getAlarmStateMap()).thenReturn(stateMap);
    when(postgresConf.getAlarmTypeOther()).thenReturn("Other");
    when(postgresConf.getAlarmStateNew()).thenReturn("New");
    when(postgresConf.getPerceivedSeverityIndeterminate()).thenReturn("Indeterminate");

    // Act
    alarmRepositoryImpl.createAlarm(msg);

    // Assert
    verify(alarmRepositoryImpl, times(1)).createAlarm(anyString());
}

@Test
void testCreateAlarm_setPerceivedSeverityNull() throws Exception {
    // Arrange
    String msg = "{\"externalAlarmId\":\"pqwer\",\"State\":\"cleared\",\"sequenceId\":\"23423\"}";
    ObjectMapper obj = new ObjectMapper();
    Map<String, Integer> percMap = new HashMap<>();
    Map<String, Integer> stateMap = new HashMap<>();

    percMap.put("Other", 6);
    percMap.put("Indeterminate", 1);

    stateMap.put("cleared", 6);

    when(postgresConf.getAlarmTypeMap()).thenReturn(percMap);
    when(postgresConf.getPerceivedSeverityMap()).thenReturn(percMap);
    when(postgresConf.getAlarmStateMap()).thenReturn(stateMap);
    when(postgresConf.getAlarmTypeOther()).thenReturn("Other");
    when(postgresConf.getAlarmStateNew()).thenReturn("New");
    when(postgresConf.getPerceivedSeverityIndeterminate()).thenReturn("Indeterminate");

    // Act
    alarmRepositoryImpl.createAlarm(msg);

    // Assert
    verify(alarmRepositoryImpl, times(1)).createAlarm(anyString());
}

@Test
void testCreateAlarm_setAlarmTypeAndPerceivedSeverityOther() throws Exception {
    // Arrange
    String msg = "{\"externalAlarmId\":\"pqwer\",\"State\":\"cleared\",\"perceivedSeverity\":\"Other\",\"sequenceId\":\"23423\"}";
    ObjectMapper obj = new ObjectMapper();
    Map<String, Integer> percMap = new HashMap<>();
    Map<String, Integer> stateMap = new HashMap<>();

    percMap.put("Other", 6);
    percMap.put("Indeterminate", 1);

    stateMap.put("cleared", 6);

    when(postgresConf.getAlarmTypeMap()).thenReturn(percMap);
    when(postgresConf.getPerceivedSeverityMap()).thenReturn(percMap);
    when(postgresConf.getAlarmStateMap()).thenReturn(stateMap);
    when(postgresConf.getAlarmTypeOther()).thenReturn("Other");
    when(postgresConf.getAlarmStateNew()).thenReturn("New");
    when(postgresConf.getPerceivedSeverityIndeterminate()).thenReturn("Indeterminate");

    // Act
    alarmRepositoryImpl.createAlarm(msg);

    // Assert
    verify(alarmRepositoryImpl, times(1)).createAlarm(anyString());
}
```

You can continue adding more test cases for different scenarios to achieve 100% code coverage of the `createAlarm(String msg)` method.