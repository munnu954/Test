To address the `java.lang.NoSuchMethodError` related to the `org.json.JSONObject` class in the `MtnInsightsValidator`, we will apply the same solution used for the `UserInsightsValidator`. Instead of trying to create a `JSONObject` directly from an object, which can cause compatibility issues if the library version does not support it, we will manually construct a `Map` and create the `JSONObject` from that.

Here's the updated `MtnInsightsValidator` class:

```java
import org.json.JSONObject;
import java.util.HashMap;
import java.util.Map;

@Component
public class MtnInsightsValidator extends AbstractInsightsValidator {

    public void validate(MtnInsightsRequest request) throws InvalidRequestException {
        validate(request.getServiceHeader());
        String errorMessage = null;
        
        if (!request.getRequestType().equals(InsightsRequestType.INSERTMTNINSIGHTS)) {
            errorMessage = "Invalid request type ";
        }
        
        if (request.getKeyAttributes() == null && request.getListKeyAttributes() == null) {
            errorMessage = "Either KeyAttributes (Single) or ListKeyAttributes (Multiple) are required.";
        } else if (request.getKeyAttributes() != null) {
            validateIterator(errorMessage, request.getKeyAttributes(), "KeyAttributes");
        } else if (request.getListKeyAttributes() != null) {
            for (int i = 0; i < request.getListKeyAttributes().length; i++) {
                validateIterator(errorMessage, request.getListKeyAttributes()[i], "ListKeyAttributes");
            }
        }
        
        if (errorMessage != null) {
            throw new InvalidRequestException(errorMessage);
        }
    }

    public void validateIterator(String errorMessage, MtnInsightsAttributes mtnInsightsAttributes, String logVal) throws InvalidRequestException {
        Map<String, Object> attributesMap = new HashMap<>();
        attributesMap.put("ecpdId", mtnInsightsAttributes.getEcpdId());
        attributesMap.put("mtn", mtnInsightsAttributes.getMtn());
        attributesMap.put("insightCategory", mtnInsightsAttributes.getInsightCategory());
        attributesMap.put("insightName", mtnInsightsAttributes.getInsightName());
        attributesMap.put("outageId", mtnInsightsAttributes.getOutageId());

        JSONObject jsonObject = new JSONObject(attributesMap);
        
        if (jsonObject.has("ecpdId") && jsonObject.has("mtn") && jsonObject.has("insightCategory") 
            && jsonObject.has("insightName") && jsonObject.has("outageId")) {
            
            if (isEmpty(mtnInsightsAttributes.getMtn()) && isEmpty(mtnInsightsAttributes.getInsightCategory())
                    && isEmpty(mtnInsightsAttributes.getInsightName())) {
                errorMessage = logVal + LOGGER_MESSAGE_MYBIZ;
            } else if (isEmpty(mtnInsightsAttributes.getInsightCategory()) 
                    && isEmpty(mtnInsightsAttributes.getInsightName())) {
                errorMessage = logVal + LOGGER_MESSAGE_MYBIZ;
            } else if (!isEmpty(mtnInsightsAttributes.getInsightCategory()) 
                    && !isEmpty(mtnInsightsAttributes.getInsightName()) 
                    && StringUtils.equals(mtnInsightsAttributes.getInsightName(), INSIGHT_NAME_MYBIZZ.get(0)) 
                    && StringUtils.equals(mtnInsightsAttributes.getInsightCategory(), INSIGHT_CATEGORY_MYBIZZ)) {
                
                if (isEmpty(mtnInsightsAttributes.getMtn()) || isEmpty(mtnInsightsAttributes.getEcpdId())) {
                    errorMessage = logVal + LOGGER_MESSAGE_MYBIZ;
                } else if (!isEmpty(mtnInsightsAttributes.getInsightName()) 
                        && StringUtils.equals(mtnInsightsAttributes.getInsightName(), INSIGHT_NAME_MYBIZZ.get(0))) {
                    
                    if (isEmpty(mtnInsightsAttributes.getMtn()) || isEmpty(mtnInsightsAttributes.getInsightCategory()) 
                            || isEmpty(mtnInsightsAttributes.getEcpdId())) {
                        errorMessage = logVal + LOGGER_MESSAGE_MYBIZ;
                    }
                } else if (!isEmpty(mtnInsightsAttributes.getInsightCategory()) 
                        && StringUtils.equals(mtnInsightsAttributes.getInsightCategory(), INSIGHT_CATEGORY_MYBIZZ)) {
                    
                    if (isEmpty(mtnInsightsAttributes.getMtn()) || isEmpty(mtnInsightsAttributes.getInsightName()) 
                            || isEmpty(mtnInsightsAttributes.getEcpdId())) {
                        errorMessage = logVal + LOGGER_MESSAGE_MYBIZ;
                    }
                } else {
                    if ((!isEmpty(mtnInsightsAttributes.getInsightName()) 
                            && StringUtils.equals(mtnInsightsAttributes.getInsightName(), INSIGHT_NAME_MYBIZZ.get(0))) 
                            || (!isEmpty(mtnInsightsAttributes.getInsightCategory()) 
                            && StringUtils.equals(mtnInsightsAttributes.getInsightCategory(), INSIGHT_CATEGORY_MYBIZZ))) {
                        errorMessage = logVal + LOGGER_MESSAGE_MYBIZ_MAND;
                    }
                }
            }
            
            if (jsonObject.has("ecpdId") && jsonObject.has("mtn") 
                && jsonObject.has("insightCategory") && jsonObject.has("insightName") 
                && jsonObject.has("outageId")) {
                
                if (!isEmpty(mtnInsightsAttributes.getInsightCategory()) 
                        && isEmpty(mtnInsightsAttributes.getInsightName()) 
                        && (StringUtils.equals(mtnInsightsAttributes.getInsightName(), INSIGHT_NAME_NETWORK.get(0)) 
                        || StringUtils.equals(mtnInsightsAttributes.getInsightName(), INSIGHT_NAME_NETWORK.get(1))) 
                        && StringUtils.equals(mtnInsightsAttributes.getInsightCategory(), INSIGHT_CATEGORY_NETWORK_OUTAGE)) {
                    
                    if (isEmpty(mtnInsightsAttributes.getMtn()) || isEmpty(mtnInsightsAttributes.getOutageId()) 
                            || isEmpty(mtnInsightsAttributes.getEcpdId())) {
                        errorMessage = logVal + LOGGER_MESSAGE_NETWORK_OUTAGE;
                    }
                } else if (!isEmpty(mtnInsightsAttributes.getInsightCategory()) 
                        && isEmpty(mtnInsightsAttributes.getInsightName()) 
                        && StringUtils.equals(mtnInsightsAttributes.getInsightCategory(), INSIGHT_CATEGORY_NETWORK_OUTAGE)) { 
                    
                    if (isEmpty(mtnInsightsAttributes.getMtn()) || isEmpty(mtnInsightsAttributes.getOutageId()) 
                            || isEmpty(mtnInsightsAttributes.getEcpdId())) {
                        errorMessage = logVal + LOGGER_MESSAGE_NETWORK_OUTAGE;
                    } else if (!isEmpty(mtnInsightsAttributes.getMtn()) && !isEmpty(mtnInsightsAttributes.getOutageId()) 
                            && !isEmpty(mtnInsightsAttributes.getEcpdId())) {
                        errorMessage = logVal + LOGGER_MESSAGE_NETWORK_OUTAGE;
                    }
                } else if (isEmpty(mtnInsightsAttributes.getInsightCategory()) 
                        && !isEmpty(mtnInsightsAttributes.getInsightName()) 
                        && (StringUtils.equals(mtnInsightsAttributes.getInsightName(), INSIGHT_NAME_NETWORK.get(0)) 
                        || StringUtils.equals(mtnInsightsAttributes.getInsightName(), INSIGHT_NAME_NETWORK.get(1)))) {
                    
                    if (isEmpty(mtnInsightsAttributes.getMtn()) || isEmpty(mtnInsightsAttributes.getOutageId()) 
                            || isEmpty(mtnInsightsAttributes.getEcpdId())) {
                        errorMessage = logVal + LOGGER_MESSAGE_NETWORK_OUTAGE; 
                    } else if (!isEmpty(mtnInsightsAttributes.getMtn()) && !isEmpty(mtnInsightsAttributes.getOutageId()) 
                            && !isEmpty(mtnInsightsAttributes.getEcpdId())) {
                        errorMessage = logVal + LOGGER_MESSAGE_NETWORK_OUTAGE;
                    }
                }
            } else {
                if ((!isEmpty(mtnInsightsAttributes.getInsightCategory()) 
                        && StringUtils.equals(mtnInsightsAttributes.getInsightCategory(), INSIGHT_CATEGORY_NETWORK_OUTAGE)) 
                        || (!isEmpty(mtnInsightsAttributes.getInsightName()) 
                        && (StringUtils.equals(mtnInsightsAttributes.getInsightName(), INSIGHT_NAME_NETWORK.get(0)) 
                        || StringUtils.equals(mtnInsightsAttributes.getInsightName(), INSIGHT_NAME_NETWORK.get(1))))) {
                    errorMessage = logVal + LOGGER_MESSAGE_NETWORKOUTAGE_MAND;
                }
            }
        }
        
        if (errorMessage != null) {
            throw new InvalidRequestException(errorMessage);
        }
    }

    public void validate(MtnInsightsSearchRequest request) throws InvalidRequestException {
        validate(request.getServiceHeader());
        String errorMessage = null;
        
        Map<String, Object> requestMap = new HashMap<>();
        requestMap.put("ecpdId", request.getServiceRequest().getEcpdId());
        requestMap.put("mtn", request.getServiceRequest().getMtn());
        requestMap.put("insightCategory", request.getServiceRequest().getInsightCategory());
        requestMap.put("insightName", request.getServiceRequest().getInsightName());

        JSONObject jsonObject = new JSONObject(requestMap);
        
        if (jsonObject.has("ecpdId") && jsonObject.has("mtn") 
            && jsonObject.has("insightCategory") && jsonObject.has("insightName")) {
            
            if (isEmpty(request.getServiceRequest().getMtn()) 
                || isEmpty(request.getServiceRequest().getInsightCategory()[0]) 
                || isEmpty(request.getServiceRequest().getInsightName()[0]) 
                || isEmpty(request.getServiceRequest().getEcpdId())) {
                errorMessage = MTN_SEARCH_MAND_FIELDS_CHECK;
            }
        } else {
            errorMessage = "ServiceRequest with Insight Category and Insight Name, MTN, ECPD id are required.";
        }
        
        if (errorMessage != null) {
            throw new InvalidRequestException(errorMessage);
        }
    }
}
```

### Key Changes Made:
1. **Manual Map Creation**: Instead of passing the `mtnInsightsAttributes` and `request.getServiceRequest()` directly to the `JSONObject` constructor, a `Map` is created and populated with the necessary fields. This map is then used to create the `JSONObject`.

2. **Error Handling**: The error handling logic remains consistent with the original design but is now compatible with the version of the `org.json` library that may not support object-based construction.

Make sure to verify that your `pom.xml` file has the correct dependency for `org.json` and that no conflicting versions exist that might cause compatibility issues. If the problem persists, consider using a different JSON library, such as Jackson or Gson, which may offer more flexibility and ease of use.