import org.junit.jupiter.api.Test;
import org.mockito.MockedStatic;
import org.mockito.Mockito;

import jakarta.xml.bind.JAXBContext;
import jakarta.xml.bind.JAXBException;
import jakarta.xml.bind.Unmarshaller;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.doThrow;
import static org.mockito.Mockito.mock;

public class BatchLoaderUtilsTest {

    @Test
    void testConvertToObjectException() throws JAXBException {
        String xml = "<example>data</example>";
        Class<TestObject> clazz = TestObject.class;
        
        try (MockedStatic<JAXBContext> jaxbContextMockedStatic = Mockito.mockStatic(JAXBContext.class)) {
            JAXBContext jaxbContextMock = mock(JAXBContext.class);
            jaxbContextMockedStatic.when(() -> JAXBContext.newInstance(any(Class.class))).thenReturn(jaxbContextMock);

            Unmarshaller jaxbUnmarshaller = mock(Unmarshaller.class);
            doThrow(new JAXBException("Mocked JAXBException")).when(jaxbContextMock).createUnmarshaller();

            BatchLoaderUtils batchLoaderUtils = new BatchLoaderUtils();
            assertThrows(JAXBException.class, () -> batchLoaderUtils.convertToObject(xml, clazz));
        }
    }

}
