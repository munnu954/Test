I see. The "URI is not absolute" error might be related to how the dependencies are being injected in the test class. Let's try updating the test class to properly initialize the Mockito test runner and use the correct annotations for dependency injection. Here is the updated code:

```java
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;

@ExtendWith(MockitoExtension.class)
@SpringBootTest
public class LuceneSpaceCollectorRepositoryTest {

    @Mock
    private LuceneRepository<SpaceCollector, String> luceneRepository;

    @InjectMocks
    private LuceneSpaceCollectorRepository luceneSpaceCollectorRepository;

    @Test
    public void testUpdateClusterStateToConnecting() {
        String id = "123";
        Mockito.when(luceneRepository.updateByQuery(Mockito.anyString())).thenReturn(1);
        int result = luceneSpaceCollectorRepository.updateClusterStateToConnecting(id);
        assertEquals(1, result);
    }

    @Test
    public void testFindTerminatedDevices() {
        String nTimeAgo = "2022-01-01";
        List<SpaceCollector> spaceCollectors = new ArrayList<>();
        Mockito.when(luceneRepository.findByQuery(Mockito.anyString())).thenReturn(spaceCollectors);
        List<SpaceCollector> result = luceneSpaceCollectorRepository.findTerminatedDevices(nTimeAgo);
        assertEquals(spaceCollectors, result);
    }

    @Test
    public void testFindAllByEnabledAndNotRunning() {
        List<SpaceCollector> spaceCollectors = new ArrayList<>();
        Mockito.when(luceneRepository.findByQuery(Mockito.anyString())).thenReturn(spaceCollectors);
        List<SpaceCollector> result = luceneSpaceCollectorRepository.findAllByEnabledAndNotRunning();
        assertEquals(spaceCollectors, result);
    }
}
```

By using `@ExtendWith(MockitoExtension.class)` in conjunction with `@InjectMocks`, we are ensuring that Mockito is properly initialized to handle the dependency injection for the test class. This should help in resolving the "URI is not absolute" error and make the test cases pass successfully.

Please give this updated code a try and let me know if it resolves the issue or if you need any further assistance.