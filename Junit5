import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

import java.lang.reflect.Field;
import java.time.Instant;

public class PostingServiceTest {

    PostingService postingService = new PostingService();

    @Test
    void testAddMsgToQueue() throws NoSuchFieldException, IllegalAccessException {
        Message<byte[]> msg = mock(Message.class);
        MessageId msgId = mock(MessageId.class);
        when(msg.getMessageId()).thenReturn(msgId);
        Instant alarmReceivedTime = Instant.now();

        Field alarmsField = PostingService.class.getDeclaredField("alarms");
        alarmsField.setAccessible(true);
        Field alarmReceivedTimeValuesField = PostingService.class.getDeclaredField("alarmReceivedTimeValues");
        alarmReceivedTimeValuesField.setAccessible(true);

        postingService.addMsgToQueue(msg, alarmReceivedTime);

        ConcurrentLinkedDeque<Message<byte[]>> alarms = (ConcurrentLinkedDeque<Message<byte[]>>) alarmsField.get(postingService);
        assertEquals(1, alarms.size());

        assertEquals(alarmReceivedTime, alarmReceivedTimeValuesField.get(postingService).get(msgId));
    }
}