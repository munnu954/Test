Here are the possible corner and edge test cases for the given if block:

1. If sourceFilePath exists and isKafkaTopicPresent returns true
2. If sourceFilePath exists and isKafkaTopicPresent returns false
3. If sourceFilePath does not exist and isKafkaTopicPresent returns true
4. If sourceFilePath does not exist and isKafkaTopicPresent returns false

Below is the Junit5 test case code for the above scenarios:

```java
import org.junit.jupiter.api.Test;
import static org.mockito.Mockito.*;
import java.io.File;

public class KafkaConsumerTest {

    private KafkaConsumer kafkaConsumer = new KafkaConsumer();
    
    @Test
    public void testSourceFileExistsAndTopicPresent() {
        String sourceFilePath = "existingFilePath.txt";
        String topic = "testTopic";
        KafkaTopicUtil utilMock = mock(KafkaTopicUtil.class);
        when(utilMock.isKafkaTopicPresent(anyString())).thenReturn(true);
        kafkaConsumer.util = utilMock;
        boolean result = kafkaConsumer.checkFileAndTopic(sourceFilePath, topic);
        assertTrue(result);
    }
    
    @Test
    public void testSourceFileExistsAndTopicNotPresent() {
        String sourceFilePath = "existingFilePath.txt";
        String topic = "testTopic";
        KafkaTopicUtil utilMock = mock(KafkaTopicUtil.class);
        when(utilMock.isKafkaTopicPresent(anyString())).thenReturn(false);
        kafkaConsumer.util = utilMock;
        boolean result = kafkaConsumer.checkFileAndTopic(sourceFilePath, topic);
        assertFalse(result);
    }
    
    @Test
    public void testSourceFileNotExistsAndTopicPresent() {
        String sourceFilePath = "nonExistingFilePath.txt";
        String topic = "testTopic";
        KafkaTopicUtil utilMock = mock(KafkaTopicUtil.class);
        when(utilMock.isKafkaTopicPresent(anyString())).thenReturn(true);
        kafkaConsumer.util = utilMock;
        boolean result = kafkaConsumer.checkFileAndTopic(sourceFilePath, topic);
        assertFalse(result);
    }
    
    @Test
    public void testSourceFileNotExistsAndTopicNotPresent() {
        String sourceFilePath = "nonExistingFilePath.txt";
        String topic = "testTopic";
        KafkaTopicUtil utilMock = mock(KafkaTopicUtil.class);
        when(utilMock.isKafkaTopicPresent(anyString())).thenReturn(false);
        kafkaConsumer.util = utilMock;
        boolean result = kafkaConsumer.checkFileAndTopic(sourceFilePath, topic);
        assertFalse(result);
    }
}
```

In the test case above, we have mocked the `KafkaTopicUtil` class to simulate the behavior of `isKafkaTopicPresent` method and tested the scenarios where `sourceFilePath` exists or not and where `isKafkaTopicPresent` returns true or false.