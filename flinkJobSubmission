@ExtendWith(MockitoExtension.class)
class FlinkApiControllerTest {
  
    @InjectMocks
    private FlinkApiController flinkApiController;
    
    @Mock
    private RestTemplate restTemplate;
    
    @Mock
    private KafkaConsumer kafkaConsumer;
    
    @Mock
    private KafkaAuditProducer kafkaAuditProducer;
    
    @Captor
    ArgumentCaptor<String> requestBodyCaptor;
    
    @Captor
    ArgumentCaptor<HttpEntity<String>> requestEntityCaptor;

    @Captor
    ArgumentCaptor<String> jobSubmitUrlCaptor;
    
    @Value("${flink.api.url}")
    private String flinkApiUrl;
    
    @Value("${flink.job.csv.jarid}")
    private String flinkJobJarid;
    
    @Value("${flink.job.csv.program-args)")
    private String programArgs;
  
    @Test
    void testTriggerJob_WithValidFileType() {
        // Arrange
        SpaceCollector collector = new SpaceCollector();
        collector.setInputFilePath("C:/Temp/test.csv");
        String fileType = ".csv";

        when(restTemplate.postForEntity(anyString(), any(), eq(String.class)))
                .thenReturn(new ResponseEntity<>("Job triggered successfully", HttpStatus.OK));

        // Act
        String result = flinkApiController.triggerJob(collector, fileType);

        // Assert
        assertEquals("Job triggered successfully", result);
    }
  
    @Test
    void testTriggerJob_WithInvalidJobSubmitUrl() {
        // Arrange
        SpaceCollector collector = new SpaceCollector();
        collector.setInputFilePath("C:/Temp/test.csv");
        String fileType = ".csv";

        when(restTemplate.postForEntity(anyString(), any(), eq(String.class)))
                .thenThrow(new HttpClientErrorException(HttpStatus.NOT_FOUND));

        // Act
        String result = flinkApiController.triggerJob(collector, fileType);

        // Assert
        assertEquals("Job is not triggered", result);
        verify(kafkaConsumer).writeLogToFile(any(), any(), any(), any());
        verify(kafkaAuditProducer).sendMessage(any(), any(), any(), eq(false));
    }

    @Test
    void testTriggerJob_WithNonExistentFlinkJobJarid() {
        // Arrange
        SpaceCollector collector = new SpaceCollector();
        collector.setInputFilePath("C:/Temp/test.csv");
        String fileType = ".csv";

        String jobSubmitUrl = flinkApiUrl + "/jars/" + flinkJobJarid + "/run";

        // Act
        String result = flinkApiController.triggerJob(collector, fileType);
        
        // Assert
        assertEquals("Job is not triggered", result);
        verify(kafkaConsumer).writeLogToFile(any(), any(), any(), any());
        verify(kafkaAuditProducer).sendMessage(any(), any(), any(), eq(false));
    }
}