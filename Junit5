Certainly! Here are 10 JUnit 5 test cases to cover the mentioned blocks of code in the `postAlarmForEachIteration(Alarm alarm, String compId)` method of the `AlarmRepositoryImpl` class:

```java
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class AlarmRepositoryImplTest {

    @Mock
    private JdbcTemplate jdbcTemplate;

    private AlarmRepositoryImpl alarmRepository;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        alarmRepository = new AlarmRepositoryImpl(jdbcTemplate);
    }

    @Test
    void postAlarmForEachIteration_shouldSetTagIfJoinedTagSetNotEmpty() {
        Alarm alarm = new Alarm();
        Set<String> joinedTagSet = new HashSet<>(Arrays.asList("tag1", "tag2"));

        assertDoesNotThrow(() -> {
            alarmRepository.postAlarmForEachIteration(alarm, "compId", joinedTagSet);
        });

        assertArrayEquals(new String[]{"tag1", "tag2"}, alarm.getTag());
    }

    @Test
    void postAlarmForEachIteration_shouldNotSetTagIfJoinedTagSetEmpty() {
        Alarm alarm = new Alarm();
        Set<String> joinedTagSet = new HashSet<>();

        assertDoesNotThrow(() -> {
            alarmRepository.postAlarmForEachIteration(alarm, "compId", joinedTagSet);
        });

        assertNull(alarm.getTag());
    }

    @Test
    void postAlarmForEachIteration_shouldSetSequenceIDIfZero() {
        Alarm alarm = new Alarm();
        alarm.setSequenceID(0);

        ResultSet rs = mock(ResultSet.class);
        when(rs.getLong("sequenceid")).thenReturn(123L);

        assertDoesNotThrow(() -> {
            alarmRepository.postAlarmForEachIteration(alarm, "compId", rs);
        });

        assertEquals(123L, alarm.getSequenceID());
    }

    @Test
    void postAlarmForEachIteration_shouldNotSetSequenceIDIfNonZero() {
        Alarm alarm = new Alarm();
        alarm.setSequenceID(456L);

        ResultSet rs = mock(ResultSet.class);

        assertDoesNotThrow(() -> {
            alarmRepository.postAlarmForEachIteration(alarm, "compId", rs);
        });

        assertEquals(456L, alarm.getSequenceID());
    }

    // Additional test cases for other blocks of code...

}
```

Please note that these test cases assume that you have a `JdbcTemplate` instance injected into the `AlarmRepositoryImpl` class and the necessary dependencies are properly set up.

Feel free to add more test cases or modify them according to your specific requirements.