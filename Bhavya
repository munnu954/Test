public static class CsvtoJsonRTROCSnTransformer extends RichFlatMapFunction<String, String> {
    private String[] headers;
    private IntCounter successIntCounter = new IntCounter();
    private IntCounter failureIntCounter = new IntCounter();
    private String fileName;

    public CsvtoJsonRTROCSnTransformer(String fileName) {
        this.fileName = fileName;
    }

    @Override
    public void open(Configuration parameters) throws Exception {
        getRuntimeContext().addAccumulator("successIntCounter", this.successIntCounter);
        getRuntimeContext().addAccumulator("failureIntCounter", this.failureIntCounter);
    }

    @Override
    public void flatMap(String s, Collector<String> collector) throws Exception {
        String[] lines = s.split(System.lineSeparator());
        headers = lines[2].split(",");

        // Process line 1
        String[] line1 = lines[0].split(",");
        JSONObject line1Obj = new JSONObject();
        for (int i = 0; i < line1.length; i++) {
            String cell = line1[i];
            String[] keyValue = cell.split("=");
            if (keyValue.length == 2) {
                String jsonkey = keyValue[0].trim();
                String jsonvalue = keyValue[1].trim().replace("\"", "");

                if (i == 2) {
                    // Handle multiple jsonvalues for the third jsonkey
                    String[] additionalValues = Arrays.copyOfRange(line1, i + 1, line1.length);
                    jsonvalue += "," + String.join(",", additionalValues);
                }

                line1Obj.put(jsonkey, jsonvalue);
            }
        }

        // Process remaining lines
        for (int i = 3; i < lines.length; i++) {
            String str = lines[i];
            String[] arr = str.split(",");
            if (headers == null || headers.length != arr.length) {
                this.failureIntCounter.add(1);
                continue;
            }
            JSONObject obj = new JSONObject(line1Obj.toString());
            obj.put("FILENAME", fileName);
            for (int j = 0; j < arr.length; j++) {
                String jsonkey = headers[j].trim().replace("\"", "");
                String jsonvalue = arr[j].trim().replace("\"", "");
                obj.put(jsonkey, jsonvalue);
            }
            this.successIntCounter.add(1);
            collector.collect(obj.toString());
        }
    }
}