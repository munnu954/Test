Sure, here's an example of JUnit 5 test cases for the `MtnInsightsValidator` class:

```java
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.util.StringUtils;

import java.util.Arrays;

@ExtendWith(MockitoExtension.class)
class MtnInsightsValidatorTest {

    @InjectMocks
    private MtnInsightsValidator mtnInsightsValidator;

    @Mock
    private MtnInsightsRequest mtnInsightsRequest;

    @Mock
    private MtnInsightsAttributes mtnInsightsAttributes;

    @Mock
    private MtnInsightsSearchRequest mtnInsightsSearchRequest;

    @Test
    void testValidate_MtnInsightsRequest_ValidRequest() {
        Mockito.when(mtnInsightsRequest.getRequestType()).thenReturn(InsightSRequestType.INSERTMTNINSIGHTS);
        Mockito.when(mtnInsightsRequest.getKeyAttributes()).thenReturn(mtnInsightsAttributes);

        Assertions.assertDoesNotThrow(() -> mtnInsightsValidator.validate(mtnInsightsRequest));
    }

    @Test
    void testValidate_MtnInsightsRequest_InvalidRequestType() {
        Mockito.when(mtnInsightsRequest.getRequestType()).thenReturn(InsightSRequestType.INSERTAGGREGATEINSIGHTS);

        Assertions.assertThrows(InvalidRequestException.class, () -> mtnInsightsValidator.validate(mtnInsightsRequest));
    }

    @Test
    void testValidate_MtnInsightsRequest_NoKeyAttributesOrListKeyAttributes() {
        Mockito.when(mtnInsightsRequest.getRequestType()).thenReturn(InsightSRequestType.INSERTMTNINSIGHTS);
        Mockito.when(mtnInsightsRequest.getKeyAttributes()).thenReturn(null);
        Mockito.when(mtnInsightsRequest.getListKeyAttributes()).thenReturn(null);

        Assertions.assertThrows(InvalidRequestException.class, () -> mtnInsightsValidator.validate(mtnInsightsRequest));
    }

    @Test
    void testValidateIterator_ValidMtnInsightsAttributes() {
        Mockito.when(mtnInsightsAttributes.getMtn()).thenReturn("123456789");
        Mockito.when(mtnInsightsAttributes.getInsightCategory()).thenReturn("MyBiz");
        Mockito.when(mtnInsightsAttributes.getInsightName()).thenReturn("MyBiz");
        Mockito.when(mtnInsightsAttributes.getEcpdId()).thenReturn("ABC123");
        Mockito.when(mtnInsightsAttributes.getOutageId()).thenReturn("XYZ456");

        Assertions.assertDoesNotThrow(() -> mtnInsightsValidator.validateIterator("errorMessage", mtnInsightsAttributes, "KeyAttributes"));
    }

    @Test
    void testValidateIterator_InvalidMtnInsightsAttributes() {
        Mockito.when(mtnInsightsAttributes.getMtn()).thenReturn("");
        Mockito.when(mtnInsightsAttributes.getInsightCategory()).thenReturn("");
        Mockito.when(mtnInsightsAttributes.getInsightName()).thenReturn("");
        Mockito.when(mtnInsightsAttributes.getEcpdId()).thenReturn("");
        Mockito.when(mtnInsightsAttributes.getOutageId()).thenReturn("");

        Assertions.assertThrows(InvalidRequestException.class, () -> mtnInsightsValidator.validateIterator("errorMessage", mtnInsightsAttributes, "KeyAttributes"));
    }

    @Test
    void testValidate_MtnInsightsSearchRequest_ValidRequest() {
        Mockito.when(mtnInsightsSearchRequest.getServiceRequest()).thenReturn(new MtnInsightsSearchParam());
        Mockito.when(mtnInsightsSearchRequest.getServiceRequest().getMtn()).thenReturn("123456789");
        Mockito.when(mtnInsightsSearchRequest.getServiceRequest().getEcpdId()).thenReturn("ABC123");
        Mockito.when(mtnInsightsSearchRequest.getServiceRequest().getInsightCategory()).thenReturn(new String[]{"MyBiz"});
        Mockito.when(mtnInsightsSearchRequest.getServiceRequest().getInsightName()).thenReturn(new String[]{"MyBiz"});

        Assertions.assertDoesNotThrow(() -> mtnInsightsValidator.validate(mtnInsightsSearchRequest));
    }

    @Test
    void testValidate_MtnInsightsSearchRequest_InvalidRequest() {
        Mockito.when(mtnInsightsSearchRequest.getServiceRequest()).thenReturn(new MtnInsightsSearchParam());
        Mockito.when(mtnInsightsSearchRequest.getServiceRequest().getMtn()).thenReturn("");
        Mockito.when(mtnInsightsSearchRequest.getServiceRequest().getEcpdId()).thenReturn("");
        Mockito.when(mtnInsightsSearchRequest.getServiceRequest().getInsightCategory()).thenReturn(new String[]{});
        Mockito.when(mtnInsightsSearchRequest.getServiceRequest().getInsightName()).thenReturn(new String[]{});

        Assertions.assertThrows(InvalidRequestException.class, () -> mtnInsightsValidator.validate(mtnInsightsSearchRequest));
    }
}
```

This test suite covers the following scenarios:

1. `testValidate_MtnInsightsRequest_ValidRequest`: Verifies that the `validate` method for `MtnInsightsRequest` does not throw an exception when the request is valid.

2. `testValidate_MtnInsightsRequest_InvalidRequestType`: Verifies that the `validate` method for `MtnInsightsRequest` throws an `InvalidRequestException` when the request type is invalid.

3. `testValidate_MtnInsightsRequest_NoKeyAttributesOrListKeyAttributes`: Verifies that the `validate` method for `MtnInsightsRequest` throws an `InvalidRequestException` when neither `keyAttributes` nor `listKeyAttributes` are provided.

4. `testValidateIterator_ValidMtnInsightsAttributes`: Verifies that the `validateIterator` method does not throw an exception when the `MtnInsightsAttributes` are valid.

5. `testValidateIterator_InvalidMtnInsightsAttributes`: Verifies that the `validateIterator` method throws an `InvalidRequestException` when the `MtnInsightsAttributes` are invalid.

6. `testValidate_MtnInsightsSearchRequest_ValidRequest`: Verifies that the `validate` method for `MtnInsightsSearchRequest` does not throw an exception when the request is valid.

7. `testValidate_MtnInsightsSearchRequest_InvalidRequest`: Verifies that the `validate` method for `MtnInsightsSearchRequest` throws an `InvalidRequestException` when the request is invalid.

These test cases should provide 100% code coverage for the `MtnInsightsValidator` class.