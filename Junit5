import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class AlarmOperationsAPITest {

    private AlarmOperationsAPI alarmOperationsAPI;

    @Mock
    private ObjectMapper objectMapper;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.openMocks(this);
        alarmOperationsAPI = new AlarmOperationsAPI();
        alarmOperationsAPI.utils = new AlarmRelationUtils();
    }

    @Test
    public void testGetTopologyTraversalObjectsList() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        String responseString = "{\"TBL_response\":{\"topologyObjects\":[{\"object1\":\"value1\"},{\"object2\":\"value2\"}]}}";
        HashMap<String, Object> alarmTagValueMap = new HashMap<>();

        Method method = AlarmOperationsAPI.class.getDeclaredMethod("getTopologyTraversalObjectsList", String.class, HashMap.class);
        method.setAccessible(true);

        ResponseEntity<Object> responseEntity = mock(ResponseEntity.class);
        when(responseEntity.getBody()).thenReturn(responseString);

        AlarmOperationsAPI spy = org.mockito.Mockito.spy(alarmOperationsAPI);
        when(spy.getTopologyTraversalObjectsList(responseString, alarmTagValueMap)).thenReturn(new ArrayList<>());

        List<String> result = (List<String>) method.invoke(spy, responseString, alarmTagValueMap);

        assertEquals(0, result.size());
    }
}