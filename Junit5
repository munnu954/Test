@Test
void testValidate_insertCustomerInsights() {
    UserInsightsRequest request = new UserInsightsRequest();
    request.setRequestType(InsightsRequestType.INSERTCUSTOMERINSIGHTS);
    UserInsightsAttributes keyAttributes = new UserInsightsAttributes();
    keyAttributes.setUserId("123");
    keyAttributes.setEcpdId("456");
    keyAttributes.setInsightCategory("Category");
    keyAttributes.setInsightName("Name");
    request.setKeyAttributes(keyAttributes);
    ServiceHeader header = new ServiceHeader();
    header.setClientId("clientId");
    header.setClientTransactionId("transactionId");
    header.setServiceName("serviceName");
    request.setServiceHeader(header);

    UserInsightsValidator validator = new UserInsightsValidator();

    assertDoesNotThrow(() -> validator.validate(request));
}

@Test
void testValidate_insertCustomerInsights_missingKey() {
    UserInsightsRequest request = new UserInsightsRequest();
    request.setRequestType(InsightsRequestType.INSERTCUSTOMERINSIGHTS);
    UserInsightsAttributes keyAttributes = new UserInsightsAttributes();
    request.setKeyAttributes(keyAttributes);
    ServiceHeader header = new ServiceHeader();
    request.setServiceHeader(header);

    UserInsightsValidator validator = new UserInsightsValidator();

    assertThrows(InvalidRequestException.class, () -> validator.validate(request));
}

@Test
void testValidate_insertCustomerInsights_invalidRequestType() {
    UserInsightsRequest request = new UserInsightsRequest();
    request.setRequestType(InsightsRequestType.INSERTMTNINSIGHTS);
    UserInsightsAttributes keyAttributes = new UserInsightsAttributes();
    keyAttributes.setUserId("123");
    keyAttributes.setEcpdId("456");
    keyAttributes.setInsightCategory("Category");
    keyAttributes.setInsightName("Name");
    request.setKeyAttributes(keyAttributes);
    ServiceHeader header = new ServiceHeader();
    header.setClientId("clientId");
    header.setClientTransactionId("transactionId");
    header.setServiceName("serviceName");
    request.setServiceHeader(header);

    UserInsightsValidator validator = new UserInsightsValidator();

    assertThrows(InvalidRequestException.class, () -> validator.validate(request));
}

// Add more test cases to cover all branches of the UserInsightsValidator class.