import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.mockito.Mockito.verify;

@ExtendWith(MockitoExtension.class)
public class NetworkOutageEventsMessageListenerTest {

    @Mock
    private BatchLoaderUtils batchLoaderUtils;

    private NetworkOutageEventsMessageListener messageListener;

    @BeforeEach
    public void setUp() {
        messageListener = new NetworkOutageEventsMessageListener(batchLoaderUtils);
    }

    @Test
    public void testMessageWithInvalidEventId() throws Exception {
        Message<GenericRecord> message = mock(Message.class);
        when(message.getData()).thenReturn("{\"eventId\": null}".getBytes());

        messageListener.onMessage(message);

        verify(batchLoaderUtils).saveFailedRecords(
                anyString(), anyString(), eq("{\"eventId\": null}"),
                eq(TYSConstants.NETWORK_OUTAGE.getValue()), eq('-'), eq(TYSConstants.EC_UNCATEGORIZED.getValue()),
                anyString());
    }
}