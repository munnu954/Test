import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;
import com.google.gson.JsonObject;
import com.google.gson.JsonArray;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    private String currentObjectName;
    private JsonObject jsonObject;
    private JsonObject currentSection;
    private JsonArray currentArray;

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] arr = input.split(",");

        if (arr.length > 2 && arr[2] != null && !arr[2].isEmpty()) {
            // New Object Name
            handleNewObject(arr);
        } else if (arr.length > 6 && arr[3] != null && !arr[3].isEmpty()) {
            // Min, Average, Max, CumulativeCounterValue section
            handleMinMaxSection(arr);
        } else if (arr.length > 1 && arr[0] != null && !arr[0].isEmpty()) {
            // Caller Data section
            handleCallerData(arr);
        }

        collector.collect(jsonObject.toString());
    }

    private void handleNewObject(String[] arr) {
        if (jsonObject != null) {
            // Save the completed object
            jsonObject.addProperty("ObjectName", currentObjectName);
            currentObjectName = null;
        }

        // Start a new JSON object
        currentObjectName = arr[2].trim();
        jsonObject = new JsonObject();
        currentArray = new JsonArray();
        jsonObject.add("data", currentArray);
    }

    private void handleMinMaxSection(String[] arr) {
        if (currentSection != null) {
            // Save the completed Min, Average, Max, CumulativeCounterValue section
            currentArray.add(currentSection);
        }

        // Start a new section
        currentSection = new JsonObject();
        currentSection.addProperty("Min", arr[3].trim());
        currentSection.addProperty("Average", arr[4].trim());
        currentSection.addProperty("Max", arr[5].trim());
        currentSection.addProperty("CumulativeCounterValue", arr[6].trim());
    }

    private void handleCallerData(String[] arr) {
        if (currentSection != null) {
            // Save the last Min, Average, Max, CumulativeCounterValue section
            currentArray.add(currentSection);
            currentSection = null;
        }

        // Start a new section for Caller Data
        JsonObject callerData = new JsonObject();
        callerData.addProperty(arr[0].trim(), arr[1].trim());
        callerData.addProperty("Min", arr[2].trim());
        callerData.addProperty("Average", arr[3].trim());
        callerData.addProperty("Max", arr[4].trim());
        callerData.addProperty("CumulativeCounterValue", arr[5].trim());

        currentArray.add(callerData);
    }
}
