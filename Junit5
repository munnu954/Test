import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
public class AlarmOperationsAPITest {

    @Mock
    private HashMap<String, Object> mockAlarmTagValueMap;

    @Test
    public void testGetTopologyTraversalObjectsList() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        AlarmOperationsAPI alarmOperationsAPI = new AlarmOperationsAPI();
        String responseString = "{\"TBL_response\":{\"topologyObjects\":[{\"name\":\"Node1\"},{\"name\":\"Node2\"}]}}";
        when(mockAlarmTagValueMap.get("alarmIdentity")).thenReturn("12345");

        Method method = AlarmOperationsAPI.class.getDeclaredMethod("getTopologyTraversalObjectsList", String.class, HashMap.class);
        method.setAccessible(true);
        List<String> result = (List<String>) method.invoke(alarmOperationsAPI, responseString, mockAlarmTagValueMap);

        assertEquals(2, result.size());
        assertEquals("Node1", result.get(0));
        assertEquals("Node2", result.get(1));
    }
}