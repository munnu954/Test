import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import java.util.*;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class AlarmPostingUtilsTest {

    private Map<String, Object> srcMap;

    @BeforeEach
    public void setUp() {
        srcMap = new HashMap<>();
        List<String> list = new ArrayList<>();
        list.add("value1");
        list.add("value2");
        srcMap.put("attribute1", list);
        srcMap.put("attribute2", "value3");
    }

    @Test
    public void testParseWithNoMatches() throws JsonMappingException, JsonProcessingException {
        String value = "No matches";
        String ruleName = "rule1";

        String result = AlarmPostingUtils.parse(value, srcMap, ruleName);

        assertEquals("No matches", result);
    }

    @Test
    public void testParseWithSingleAttributeExp() throws JsonMappingException, JsonProcessingException {
        String value = "%attribute2%";
        String ruleName = "rule2";

        String result = AlarmPostingUtils.parse(value, srcMap, ruleName);

        assertEquals("value3", result);
    }

    @Test
    public void testParseWithNestedJsonField() throws JsonMappingException, JsonProcessingException {
        String value = "%attribute1:0%";
        String ruleName = "rule3";

        String result = AlarmPostingUtils.parse(value, srcMap, ruleName);

        assertEquals("value1", result);
    }

    @Test
    public void testParseWithArrayIndexOutOfBound() throws JsonMappingException, JsonProcessingException {
        String value = "%attribute1:3%";
        String ruleName = "rule4";

        String result = AlarmPostingUtils.parse(value, srcMap, ruleName);

        assertEquals("", result);
    }

    @Test
    public void testParseWithNestedJsonFieldAndArrayIndex() throws JsonMappingException, JsonProcessingException {
        String value = "%attribute1:1%";
        String ruleName = "rule5";

        String result = AlarmPostingUtils.parse(value, srcMap, ruleName);

        assertEquals("value2", result);
    }

    @Test
    public void testParseWithArrayIndexOutOfBoundInJsonField() throws JsonMappingException, JsonProcessingException {
        String value = "%attribute1:1.xyz%";
        String ruleName = "rule6";

        String result = AlarmPostingUtils.parse(value, srcMap, ruleName);

        assertEquals("", result);
    }
}