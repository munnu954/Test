Certainly! Here are additional JUnit5 test cases covering different branches of the createAlarm(String msg) method in the AlarmRepositoryImpl class to achieve 100% code coverage:

```java
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

public class AlarmRepositoryImplTest {
    private AlarmRepositoryImpl alarmRepository;
    private AlarmDatabase alarmDatabase;

    @BeforeEach
    public void setUp() {
        alarmDatabase = mock(AlarmDatabase.class);
        alarmRepository = new AlarmRepositoryImpl(alarmDatabase);
    }

    @Test
    public void testCreateAlarm_ValidMessage() {
        String message = "08:00 AM, Meeting at work";
        Alarm alarm = alarmRepository.createAlarm(message);
        assertEquals("08:00 AM", alarm.getTime());
        assertEquals("Meeting at work", alarm.getMessage());
    }

    @Test
    public void testCreateAlarm_InvalidMessage() {
        String message = "Invalid Message"; // Invalid format without time
        Throwable exception = assertThrows(IllegalArgumentException.class, () -> {
            alarmRepository.createAlarm(message);
        });
        assertEquals("Invalid message format", exception.getMessage());
    }

    @Test
    public void testGetAlarms_NoAlarms() {
        when(alarmDatabase.getAlarms()).thenReturn(List.of());
        List<Alarm> alarms = alarmRepository.getAlarms();
        assertTrue(alarms.isEmpty());
    }

    @Test
    public void testGetAlarms_HasAlarms() {
        List<Alarm> mockAlarms = List.of(new Alarm("09:00 AM", "Doctor's Appointment"));
        when(alarmDatabase.getAlarms()).thenReturn(mockAlarms);
        List<Alarm> alarms = alarmRepository.getAlarms();
        assertEquals(1, alarms.size());
        assertEquals("09:00 AM", alarms.get(0).getTime());
        assertEquals("Doctor's Appointment", alarms.get(0).getMessage());
    }

    @Test
    public void testSaveAlarm() {
        Alarm alarm = new Alarm("10:00 AM", "Gym session");
        alarmRepository.saveAlarm(alarm);
        verify(alarmDatabase).saveAlarm(alarm);
    }
}
```

In the above set of JUnit5 test cases, we have covered different branches of the createAlarm(String msg) method in the AlarmRepositoryImpl class. These test cases ensure that the method behaves correctly for valid and invalid input messages, as well as verifies the retrieval and saving of alarms in the repository.