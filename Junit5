Sure, here are the complete JUnit test cases for the `getFlinkJobDetails` method:

```java
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.util.ArrayList;
import java.util.List;

import static org.mockito.Mockito.*;

class FlinkJobTest {

    @Mock
    private FlinkJobRepository flinkJobRepository;

    @InjectMocks
    private FlinkJobService flinkJobService;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    void testGetFlinkJobDetails() {
        // Arrange
        String fileType = "csv";
        boolean enabled = true;
        String sortField = "createdAt";
        String sortOrder = "asc";
        String query = "{\"bool\":{\"must\":[{\"term\":{\"type\":\"" + fileType + "\"}}, {\"term\":{\"enabled\":\"" + enabled + "\"}}]},\"sort\": [{\"" + sortField + "\": \"" + sortOrder + "\"}]}";
        List<FlinkJob> flinkJobList = new ArrayList<>();
        FlinkJob flinkJob = new FlinkJob();
        flinkJob.setId("1");
        flinkJob.setFlinkJarFilePath("flink-jar-file-path");
        flinkJob.setSharedLocationJarFilePath("shared-location-jar-file-path");
        flinkJob.setType(FlinkFileTypes.CSV);
        flinkJob.setEnabled(true);
        flinkJob.setCreatedAt("2022-01-01");
        flinkJobList.add(flinkJob);

        // Act
        when(flinkJobRepository.findByQuery(query)).thenReturn(flinkJobList);
        FlinkJob result = flinkJobService.getFlinkJobDetails(fileType, enabled, sortField, sortOrder);

        // Assert
        verify(flinkJobRepository, times(1)).findByQuery(query);
        Assertions.assertEquals(flinkJob, result);
    }

    @Test
    void testGetFlinkJobDetails_NoMatchingJob() {
        // Arrange
        String fileType = "csv";
        boolean enabled = true;
        String sortField = "createdAt";
        String sortOrder = "asc";
        String query = "{\"bool\":{\"must\":[{\"term\":{\"type\":\"" + fileType + "\"}}, {\"term\":{\"enabled\":\"" + enabled + "\"}}]},\"sort\": [{\"" + sortField + "\": \"" + sortOrder + "\"}]}";
        List<FlinkJob> flinkJobList = new ArrayList<>();

        // Act
        when(flinkJobRepository.findByQuery(query)).thenReturn(flinkJobList);
        FlinkJob result = flinkJobService.getFlinkJobDetails(fileType, enabled, sortField, sortOrder);

        // Assert
        verify(flinkJobRepository, times(1)).findByQuery(query);
        Assertions.assertNull(result);
    }

    @Test
    void testCount() {
        // Arrange
        List<FlinkJob> flinkJobList = new ArrayList<>();
        flinkJobList.add(new FlinkJob());
        flinkJobList.add(new FlinkJob());
        flinkJobList.add(new FlinkJob());

        // Act
        when(flinkJobRepository.findAll()).thenReturn(flinkJobList);
        long result = flinkJobService.count();

        // Assert
        verify(flinkJobRepository, times(1)).findAll();
        Assertions.assertEquals(3, result);
    }
}
```

Note: Please make sure to replace `FlinkJobRepository` and `FlinkJobService` with the actual classes used in your code.