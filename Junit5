@ComponentScan(basePackages = {"com.myapp", "com.external.jar"})



I connected with Kumar this morning from 2:30 AM to 5:00 AM to test the generatedAlarm normalizer and SamsungUSM instances so that I can prepare the demo document. During testing, there were some runtime errors due to the missing pivotal-5g config maps. He added some Jenkins files and config map-related files for pivotal 5g OCP and deployed them. Even after deployment, the same runtime error persists. He spent over 2 hours trying to fix it, but that didn't work. Kumar also mentioned that there should be at least one successful alarm parsed message with an alarmIdentity. He also said that the topics from which the Normalizer is consuming do not have properly complete alarms. I'll check with Abbas, as the Normalizer is consuming from MessageForwarder's Kafka topic, and I will also revisit the codebase to see if anything needs to be fixed. Can I demo this tomorrow? Dmitry and Gowtham will ask why there isn't a complete alarm message received that contains all the attributes.

If this approach doesn't work, then we'll have to make the AlarmCreate Service up and running in OCP dev and manually push alarms from the Alarm Create API to Alarm Normalizer's consumer topic.