import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;

import javax.sql.DataSource;

@ExtendWith(MockitoExtension.class)
public class DataSourceConfigTest {

    @Mock
    private DataSourceModal dataSourceModal;

    @Mock
    private EntityManagerFactoryBuilder builder;

    @Mock
    private DataSource falloutDataSource;

    @InjectMocks
    private DataSourceConfig dataSourceConfig;

    @BeforeEach
    void setUp() {
        when(dataSourceModal.getUrl()).thenReturn("jdbc:h2:mem:testdb");
        when(dataSourceModal.getUsername()).thenReturn("sa");
        when(dataSourceModal.getPassword()).thenReturn("");
        when(dataSourceModal.getDriver()).thenReturn("org.h2.Driver");
    }

    @Test
    void testEntityManagerFactoryBean() {
        LocalContainerEntityManagerFactoryBean factoryBean = mock(LocalContainerEntityManagerFactoryBean.class);
        when(builder.dataSource(falloutDataSource)).thenReturn(builder);
        when(builder.packages("com.verizon.vbg.ledger.entity")).thenReturn(builder);
        when(builder.persistenceUnit("fallout-db")).thenReturn(builder);
        when(builder.build()).thenReturn(factoryBean);

        LocalContainerEntityManagerFactoryBean result = dataSourceConfig.entityManagerFactoryBean(builder, falloutDataSource);

        assertNotNull(result);
        verify(builder).dataSource(falloutDataSource);
        verify(builder).packages("com.verizon.vbg.ledger.entity");
        verify(builder).persistenceUnit("fallout-db");
        verify(builder).build();
    }
}
