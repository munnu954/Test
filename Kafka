@Test
    void testSendJsonMessage_NullId() {
        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setId(null);
        spaceCollector.setUrl("http://localhost");
        spaceCollector.setPort(8080);
        spaceCollector.setConnectionType("API");
        spaceCollector.setUsername("user");
        spaceCollector.setPassword("pass");

        String result = kafkaProducerService.sendJsonMessage(spaceCollector);

        assertEquals("SpaceCollector json must have an id", result);
    }

    @Test
    void testSendJsonMessage_EmptyUrl() {
        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setId("123");
        spaceCollector.setUrl("");
        spaceCollector.setPort(8080);
        spaceCollector.setConnectionType("API");
        spaceCollector.setUsername("user");
        spaceCollector.setPassword("pass");

        String result = kafkaProducerService.sendJsonMessage(spaceCollector);

        assertEquals("SpaceCollector json must have a non-empty url", result);
    }

    @Test
    void testSendJsonMessage_ZeroPort() {
        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setId("123");
        spaceCollector.setUrl("http://localhost");
        spaceCollector.setPort(0);
        spaceCollector.setConnectionType("API");
        spaceCollector.setUsername("user");
        spaceCollector.setPassword("pass");

        String result = kafkaProducerService.sendJsonMessage(spaceCollector);

        assertEquals("SpaceCollector json must have a non-zero port number", result);
    }

    @Test
    void testSendJsonMessage_WrongConnectionType() {
        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setId("123");
        spaceCollector.setUrl("http://localhost");
        spaceCollector.setPort(8080);
        spaceCollector.setConnectionType("TCP");
        spaceCollector.setUsername("user");
        spaceCollector.setPassword("pass");

        String result = kafkaProducerService.sendJsonMessage(spaceCollector);

        assertEquals("SpaceCollector json must have a connection_type of 'API'", result);
    }

    @Test
    void testSendJsonMessage_NullUsernameAndPassword() {
        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setId("123");
        spaceCollector.setUrl("http://localhost");
        spaceCollector.setPort(8080);
        spaceCollector.setConnectionType("API");
        spaceCollector.setUsername(null);
        spaceCollector.setPassword(null);

        String result = kafkaProducerService.sendJsonMessage(spaceCollector);

        assertEquals("SpaceCollector json must have a non-null username and password", result);
    }