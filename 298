@ExtendWith(MockitoExtension.class)
class KafkaConsumerTest {

    @InjectMocks
    private KafkaConsumer kafkaConsumer;

    @Mock
    private Util util;

    @Mock
    private KafkaInputProducer kafkaInputProducer;

    @Test
    void consume_ShouldNotWriteToExternalFileAndAuditQueue_WhenInputFileExistsAndTopicAccessible() throws IOException, ExecutionException, InterruptedException {
        // Arrange
        doReturn(true).when(util).isKafkaTopicPresent(anyString()); // Simulating topic accessible
        doNothing().when(kafkaConsumer).writeLogToFile(any(), any());
        kafkaConsumer.kafkaInputProducer = kafkaInputProducer;

        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setInputFilePath("C:/Temp/input.xml");
        String data = "{\"inputFilePath\":\"C:/Temp/input.xml\"}";

        // Act
        kafkaConsumer.consume(data);

        // Assert
        verify(kafkaConsumer, never()).writeLogToFile(any(), any());
        verify(kafkaConsumer, never()).kafkaInputProducer.sendFailureMessage(any(), any(), any());
    }
}