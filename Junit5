@ExtendWith(MockitoExtension.class)
class AlarmRepositoryImplTest {

    @InjectMocks
    private AlarmRepositoryImpl alarmRepositoryImpl;

    @Mock
    private JdbcTemplate jdbcTemplate;

    @Mock
    private PostGreDataBaseConfig postgresConf;

    private Alarm alarm;

    @BeforeEach
    void setup() {
        alarm = new Alarm();
        alarm.setAlarmIdentity("12345");
        alarm.setState(postgresConf.getAlarmStateMap().get(postgresConf.getAlarmStateCleared()));
    }

    @Test
    void testPostAlarmForEachIteration_ResetCountFlag_WhenStateIsClearedAndNewStateIsSet() {
        // Arrange
        int stateCleared = postgresConf.getAlarmStateMap().get(postgresConf.getAlarmStateCleared());
        int stateNew = postgresConf.getAlarmStateMap().get(postgresConf.getAlarmStateNew());

        when(postgresConf.getAlarmStateMap()).thenReturn(Map.of(postgresConf.getAlarmStateCleared(), stateCleared, postgresConf.getAlarmStateNew(), stateNew));

        when(jdbcTemplate.update(anyString(), any())).thenReturn(1);
        
        // Setting initial states
        alarm.setState(stateCleared);
        
        // Act
        alarmRepositoryImpl.postAlarmForEachIteration(alarm, "comp-id");

        // Assert
        assertEquals(1, alarm.getCountResetFlag());
        assertEquals(stateNew, alarm.getState());
    }

    // Add more test cases as needed to cover other scenarios
}