Sure! Here are the JUnit 5 test cases for the `CommonWrapperController` class, focusing on the conditional statements and the `catch` block for 100% code coverage:

```java
import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

@SpringBootTest
@ExtendWith(MockitoExtension.class)
public class CommonWrapperControllerTest {

    @Mock
    private ClrGraphicsService clrGraphicsService;

    @InjectMocks
    private CommonWrapperController commonWrapperController;

    private MockMvc mockMvc;

    @BeforeEach
    public void setup() {
        mockMvc = MockMvcBuilders.standaloneSetup(commonWrapperController).build();
    }

    @Test
    public void testGetClrGraphics_withValidInputs() throws Exception {
        String circuitId = "testCircuitId";
        String sourceSys = "testSourceSys";
        String cnd = "Y";
        String phyModel = "testPhyModel";

        when(clrGraphicsService.getClrGraphics(anyString(), anyString(), anyString(), anyString())).thenReturn("response");

        String response = commonWrapperController.getClrGraphics(circuitId, sourceSys, cnd, phyModel);

        assertEquals("response", response);
        verify(clrGraphicsService, times(1)).getClrGraphics(anyString(), anyString(), anyString(), anyString());
    }

    @Test
    public void testGetClrGraphics_withBlankCnd() throws Exception {
        String circuitId = "testCircuitId";
        String sourceSys = "testSourceSys";
        String cnd = "";
        String phyModel = "testPhyModel";

        when(clrGraphicsService.getClrGraphics(anyString(), anyString(), anyString(), anyString())).thenReturn("response");

        String response = commonWrapperController.getClrGraphics(circuitId, sourceSys, cnd, phyModel);

        assertEquals("response", response);
        verify(clrGraphicsService, times(1)).getClrGraphics(anyString(), anyString(), eq("N"), anyString());
    }

    @Test
    public void testGetClrGraphics_withNullCnd() throws Exception {
        String circuitId = "testCircuitId";
        String sourceSys = "testSourceSys";
        String cnd = null;
        String phyModel = "testPhyModel";

        when(clrGraphicsService.getClrGraphics(anyString(), anyString(), anyString(), anyString())).thenReturn("response");

        String response = commonWrapperController.getClrGraphics(circuitId, sourceSys, cnd, phyModel);

        assertEquals("response", response);
        verify(clrGraphicsService, times(1)).getClrGraphics(anyString(), anyString(), eq("N"), anyString());
    }

    @Test
    public void testGetClrGraphics_withInvalidCnd() throws Exception {
        String circuitId = "testCircuitId";
        String sourceSys = "testSourceSys";
        String cnd = "invalid";
        String phyModel = "testPhyModel";

        when(clrGraphicsService.getClrGraphics(anyString(), anyString(), anyString(), anyString())).thenReturn("response");

        String response = commonWrapperController.getClrGraphics(circuitId, sourceSys, cnd, phyModel);

        assertEquals("response", response);
        verify(clrGraphicsService, times(1)).getClrGraphics(anyString(), anyString(), eq("Y"), anyString());
    }

    @Test
    public void testGetClrGraphics_withUnsupportedEncodingException() throws Exception {
        String circuitId = "testCircuitId";
        String sourceSys = "testSourceSys";
        String cnd = "Y";
        String phyModel = "testPhyModel";

        when(clrGraphicsService.getClrGraphics(anyString(), anyString(), anyString(), anyString())).thenReturn("response");

        // Simulate UnsupportedEncodingException
        doThrow(new UnsupportedEncodingException()).when(URLDecoder.class);
        URLDecoder.decode(anyString(), eq(StandardCharsets.UTF_8.toString()));

        String response = commonWrapperController.getClrGraphics(circuitId, sourceSys, cnd, phyModel);

        assertEquals("response", response);
        verify(clrGraphicsService, times(1)).getClrGraphics(anyString(), anyString(), anyString(), anyString());
    }
}
```

This code covers the following scenarios:
1. Valid inputs.
2. `cnd` is blank.
3. `cnd` is null.
4. `cnd` is invalid.
5. Handling `UnsupportedEncodingException`.

Feel free to ask if you need any further assistance!

Source: Conversation with Copilot, 10/25/2024
(1) JaCoCo Code Coverage with JUnit 5 and Maven - HowToDoInJava. https://howtodoinjava.com/junit5/jacoco-test-coverage/.
(2) JUnit 5 @Nested Test Classes - Baeldung. https://www.baeldung.com/junit-5-nested-test-classes.
(3) Writing Templates for Test Cases Using JUnit 5 - Baeldung. https://www.baeldung.com/junit5-test-templates.
(4) Improving Test Coverage in JUnit5: Strategies and Best Practices - Machinet. https://blog.machinet.net/post/improving-test-coverage-in-j-unit-5-strategies-and-best-practices.
(5) github.com. https://github.com/heutelbeck/sapl-extensions/tree/7c947b8b92a99a5847d4c0f070352ad6e1f97d7e/sapl-pip-http%2Fsrc%2Ftest%2Fjava%2Fio%2Fsapl%2Fpip%2Fhttp%2FHttpPolicyInformationPointTest.java.
(6) github.com. https://github.com/SLSE-IT/wiper.dms/tree/2af1f2ad849327f461abe069cad33c24e2b7aeb4/src%2Ftest%2Fjava%2Fcom%2Fsixtleasing%2Fwiper%2Fdms%2Fservice%2FWiperDmsServiceTest.java.
(7) github.com. https://github.com/sgarbour/ovirt-engine/tree/5f8cc97df1378287e75e8cdcc9f5647a70c7545d/backend%2Fmanager%2Fmodules%2Fbll%2Fsrc%2Ftest%2Fjava%2Forg%2Fovirt%2Fengine%2Fcore%2Fbll%2Fstorage%2Fovfstore%2FProcessOvfUpdateForStoragePoolCommandTest.java.
(8) github.com. https://github.com/MarcinAmadeuszOlszewski/pet-clinic/tree/8b6945923a18653fb91bb163e9d083d69e927132/pet-clinic-web%2Fsrc%2Ftest%2Fjava%2Famadeuszx%2Fpetclinic%2Fspringpetclinic%2Fcontrollers%2FPetControllerTest.java.
(9) github.com. https://github.com/mariuszkawa/loguerro/tree/da5ce5a19daf86cfffa57174e060132b0de4dd59/src%2Ftest%2Fjava%2Fcom%2Fcodigeria%2Floguerro%2FLoguerroCliRunnerTest.java.
(10) github.com. https://github.com/mdeinum/dependency-injection/tree/e4c45201ed854e3f00ed6807c81c7910242bab3a/src%2Ftest%2Fjava%2Fbiz%2Fdeinum%2Fmoneytransfer%2Fsimple%2FSimpleMoneyTransferServiceTest.java.
(11) github.com. https://github.com/davidmolloydcu/notification-service/tree/2ed55500dfec6cd9f92407d535290ea15c7f1fde/src%2Ftest%2Fjava%2Fcom%2Fguru%2Fnotification%2Foutlets%2FMailOutletTest.java.
(12) github.com. https://github.com/assaulov/UtilityBills2/tree/137dcf37907abbcd8b26fdb563b4fdce10d5a89f/src%2Ftest%2Fjava%2Fru%2Fassaulov%2Futilitybills2%2FUserServiceImpTest.java.
(13) github.com. https://github.com/BPawlikowsky/AccountServiceAppExcercise/tree/e47303c01b058b51fb945a99d5dc8edcbbe0dec7/src%2Ftest%2Fjava%2Fcom%2FAccountService%2FApp%2FAccountServiceApp%2FService%2FAccountsServiceTest.java.
(14) github.com. https://github.com/ariprasetiyo/QIYOSQ/tree/bb2791fbc1c6c2b60e386e9ac66dc0918dd6aea6/src%2Ftest%2Fjava%2Farprast%2Fqiyosq%2Fcontroller%2Frest%2FAuthorizationApiTest.java.
(15) github.com. https://github.com/yarlung-zangbo/Yuesheng-Audio-Book/tree/0211833be1fb0ad85a12e4664375afec7b1310df/code%2Frec%2Fsrc%2Ftest%2Fjava%2Fcom%2Fyuesheng%2Fcf%2FControllerTests.java.
(16) github.com. https://github.com/76118299/springboot2.2/tree/3c5672b4bdf8da0a28dc8485a7e09dc629d0be23/spring-boot-tests%2Fspring-boot-smoke-tests%2Fspring-boot-smoke-test-data-jdbc%2Fsrc%2Ftest%2Fjava%2Fsmoketest%2Fdata%2Fjdbc%2FSampleDataJdbcApplicationTests.java.
(17) github.com. https://github.com/hmcts/em-hrs-ingestor/tree/99df5f696a0b04e6193b26567e41a62f7ca4cf17/src%2Ftest%2Fjava%2Fuk%2Fgov%2Fhmcts%2Freform%2Fem%2Fhrs%2Fingestor%2Fcomponenttests%2FAbstractBaseTest.java.