@Test
void testApplyPostingRule_topologyObjectsNodeIsNull() throws Exception {
    // Arrange
    Alarm alarm = new Alarm();
    PostingRule rule = new PostingRule();
    HashMap<String, Object> alarmMap = new HashMap<>();
    TopologyApiClient topoApiClient = Mockito.mock(TopologyApiClient.class);
    when(topoApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), any(String.class))).thenReturn(null);    
    PostingRuleProcessingService service = new PostingRuleProcessingService();
    service.topoApiClient = topoApiClient;
    
    // Act
    Alarm result = service.applyPostingRule(alarm, rule, alarmMap);
    
    // Assert
    assertNull(result.getTopologyDetails());
}

@Test
void testApplyPostingRule_eligibilityCheckExpressionFails() throws Exception {
    // Arrange
    Alarm alarm = new Alarm();
    PostingRule rule = new PostingRule();
    HashMap<String, Object> alarmMap = new HashMap<>();
    alarmMap.put("TestKey", "InvalidValue");
    PostingRuleProcessingService service = new PostingRuleProcessingService();
    
    // Act
    Alarm result = service.applyPostingRule(alarm, rule, alarmMap);
    
    // Assert
    assertNull(result.getTopologyDetails());
}

@Test
void testApplyPostingRule_alarmTopologyDetailsNotNull() throws Exception {
    // Arrange
    Alarm alarm = new Alarm();
    alarm.setTopologyDetails("{}");
    PostingRule rule = new PostingRule();
    HashMap<String, Object> alarmMap = new HashMap<>();
    PostingRuleProcessingService service = new PostingRuleProcessingService();
    
    // Act
    Alarm result = service.applyPostingRule(alarm, rule, alarmMap);
    
    // Assert
    assertNotNull(result.getTopologyDetails());
}

@Test
void testApplyPostingRule_exceptionThrown() throws Exception {
    // Arrange
    Alarm alarm = new Alarm();
    PostingRule rule = new PostingRule();
    HashMap<String, Object> alarmMap = new HashMap<>();
    TopologyApiClient topoApiClient = Mockito.mock(TopologyApiClient.class);
    when(topoApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), any(String.class))).thenThrow(new RuntimeException());
    PostingRuleProcessingService service = new PostingRuleProcessingService();
    service.topoApiClient = topoApiClient;
    
    // Act
    Alarm result = service.applyPostingRule(alarm, rule, alarmMap);
    
    // Assert
    assertNull(result.getTopologyDetails());
}