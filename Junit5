import static org.junit.jupiter.api.Assertions.assertThrows;

import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentMatchers;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoSettings;
import org.mockito.quality.Strictness;

@MockitoSettings(strictness = Strictness.STRICT_STUBS)
class MtnInsightsValidatorUnitTest {

    @InjectMocks
    private MtnInsightsValidator mtnInsightsValidator;

    @Mock
    private MtnInsightsAttributes mtnInsightsAttributes;

    @Test
    void validateIterator_empty_values_without_any_mandatory_combinations_Test() {
        Mockito.when(mtnInsightsAttributes.getEcpdId()).thenReturn(null);
        Mockito.when(mtnInsightsAttributes.getMtn()).thenReturn(null);
        Mockito.when(mtnInsightsAttributes.getInsightCategory()).thenReturn(null);
        Mockito.when(mtnInsightsAttributes.getInsightName()).thenReturn(null);
        Mockito.when(mtnInsightsAttributes.getOutageId()).thenReturn(null);
        assertThrows(InvalidRequestException.class,
                () -> mtnInsightsValidator.validateIterator(null, mtnInsightsAttributes, null));
    }

    @Test
    void validateIterator_empty_values_with_valid_mandatory_combinations_for_mybiz_Test() {
        Mockito.when(mtnInsightsAttributes.getEcpdId()).thenReturn("2345");
        Mockito.when(mtnInsightsAttributes.getMtn()).thenReturn("mtn1122");
        Mockito.when(mtnInsightsAttributes.getInsightCategory()).thenReturn(EventLedgerConstants.INSIGHT_CATEGORY_MYBIZZ);
        Mockito.when(mtnInsightsAttributes.getInsightName()).thenReturn(EventLedgerConstants.INSIGHT_NAME_MYBIZZ.get(0));
        Mockito.when(mtnInsightsAttributes.getOutageId()).thenReturn(null);
        assertThrows(InvalidRequestException.class,
                () -> mtnInsightsValidator.validateIterator(null, mtnInsightsAttributes, null));
    }

    @Test
    void validateIterator_empty_values_with_valid_mandatory_combinations_for_network_outage_Test() {
        Mockito.when(mtnInsightsAttributes.getEcpdId()).thenReturn("2345");
        Mockito.when(mtnInsightsAttributes.getMtn()).thenReturn("mtn1122");
        Mockito.when(mtnInsightsAttributes.getInsightCategory()).thenReturn(EventLedgerConstants.INSIGHT_CATEGORY_NETWORK_OUTAGE);
        Mockito.when(mtnInsightsAttributes.getInsightName()).thenReturn(EventLedgerConstants.INSIGHT_NAME_NETWORK.get(0));
        Mockito.when(mtnInsightsAttributes.getOutageId()).thenReturn("outageid1122");
        assertThrows(InvalidRequestException.class,
                () -> mtnInsightsValidator.validateIterator(null, mtnInsightsAttributes, null));
    }

    @Test
    void validateIterator_empty_values_with_invalid_combinations_Test() {
        Mockito.when(mtnInsightsAttributes.getEcpdId()).thenReturn("2345");
        Mockito.when(mtnInsightsAttributes.getMtn()).thenReturn("mtn1122");
        Mockito.when(mtnInsightsAttributes.getInsightCategory()).thenReturn(EventLedgerConstants.INSIGHT_CATEGORY_MYBIZZ);
        Mockito.when(mtnInsightsAttributes.getInsightName()).thenReturn(EventLedgerConstants.INSIGHT_NAME_NETWORK.get(0));
        Mockito.when(mtnInsightsAttributes.getOutageId()).thenReturn("outageid1122");
        assertThrows(InvalidRequestException.class,
                () -> mtnInsightsValidator.validateIterator(null, mtnInsightsAttributes, null));
    }

    @Test
    void validateIterator_valid_combinations_for_mybiz_Test() {
        Mockito.when(mtnInsightsAttributes.getEcpdId()).thenReturn("2345");
        Mockito.when(mtnInsightsAttributes.getMtn()).thenReturn("mtn1122");
        Mockito.when(mtnInsightsAttributes.getInsightCategory()).thenReturn(EventLedgerConstants.INSIGHT_CATEGORY_MYBIZZ);
        Mockito.when(mtnInsightsAttributes.getInsightName()).thenReturn(EventLedgerConstants.INSIGHT_NAME_MYBIZZ.get(0));
        Mockito.when(mtnInsightsAttributes.getOutageId()).thenReturn(null);
        mtnInsightsValidator.validateIterator(null, mtnInsightsAttributes, null);
    }

    @Test
    void validateIterator_valid_combinations_for_network_outage_Test() {
        Mockito.when(mtnInsightsAttributes.getEcpdId()).thenReturn("2345");
        Mockito.when(mtnInsightsAttributes.getMtn()).thenReturn("mtn1122");
        Mockito.when(mtnInsightsAttributes.getInsightCategory()).thenReturn(EventLedgerConstants.INSIGHT_CATEGORY_NETWORK_OUTAGE);
        Mockito.when(mtnInsightsAttributes.getInsightName()).thenReturn(EventLedgerConstants.INSIGHT_NAME_NETWORK.get(0));
        Mockito.when(mtnInsightsAttributes.getOutageId()).thenReturn("outageid1122");
        mtnInsightsValidator.validateIterator(null, mtnInsightsAttributes, null);
    }

    @Test
    void validateIterator_null_values_Test() {
        mtnInsightsValidator.validateIterator(null, null, null);
    }


}