import com.google.gson.JsonObject;
import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    private String objectName = "";

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] arr = input.split(",");
        JsonObject result = new JsonObject();

        if (arr.length > 2 && !arr[2].isEmpty()) {
            // New object found
            objectName = arr[2].trim();
            JsonObject object = new JsonObject();
            object.addProperty("ObjectName", objectName);
            object.addProperty("Begin Date", arr[1].trim());
            object.addProperty("End Date", ""); // Assuming End Date is not explicitly mentioned in the CSV
            object.addProperty("Ticket Number", arr[1].trim()); // Assuming Ticket Number is in column B
            result.add(objectName, object);
        } else if (arr.length > 3 && !arr[3].isEmpty()) {
            // Metric section found
            String sectionName = arr[3].trim();
            JsonObject sectionObject = new JsonObject();

            // Assuming columns D, E, F, G contain Min, Average, Max, Cumulative Counter Value respectively
            sectionObject.addProperty("Min", arr[4].trim());
            sectionObject.addProperty("Average", arr[5].trim());
            sectionObject.addProperty("Max", arr[6].trim());
            sectionObject.addProperty("Cumulative Counter Value", arr[7].trim());

            // Add the metric section to the corresponding object
            result.getAsJsonObject(objectName).add(sectionName, sectionObject);
        }

        collector.collect(result.toString());
    }
}
