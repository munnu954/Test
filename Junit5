public static class CsvtoJsonDRAnTransformer extends RichFlatMapFunction<String, String> {
    private List<String[]> headersList;
    private IntCounter successIntCounter = new IntCounter();
    private IntCounter failureIntCounter = new IntCounter();
    private String fileName;

    public CsvtoJsonDRAnTransformer(String fileName) {
        this.fileName = fileName;
    }

    @Override
    public void open(Configuration parameters) throws Exception {
        getRuntimeContext().addAccumulator("successIntCounter", this.successIntCounter);
        getRuntimeContext().addAccumulator("failureIntCounter", this.failureIntCounter);
    }

    @Override
    public void flatMap(String s, Collector<String> collector) throws Exception {
        String[] lines = s.split(System.lineSeparator());
        headersList = new ArrayList<>();

        // Parse headers
        for (int i = 0; i < 11; i++) {
            String line = lines[i];
            String[] headerArr = line.split(",");
            headersList.add(headerArr);
        }

        for (int i = 13; i < lines.length; i++) {

            String str = lines[i];
            String[] arr = str.split(",");

            if (!isValidData(arr)) {
                this.failureIntCounter.add(1);
                continue;
            }

            JSONObject obj = new JSONObject();
            obj.put("FILENAME", fileName);

            for (int j = 0; j < arr.length; j++) {
                String jsonkey = headersList.get(j)[0].trim().replace("‌‌", "");
                String jsonvalue = arr[j].trim().replace(""‌‌, "");
                obj.put(jsonkey, jsonvalue);
            }

            this.successIntCounter.add(1);
            collector.collect(obj.toString());
        }
    }

    private boolean isValidData(String[] arr) {
        if (headersList == null || headersList.isEmpty()) {
            return false;
        }

        int expectedColumnCount = headersList.get(0).length;
        if (arr.length != expectedColumnCount) {
            return false;
        }

        for (int i = 0; i < arr.length; i++) {
            if (!arr[i].trim().equals(headersList.get(0)[i].trim().replace("‌‌", ""))) {
                return false;
            }
        }

        return true;
    }
}