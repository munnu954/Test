import java.time.LocalDateTime;
import java.util.UUID;

public class AuditMessageGenerator {

    public static UnifiedAuditMessage generateFailedAuditMessage(String filePath) {
        UnifiedAuditMessage auditMessage = new UnifiedAuditMessage();
        auditMessage.setProcessType(ProcessType.TRANSFORMER);
        auditMessage.setInputFilePath(filePath);
        auditMessage.setJobStatus(JobStatus.FLINK_JOB_FAILED);
        auditMessage.getExceptions().add("FileNotFoundException- Input file path doesn't exist/Invalid file");
        auditMessage.setDateReceived(LocalDateTime.now());
        auditMessage.setJobId(UUID.randomUUID());
        // Set other relevant fields...
        return auditMessage;
    }

    public static UnifiedAuditMessage generateSuccessAuditMessage(String filePath) {
        UnifiedAuditMessage auditMessage = new UnifiedAuditMessage();
        auditMessage.setProcessType(ProcessType.TRANSFORMER);
        auditMessage.setInputFilePath(filePath);
        auditMessage.setJobStatus(JobStatus.FLINK_JOB_SUCCESSFUL);
        auditMessage.setDateReceived(LocalDateTime.now());
        auditMessage.setJobId(UUID.randomUUID());
        // Set other relevant fields...
        return auditMessage;
    }

    public static UnifiedAuditMessage generateExceptionAuditMessage(String filePath, String errorMessage) {
        UnifiedAuditMessage auditMessage = new UnifiedAuditMessage();
        auditMessage.setProcessType(ProcessType.TRANSFORMER);
        auditMessage.setInputFilePath(filePath);
        auditMessage.setJobStatus(JobStatus.FLINK_JOB_FAILED);
        auditMessage.getExceptions().add(errorMessage);
        auditMessage.setDateReceived(LocalDateTime.now());
        auditMessage.setJobId(UUID.randomUUID());
        // Set other relevant fields...
        return auditMessage;
    }
}
