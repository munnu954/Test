@RunWith(MockitoJUnitRunner.class)
public class PostingRuleProcessingServiceTest {

    @InjectMocks
    private PostingRuleProcessingService postingRuleProcessingService;

    @Mock
    private RuleLoadingService ruleLoadingService;

    @Mock
    private TopologyApiClient topoApiClient;

    @Mock
    private AlarmPostingUtils utils;

    @Test
    public void testApplyPostingRule() throws Exception {
        Alarm alarm = new Alarm();
        alarm.setAlarmIdentity("TestAlarm");
        PostingRule postingRule = new PostingRule();
        postingRule.setRuleId(1);
        postingRule.setRulePriority(1);
        HashMap<String, Object> alarmMap = new HashMap<>();
        
        // Mock response from TopologyApiClient
        ResponseEntity<String> responseEntity = new ResponseEntity<>("{ \"topologyObjects\": [] }", HttpStatus.OK);
        when(topoApiClient.fetchTopologyTraversalDetails(eq(alarm), eq(postingRule), anyString())).thenReturn(responseEntity);
        
        // Mock evaluateExpression method
        when(utils.evaluateExpression(anyString(), anyMap())).thenReturn("testValue");
        
        // Mock getObjectMapper().readTree
        JsonNode jsonNode = new ObjectMapper().readTree("{\"topologyObjects\": [] }");
        when(AlarmPostingConstants.getObjectMapper().readTree(anyString())).thenReturn(jsonNode);
        
        // Call the method
        Alarm result = postingRuleProcessingService.applyPostingRule(alarm, postingRule, alarmMap);
        
        // Assertions
        assertNull(result.getAlarmedObject());
        verify(utils, times(4)).evaluateExpression(anyString(), anyMap());
    }
    
    @Test
    public void testApplyPostingRuleWithTopologyObjects() throws Exception {
        Alarm alarm = new Alarm();
        alarm.setAlarmIdentity("TestAlarm");
        PostingRule postingRule = new PostingRule();
        postingRule.setRuleId(1);
        postingRule.setRulePriority(1);
        HashMap<String, Object> alarmMap = new HashMap<>();
        
        // Mock response from TopologyApiClient
        ResponseEntity<String> responseEntity = new ResponseEntity<>("{ \"topologyObjects\": [{ \"attribute\": \"value\" }] }", HttpStatus.OK);
        when(topoApiClient.fetchTopologyTraversalDetails(eq(alarm), eq(postingRule), anyString())).thenReturn(responseEntity);
        
        // Mock evaluateExpression method
        when(utils.evaluateExpression(anyString(), anyMap())).thenReturn("testValue");
        
        // Mock getObjectMapper().readTree
        JsonNode jsonNode = new ObjectMapper().readTree("{ \"topologyObjects\": [{ \"attribute\": \"value\" }] }");
        when(AlarmPostingConstants.getObjectMapper().readTree(anyString())).thenReturn(jsonNode);
        
        // Call the method
        Alarm result = postingRuleProcessingService.applyPostingRule(alarm, postingRule, alarmMap);
        
        // Assertions
        assertNotNull(result.getAlarmedObject());
        verify(utils, times(6)).evaluateExpression(anyString(), anyMap());
    }
    
    // Add more test cases for other scenarios and edge cases
}