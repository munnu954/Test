import com.fasterxml.jackson.core.JsonProcessingException;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import java.util.*;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class AlarmPostingUtilsTest {

    private Map<String, Object> srcMap;

    @BeforeEach
    void setup() {
        srcMap = new HashMap<>();
    }

    @Test
    void testParseWithNoMatches() throws JsonProcessingException {
        String value = "No matches";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals(value, result);
    }

    @Test
    void testParseWithSingleAttribute() throws JsonProcessingException {
        srcMap.put("attribute1", "value1");
        String value = "The value is %attribute1%";
        String expected = "The value is value1";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals(expected, result);
    }

    @Test
    void testParseWithNestedAttribute() throws JsonProcessingException {
        Map<String, Object> nestedMap = new HashMap<>();
        nestedMap.put("nestedAttribute", "nestedValue");
        srcMap.put("attribute1", nestedMap);
        String value = "The nested value is %attribute1:nestedAttribute%";
        String expected = "The nested value is nestedValue";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals(expected, result);
    }

    @Test
    void testParseWithArrayIndex() throws JsonProcessingException {
        List<String> list = Arrays.asList("element1", "element2", "element3");
        srcMap.put("arrayAttribute", list);
        String value = "The element is %arrayAttribute[1]%";
        String expected = "The element is element2";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals(expected, result);
    }

    @Test
    void testParseWithInvalidArrayIndex() throws JsonProcessingException {
        List<String> list = Arrays.asList("element1", "element2", "element3");
        srcMap.put("arrayAttribute", list);
        String value = "The element is %arrayAttribute[-1]%";
        String expected = "The element is ";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals(expected, result);
    }

    @Test
    void testParseWithInvalidJsonField() throws JsonProcessingException {
        Map<String, Object> nestedMap = new HashMap<>();
        nestedMap.put("nestedAttribute", "nestedValue");
        srcMap.put("attribute1", nestedMap);
        String value = "The nested value is %attribute1:invalidField%";
        String expected = "The nested value is ";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals(expected, result);
    }

    @Test
    void testParseWithMissingAttribute() throws JsonProcessingException {
        String value = "The value is %missingAttribute%";
        String expected = "The value is ";
        String result = AlarmPostingUtils.parse(value, srcMap, "rule1");
        assertEquals(expected, result);
    }
}