import java.util.*;

public class Main {
    public static String SearchingChallenge(String str) {
        int n = str.length();
        if (n < 2) {
            return "none";
        }
        
        int maxLength = 1; // Initialize the length of the longest palindromic substring
        int start = 0; // Initialize the starting index of the longest palindromic substring
        
        for (int i = 1; i < n; i++) {
            // Check for odd length palindromes with center at i
            int low = i - 1;
            int high = i + 1;
            while (low >= 0 && high < n && str.charAt(low) == str.charAt(high)) {
                if (high - low + 1 > maxLength) {
                    maxLength = high - low + 1;
                    start = low;
                }
                low--;
                high++;
            }
            
            // Check for even length palindromes with center between i-1 and i
            low = i - 1;
            high = i;
            while (low >= 0 && high < n && str.charAt(low) == str.charAt(high)) {
                if (high - low + 1 > maxLength) {
                    maxLength = high - low + 1;
                    start = low;
                }
                low--;
                high++;
            }
        }
        
        if (maxLength > 2) {
            return str.substring(start, start + maxLength);
        } else {
            return "none";
        }
    }

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        String input = s.nextLine().trim(); // Read input
        String result = SearchingChallenge(input); // Process input
        String challengeToken = "uxt3ol9y5df"; // Provided ChallengeToken

        // Construct final output in reverse order separated by colon
        String finalOutput = new StringBuilder(result).reverse().toString() + ":" + new StringBuilder(challengeToken).reverse().toString();
        System.out.println("Final Output: " + finalOutput);
    }
}