public boolean validateSpaceCollector() {
    if (id == null || id.isEmpty()) {
        return false;
    }
    if (url == null || url.isEmpty()) {
        return false;
    }
    if (port <= 0) {
        return false;
    }
    if (!connectionType.equals("API")) {
        return false;
    }
    return true;



import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public class SpaceCollectorTest {

    @Test
    public void testMissingIdInSpaceCollector() {
        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setUrl("http://localhost");
        spaceCollector.setPort(8080);
        spaceCollector.setUsername("admin");
        spaceCollector.setPassword("password");
        spaceCollector.setConnectionType("API");

        Assertions.assertFalse(spaceCollector.validateSpaceCollector());
    }

    @Test
    public void testInvalidId() {
        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setId("");
        spaceCollector.setUrl("http://localhost");
        spaceCollector.setPort(8080);
        spaceCollector.setUsername("admin");
        spaceCollector.setPassword("password");
        spaceCollector.setConnectionType("API");

        Assertions.assertFalse(spaceCollector.validateSpaceCollector());
    }

    @Test
    public void testInvalidUrl() {
        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setId("123");
        spaceCollector.setUrl("");
        spaceCollector.setPort(8080);
        spaceCollector.setUsername("admin");
        spaceCollector.setPassword("password");
        spaceCollector.setConnectionType("API");

        Assertions.assertFalse(spaceCollector.validateSpaceCollector());
    }

    @Test
    public void testInvalidPort() {
        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setId("123");
        spaceCollector.setUrl("http://localhost");
        spaceCollector.setPort(0);
        spaceCollector.setUsername("admin");
        spaceCollector.setPassword("password");
        spaceCollector.setConnectionType("API");

        Assertions.assertFalse(spaceCollector.validateSpaceCollector());
    }

    @Test
    public void testInvalidConnectionType() {
        SpaceCollector spaceCollector = new SpaceCollector();
        spaceCollector.setId("123");
        spaceCollector.setUrl("http://localhost");
        spaceCollector.setPort(8080);
        spaceCollector.setUsername("admin");
        spaceCollector.setPassword("password");
        spaceCollector.setConnectionType("FTP");

        Assertions.assertFalse(spaceCollector.validateSpaceCollector());
    }