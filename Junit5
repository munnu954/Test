To achieve 100% code coverage, we need to cover all branches and conditions, including the `if(null != deviceResponse)` statement in the `getDeviceDetailsv3` method. Since this branch is already covered by the success test case, we need to ensure that we test the scenario where `deviceResponse` is `null`. This situation occurs if an exception is thrown during the `restTemplate.exchange` call, and no response is available.

Here's an additional test case that covers this scenario:

```java
import org.springframework.web.client.ResourceAccessException;

@Test
public void testGetDeviceDetailsv3_nullDeviceResponse() throws Exception {
    // Setup mock responses
    String serviceUrl = "http://mockService/mockPath";
    when(iVAPPDeviceUtil.findServiceByName(anyString())).thenReturn(serviceUrl);
    when(iVAPPDeviceUtil.getHttpHeaders()).thenReturn(new HttpHeaders());

    // Simulate a scenario where the exchange call throws an exception leading to a null deviceResponse
    when(restTemplate.exchange(anyString(), eq(HttpMethod.POST), any(HttpEntity.class), eq(UTSEquipmentList.class)))
        .thenThrow(new ResourceAccessException("Resource access exception"));

    // Execute the method
    UTSEquipmentList result = iVAPPDeviceService.getDeviceDetailsv3(request, utsEquipmentList);

    // Verify
    assertNull(result.getEquipmentLst().getEquipmentContainer());

    // The deviceResponse is null, so covertV3Format should not be called
    verify(iVAPPDeviceUtil, never()).covertV3Format(any(UTSEquipmentList.class));
}
```

### Explanation:
- **Test Scenario**: This test simulates a case where an exception (in this case, `ResourceAccessException`) is thrown during the `restTemplate.exchange` call, resulting in `deviceResponse` being null.
  
- **Assertions**:
  - We check that the `equipmentLst` remains unchanged (or is initialized but empty) since `covertV3Format` should not be called when `deviceResponse` is null.
  - The `verify(iVAPPDeviceUtil, never()).covertV3Format(any(UTSEquipmentList.class))` line ensures that the format conversion method is not called, as expected.

This test case completes the coverage by ensuring that the `if(null != deviceResponse)` branch is tested for both true and false conditions.