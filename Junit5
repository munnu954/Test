Certainly! To update the `finalQuery` in the `queryBasedOnParameter` method to include conditions based on the presence of `locationCLLI` and `siteName` parameters in the `queryParams` map, you can modify the method as follows:

```java
private String queryBasedOnParameter(Map<String, Object> queryParams) {
    StringJoiner finalQuery = new StringJoiner("");

    // Add the base query
    if ("LOCATION".equalsIgnoreCase((String) queryParams.get("outputControl"))) {
        finalQuery.add(CoconutDeviceMSConstants.COCONUT_V3_SITE_QUERY);
    }

    // Check and append locationCLLI condition if present
    if (queryParams.containsKey("locationCLLI") && queryParams.get("locationCLLI") != null) {
        finalQuery.add(CoconutDeviceMSConstants.COCONUT_V3_LOCATION_CLLI.replace(": locationCLLI", "'%" + queryParams.get("locationCLLI").toString().toLowerCase() + "%'"));
    }

    // Check and append siteName condition if present
    if (queryParams.containsKey("siteName") && queryParams.get("siteName") != null) {
        finalQuery.add(CoconutDeviceMSConstants.COCONUT_V3_SITE_NAME.replace(":siteName", "'%" + queryParams.get("siteName").toString().toLowerCase() + "%'"));
    }

    return finalQuery.toString();
}
```

### Explanation:
1. **StringJoiner**: This is used to build the query string dynamically, adding parts only if certain conditions are met.

2. **Base Query**: The base query (`COCONUT_V3_SITE_QUERY`) is added if the `outputControl` is "LOCATION".

3. **Conditional Checks**:
   - **locationCLLI**: If `locationCLLI` is present in `queryParams`, it's appended to the `finalQuery`.
   - **siteName**: If `siteName` is present in `queryParams`, it's appended to the `finalQuery`.

4. **String Replacement**: The placeholders `: locationCLLI` and `:siteName` are replaced with the actual values from `queryParams`, wrapped in `'%` and `%'` for pattern matching with `LIKE`.

This updated method ensures that the `finalQuery` is constructed properly based on the provided parameters.