import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;
import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;
import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

import java.util.HashMap;
import java.util.Map;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    private String currentSection = null;
    private Map<String, ObjectNode> sections = new HashMap<>();
    private final ObjectMapper objectMapper = new ObjectMapper();

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] columns = input.split(",");
        String title = findTitle(columns);

        if (title != null) {
            currentSection = title;
            sections.put(currentSection, objectMapper.createObjectNode());
        }

        if (currentSection != null) {
            processRow(columns);
        }
    }

    private String findTitle(String[] columns) {
        for (String column : columns) {
            if (!column.trim().isEmpty()) {
                return column.trim();
            }
        }
        return null;
    }

    private void processRow(String[] columns) {
        ObjectNode sectionObject = sections.get(currentSection);
        if (sectionObject != null) {
            if (columns.length > 1) {
                String attribute = columns[1].trim();
                String value = columns.length > 2 ? columns[2].trim() : "";

                if (!attribute.isEmpty()) {
                    sectionObject.put(attribute, value);
                }
            }
        }
    }
}
