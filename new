please write the complete JUNIT5 test cases code covering all possible scenarios for 100% code coverage of the below MultipartDRMonitor class:-

public class MultipartDRMonitor {

static GWAlerts m_AlertObj = null;

static String instanceId="INS01";

static int nState = 0;

static QManager m_objQMgr = null;

private MultipartDRMonitor() {}

public static void main(String args[]) throws Exception {

System.out.println("Platform : MessagingGW [Version 2.0]");

System.out.println("Component: DRModel subVersion: 01"); 
System.out.println("-- ---");

System.setProperty("logger4jname", "multipartdr");

String strPropsFile =  "d:/gateway.properties";

String strQList = "";

int nReceivers = 1;

String strQueue[] = null;

if (args.length > 0) {

strPropsFile = args[0];

strQList = args[1];

strQueue = strQList.split(","); System.out.println("[QUEUES]:" + strQList);

nReceivers = GWUtil.intVal(args[2], 1);

if (strPropsFile == null || strProps File.length() == 0) {



System.out.println("Loading Properties Failed. for path:" + strPropsFile);

} else {

System.out.println("Loading Properties Failed. for path:"+ strPropsFile);

System.exit(1);
}

java.util.Properties props = GWUtil.loadConfigSet(strPropsFile);

if (props == null) {

System.out.println("Loading Properties Failed. for path: " + strPropsFile);

System.exit(1);

} if (args.length > 3) {

instanceld = args[3];

}

boolean blogger4j = false;

if (args.length > 4) {

blogger4j = true;

}

try {

String poolName = System.getProperty("dbpool.name"); poolName = (poolName == null)? "default": poolName; System.setProperty("dbpool.instance.name", poolName);
 DBConnector.createDataSource (poolName, props);

} catch (Exception e) {

System.out.println("DBConnector failed: "+e.getMessage());

return;

}

String strValue = System.getProperty("usr.dr.connector.url");

if(strValue != null) {

props.setProperty("usr.dr.connector.url", strValue);

}

m_AlertObj = GWAlerts.getInstance(props);

m_AlertObj.generateAlert (GWAlerts.ALERTID_DR_MESSAGING, "DRMODEL"+"-"+instanceId, "", GWAlerts.ALERT_TRAP, GWAlerts.NOTIFY, "DRModel Started");

Runtime.getRuntime().addShutdownHook(new ShutdownThread());

nState = 1;

m_objQMgr = new QManager();

if(!m_objQMgr.init(props)){

System.out.println("QManager init() failed.");

return;

}

MultipartDRMonitor obj =  new MultipartDRMonitor();

if (obj.init(props, strQueue, blogger4j, nReceivers, instanceId)) {

try {

while (nState == 1) {

try {

Thread.sleep(1000);

} catch (Exception ex) {

}

}

} catch (Exception e) {

e.printStackTrace();

}// catch

}else{

System.out.println("init() failed.");

m_objQMgr.deinit();

System.exit(1);

}
nState = 0;
}

static ArrayList<MultipartDRHandler> list = new ArrayList<MultipartDRHandler>();

public boolean init(Properties props, String[] strQname, boolean blogger4j, int nReceivers, String inst) {

if (props null) {

System.out.println("ConfigLoaderWS: getInstance(): loadConfigSet return NULL");

return false;
}

for(int i=0; i < strQname.length; i++) {

String Qname = strQname[i];

for (int j = 0; j < nReceivers; j++) {

MultipartDRHandler m_ReceiverObj = new MultipartDRHandler();

m_ReceiverObj.setName("Thread - " + j);

System.out.println("[QUEUE Initializing]:" + Qname);

if (m_ReceiverObj.init(props, Qname, m_AlertObj, m_objQMgr, blogger4j, inst, true)) {

m_ReceiverObj.startPull();

list.add(m_Receiverobj);

}else{

System.out.println("Failed Initializing DR Queue: "+Qname);
return false;
}
}
}

return true;

}

/ Shut Down Hook Closed all the PullQueue Threads and its Connected Connections*/

static class ShutdownThread extends Thread {

public void run() {

if (nState == 1) {

nState = 2;

}

System.out.println("Shutdown Thread Started");
 for(int i=0; i<list.size(); i++) { 
MultipartDRHandler mQDlvrReceiver = list.get(i);

mQDlvrReceiver.stopPull();

} 
m_objQMgr.deinit();
m_AlertObj.generateAlert(GWAlerts.ALERTID_DR_MESSAGING, "DRMODEL"+"-"+instanceId, "", GWAlerts.ALERT_TRAP, GWAlerts.NOTIFY, "DRModel Stopped");
}
}
}