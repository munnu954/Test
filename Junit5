Here's an example of JUnit test cases for the `getFlinkJobDetails` method with 100% code coverage:

```java
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class FlinkJobServiceTest {

    @Test
    public void testGetFlinkJobDetails_WithValidFileTypeAndEnabled() {
        // Mocking the findByQuery method
        FlinkJobService flinkJobService = mock(FlinkJobService.class);
        
        // Setting up test data
        FlinkJob flinkJob = new FlinkJob();
        flinkJob.setId("1");
        flinkJob.setFlinkJarFilePath("flink.jar");
        // Set other properties
        
        when(flinkJobService.findByQuery(anyString())).thenReturn(Collections.singletonList(flinkJob));
        
        // Calling the method to test
        FlinkJob result = flinkJobService.getFlinkJobDetails("csv", true, "createdAt", "desc");
        
        // Verifying the result
        assertNotNull(result);
        assertEquals("1", result.getId());
        
        // Verifying findByQuery method is called with specific query
        verify(flinkJobService, times(1)).findByQuery(anyString());
    }

    @Test
    public void testGetFlinkJobDetails_WithEmptyResult() {
        // Mocking the findByQuery method
        FlinkJobService flinkJobService = mock(FlinkJobService.class);
        
        when(flinkJobService.findByQuery(anyString())).thenReturn(Collections.emptyList());
        
        // Calling the method to test
        FlinkJob result = flinkJobService.getFlinkJobDetails("csv", true, "createdAt", "desc");
        
        // Verifying the result
        assertNull(result);
        
        // Verifying findByQuery method is called with specific query
        verify(flinkJobService, times(1)).findByQuery(anyString());
    }

    @Test
    public void testCount() {
        // Mocking the findAll method
        FlinkJobService flinkJobService = mock(FlinkJobService.class);
        
        // Setting up test data
        FlinkJob flinkJob1 = new FlinkJob();
        // Set properties for job 1
        FlinkJob flinkJob2 = new FlinkJob();
        // Set properties for job 2
        
        when(flinkJobService.findAll()).thenReturn(Arrays.asList(flinkJob1, flinkJob2));
        
        // Calling the method to test
        long count = flinkJobService.count();
        
        // Verifying the count
        assertEquals(2, count);
        
        // Verifying findAll method is called
        verify(flinkJobService, times(1)).findAll();
    }
}
```

In the above test cases, we are testing the `getFlinkJobDetails` method with valid input, empty result, and also testing the `count` method. Make sure to replace `FlinkJobService` and `findByQuery` method with your actual class and method names.