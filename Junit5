Sure! Here is an example of additional JUnit5 test cases to achieve 100% code coverage for the applyPostingRule method of PostingRuleProcessingService class:

```java
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class PostingRuleProcessingServiceTest {

    @Test
    public void testApplyPostingRuleWithRuleTypeEqualsAmount() {
        // Arrange
        PostingRule rule = new PostingRule("Amount", "100");
        PostingRuleProcessingService service = new PostingRuleProcessingService();

        // Act
        PostingResult result = service.applyPostingRule(rule, 100.0);

        // Assert
        assertEquals(100.0, result.getAmount());
    }

    @Test
    public void testApplyPostingRuleWithRuleTypeEqualsPercentage() {
        // Arrange
        PostingRule rule = new PostingRule("Percentage", "0.1");
        PostingRuleProcessingService service = new PostingRuleProcessingService();

        // Act
        PostingResult result = service.applyPostingRule(rule, 100.0);

        // Assert
        assertEquals(10.0, result.getAmount());
    }

    @Test
    public void testApplyPostingRuleWithInvalidRuleType() {
        // Arrange
        PostingRule rule = new PostingRule("Invalid", "100");
        PostingRuleProcessingService service = new PostingRuleProcessingService();

        // Act
        PostingResult result = service.applyPostingRule(rule, 100.0);

        // Assert
        assertNull(result);
    }

    @Test
    public void testApplyPostingRuleWithInvalidRuleValue() {
        // Arrange
        PostingRule rule = new PostingRule("Amount", "abc");
        PostingRuleProcessingService service = new PostingRuleProcessingService();

        // Act
        PostingResult result = service.applyPostingRule(rule, 100.0);

        // Assert
        assertNull(result);
    }
}
```

These additional test cases cover different branches such as rule type equals "Amount", "Percentage", invalid rule type and invalid rule value, in order to achieve 100% code coverage for the applyPostingRule method of the PostingRuleProcessingService class.