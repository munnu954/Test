  @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);

        // Mocking the configuration parameters
        when(configParams.getAlarmFetchURL()).thenReturn("http://example.com/alarm");
        when(configParams.getAlarmFilterKey()).thenReturn("dummyKey");
    }

    @Test
    public void testGetAlarmDetailsById_NotFound() {
        String alarmIdentity = "testAlarmIdentity";

        // Mocking RestTemplate to throw HttpClientErrorException.NotFound
        doThrow(new HttpClientErrorException(HttpStatus.NOT_FOUND))
                .when(restTemplate)
                .exchange(eq("http://example.com/alarm"), eq(HttpMethod.POST), any(), eq(String.class));

        // Test the method
        String result = apiOperation.getAlarmDetailsById(alarmIdentity);

        // Assert that the result is null since the NotFound exception should be caught
        assertNull(result);
    }