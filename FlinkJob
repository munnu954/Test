public class CsvtoJsonDRAnTransformer extends RichFlatMapFunction<String, String> {
    private List<Map<String, String>> headersList;
    private IntCounter successIntCounter = new IntCounter();
    private IntCounter failureIntCounter = new IntCounter();
    private String fileName;

    public CsvtoJsonDRAnTransformer(String fileName) {
        this.fileName = fileName;
    }

    @Override
    public void open(Configuration parameters) throws Exception {
        getRuntimeContext().addAccumulator("successIntCounter", this.successIntCounter);
        getRuntimeContext().addAccumulator("failureIntCounter", this.failureIntCounter);
    }

    @Override
    public void flatMap(String s, Collector<String> collector) throws Exception {
        String[] lines = s.split(System.lineSeparator());
        
        // Process headers from line 1-11
        headersList = new ArrayList<>();
        for (int i = 0; i < 11; i++) {
            String[] headerArr = lines[i].split(",");
            if (headerArr.length != 2) {
                this.failureIntCounter.add(1);
                continue;
            }
            String jsonkey = headerArr[0].trim().replace("\"", "");
            String jsonvalue = headerArr[1].trim().replace("\"", "");
            Map<String, String> headerMap = new HashMap<>();
            headerMap.put(jsonkey, jsonvalue);
            headersList.add(headerMap);
        }
        
        for (int i = 13; i < lines.length; i++) { // Modify to start processing from line 14
            String str = lines[i];
            String[] arr = str.split(",");
            if (headersList.isEmpty() || headersList.size() != arr.length) {
                this.failureIntCounter.add(1);
                continue;
            }
            JSONObject obj = new JSONObject();
            obj.put("FILENAME", fileName);
            for (int j = 0; j < arr.length; j++) {
                Map<String, String> headerMap = headersList.get(j);
                String jsonkey = headerMap.keySet().iterator().next();
                String jsonvalue = arr[j].trim().replace("\"", "");
                obj.put(jsonkey, jsonvalue);
            }
            this.successIntCounter.add(1);
            collector.collect(obj.toString());
        }
    }
}