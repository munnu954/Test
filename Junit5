To achieve 100% code coverage for the specified conditional statement in the `validateIterator` method of the `MtnInsightsValidator` class, we need to create JUnit5 test cases that cover all possible branches. Here is the sample code for the test cases:

```java
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class MtnInsightsValidatorTest {
    
    @Test
    public void testValidateIteratorErrorMessageSet() {
        MtnInsightsValidator validator = new MtnInsightsValidator();
        MtnInsightsAttributes attributes = new MtnInsightsAttributes();
        String logVal = "TestLog";
        
        attributes.setMtn(null);
        attributes.setInsightCategory(null);
        attributes.setInsightName(null);
        
        assertThrows(InvalidRequestException.class, () -> {
            validator.validateIterator(null, attributes, logVal);
        });
    }
    
    @Test
    public void testValidateIteratorErrorMessageNotSet() {
        MtnInsightsValidator validator = new MtnInsightsValidator();
        MtnInsightsAttributes attributes = new MtnInsightsAttributes();
        String logVal = "TestLog";
        
        attributes.setMtn("TestMtn");
        attributes.setInsightCategory("TestCategory");
        attributes.setInsightName("TestName");
        
        assertDoesNotThrow(() -> {
            validator.validateIterator(null, attributes, logVal);
        });
    }
}
```

You can add more test cases to cover other scenarios as needed. Make sure to run these test cases to ensure they provide the required code coverage and avoid the specified errors. Let me know if you need any further assistance.