Sure, I can help you with that. Here is a workable and executable test case scenario for the Kafka topic 3459-DEV-COLLECTION-JSON-DATA-QUEUE not accessible:


@Test
public void testKafkaTopicNotAccessible() throws Exception {

try {

String[] args = {"--input", "C:\\Temp\\Device.csv", "--Topic", "3459-DEV-COLLECTION-JSON-DATA-QUEUE",--bootstarpServer", "localhost:9092"}; Main.main(args);

} catch (Exception e) {

// Assert

assertEquals("Could not connect to Kafka topic 3459-DEV-COLLECTION-JSON-DATA-QUEUE", e.getMessage());
}
}


To make this test case more robust, you could also add a check to make sure that the Kafka topic actually exists before trying to connect to it. You could do this by adding a call to the KafkaTopicUtils.exists() method before the call to Main.main().


try {

if (!KafkaTopicUtils.exists("3459-DEV-COLLECTION-JSON-DATA-QUEUE")) {

throw new RuntimeException("Kafka topic 3459-DEV-COLLECTION-JSON-DATA-QUEUE does not exist");

}

String[] args = {"--input", "C:\\Temp\\Device.csv", "--Topic", "3459-DEV-COLLECTION-JSON-DATA-QUEUE",--bootstarpServer", "localhost:9092"}; Main.main(args);

} catch (Exception e) {

// Assert

assertEquals("Could not connect to Kafka topic 3459-DEV-COLLECTION-JSON-DATA-QUEUE", e.getMessage());
}