public HashMap<String, Object> removeNullValuesInJsonAttributes(Map<String, Object> msg) {
    HashMap<String, Object> resultMsg = new HashMap<>(msg);
    try {
        for (Map.Entry<String, Object> iterate : msg.entrySet()) {
            Object value = iterate.getValue();

            // Ensure proper JSON formatting before parsing
            if (checkIfJsonValue(value)) {
                try {
                    HashMap<String, Object> updatedMsg = removeNullValuesInJsonAttributes(
                        RulesConstants.getObjectMapper().readValue(value.toString().replaceAll("=([^,}]+)", "=\"$1\""), HashMap.class)
                    );
                    resultMsg.put(iterate.getKey(), updatedMsg);
                } catch (Exception e) {
                    logger.error("Failed to parse JSON for key: " + iterate.getKey() + ", value: " + value, e);
                }
            } else {
                // Remove null or empty values
                if (value == null || value.toString().trim().isEmpty()) {
                    resultMsg.remove(iterate.getKey());
                }
            }
        }
    } catch (Exception e) {
        logger.error("Exception occurred while trying to remove null/empty values from JSON attributes: ", e);
    }
    return resultMsg;
}