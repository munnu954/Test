import static org.mockito.Mockito.*;

import org.apache.kafka.clients.consumer.ConsumerRecords;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.apache.kafka.clients.consumer.OffsetOutOfRangeException;
import org.apache.kafka.clients.consumer.WakeupException;
import org.apache.kafka.common.TopicPartition;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

@ExtendWith(MockitoExtension.class)
public class KafkaMessageConsumerTest {

    @Mock
    private KafkaConsumer<String, String> kafkaConsumer;

    @Test
    public void testCreateConsumerConnectionWithTopic() {
        KafkaMessageConsumer kafkaMessageConsumer = new KafkaMessageConsumer();
        kafkaMessageConsumer.consumer = kafkaConsumer;

        when(kafkaConsumer.listTopics()).thenReturn(Collections.singletonMap("testTopic", 1));

        kafkaMessageConsumer.createConsumerConnection("testTopic");

        verify(kafkaConsumer).subscribe(Collections.singletonList("testTopic"));
    }

    @Test
    public void testPollForMessages() throws ConsumerException {
        KafkaMessageConsumer kafkaMessageConsumer = new KafkaMessageConsumer();
        kafkaMessageConsumer.consumer = kafkaConsumer;

        ConsumerRecords<String, String> records = new ConsumerRecords<>(Collections.emptyMap());

        when(kafkaConsumer.poll(Duration.ofMillis(10))).thenReturn(records);

        kafkaMessageConsumer.pollForMessages();

        verify(kafkaConsumer).poll(Duration.ofMillis(10));
    }

    @Test
    public void testAcknowledgeMessage() throws ConsumerException {
        KafkaMessageConsumer kafkaMessageConsumer = new KafkaMessageConsumer();
        kafkaMessageConsumer.consumer = kafkaConsumer;

        Message message = new Message("test", "testTopic", 0, 0, 0);

        kafkaMessageConsumer.acknowledgeMessage(message);

        verify(kafkaConsumer).commitSync(anyMap());
    }

    @Test
    public void testCloseConsumerConnection() {
        KafkaMessageConsumer kafkaMessageConsumer = new KafkaMessageConsumer();
        kafkaMessageConsumer.consumer = kafkaConsumer;

        kafkaMessageConsumer.closeConsumerConnection();

        verify(kafkaConsumer).close();
        verify(kafkaConsumer).wakeup();
    }
}

// Additional testcases can be added to cover other branches and scenarios for 100% code coverage.