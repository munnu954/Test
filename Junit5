

@ExtendWith(MockitoExtension.class)
public class ApiOperationTest {

    @Mock
    private RestTemplate restTemplate;

    @Mock
    private AlarmGroupingParams configParams;

    @InjectMocks
    private ApiOperation apiOperation;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testGetAlarmDetailsById_NotFound() {
        String alarmIdentity = "testAlarmIdentity";
        String url = "http://example.com/alarm"; // Example URL

        // Mocking the configuration parameters
        when(configParams.getAlarmFetchURL()).thenReturn(url);
        when(configParams.getAlarmFilterKey()).thenReturn("dummyKey");

        // Mocking RestTemplate to throw HttpClientErrorException.NotFound
        doThrow(new HttpClientErrorException(HttpStatus.NOT_FOUND))
                .when(restTemplate)
                .exchange(eq(url), eq(HttpMethod.POST), any(), eq(String.class));

        // Test the method
        String result = apiOperation.getAlarmDetailsById(alarmIdentity);

        // Assert that the result is null since the NotFound exception should be caught
        assertNull(result);
    }
