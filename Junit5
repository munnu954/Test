@Test
public void testDeleteCsvFile() throws IOException {
// Set up your test environment, such as setting sourceFilePath
String testSourceFilePath = "test_source_file.csv";
KafkaConsumer kafkaConsumer = new KafkaConsumer
Field sourceFilePath = KafkaConsumer.class.getDeclaredField("sourceFilePath");
sourceFilePath.setAccessible(true);
sourceFilePath.set(kafkaConsumer, testSourceFilePath);

// Create a test file
Path testSourcePath = Path.of(testSourceFilePath);
Files.createFile(testSourcePath);

kafkaConsumer.deleteCsvFile();

// Assert that the file was deleted
assertFalse(Files.exists(testSourcePath));
}


@Test
public void testDeleteCsvFile() throws IOException {
    // Set up your test environment, such as setting sourceFilePath
    String testSourceFilePath = "test_source_file.csv";
    KafkaConsumer kafkaConsumer = new KafkaConsumer(); // Instantiate KafkaConsumer

    // Create a test file
    Path testSourcePath = Paths.get(testSourceFilePath);
    Files.createFile(testSourcePath);

    // Mocking the setSourceFilePath method
    PowerMockito.doNothing().when(kafkaConsumer).setSourceFilePath(Mockito.anyString());

    kafkaConsumer.setSourceFilePath(testSourceFilePath);

    kafkaConsumer.deleteCsvFile();

    // Assert that the file was deleted
    assertFalse(Files.exists(testSourcePath));
}
```

Please note that in the updated JUnit5 test case, we are now instantiating the KafkaConsumer and then using PowerMockito to mock the setSourceFilePath method to make it workable with JUnit5. Additionally, we are using Paths.get instead of Path.of to create the test source path.