**getZEnd() method:**

```java
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockedStatic;
import org.mockito.Mockito;
import org.mockito.stubbing.Answer;

import com.google.gson.Gson;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.doAnswer;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.when;

class CircuitDetailsProviderTest_getZEnd_More {

    @Mock
    private RestClientUtil restClientUtil;
    @InjectMocks
    private CircuitDetailsProvider circuitDetailsProvider;

    private static final String CIRCUIT_ID = "12345";
    private static final String CLLI = "12345";
    private static final String FINAL_URL = "http://cktDetServiceName:port/cktDetailuri?circuitId=12345";

    @Test
    void getZEnd_whenCircuitPathLinkType() {
        // Given
        PortRef portRef = new PortRef();
        portRef.setClliCode(CLLI);
        PortChannel portChannel = new PortChannel();
        portChannel.setPortRef(List.of(portRef));
        ZEnd zEnd = new ZEnd();
        zEnd.setPortChannel(List.of(portChannel));
        Circuit circuit = new Circuit();
        circuit.setZEnd(List.of(zEnd));
        CircuitPathLink circuitPathLink = new CircuitPathLink();
        circuitPathLink.setCircuit(List.of(circuit));
        CircuitData circuitData = new CircuitData();
        circuitData.setCircuitLst(List.of(new CircuitLst(List.of(circuitPathLink))));
        CircuitDetailResponse response = new CircuitDetailResponse();
        response.setCircuitData(circuitData);

        String json = "{\"circuitData\": {\"circuitLst\": [{\"circuit\": [{\"zEnd\": [{\"portChannel\": [{\"portRef\": [{\"clliCode\": \"12345\"}]}]}]}]}]}}";
        Gson gson = new Gson();
        CircuitDetailResponse circuitDetailResponse = gson.fromJson(json, CircuitDetailResponse.class);

        // When
        ZEnd returnedZEnd = circuitDetailsProvider.getZEnd(CIRCUIT_ID, CLLI, circuitDetailResponse);

        // Then
        assertEquals(zEnd, returnedZEnd);
    }

    @Test
    void getZEnd_whenSegmentType() {
        // Given
        PortRef portRef = new PortRef();
        portRef.setClliCode(CLLI);
        PortChannel portChannel = new PortChannel();
        portChannel.setPortRef(List.of(portRef));
        ZEnd zEnd = new ZEnd();
        zEnd.setPortChannel(List.of(portChannel));
        Circuit circuit = new Circuit();
        circuit.setZEnd(List.of(zEnd));
        CircuitSegment circuitSegment = new CircuitSegment();
        circuitSegment.setCircuit(List.of(circuit));
        CircuitData circuitData = new CircuitData();
        circuitData.setCircuitLst(List.of(new CircuitLst(List.of(circuitSegment))));
        CircuitDetailResponse response = new CircuitDetailResponse();
        response.setCircuitData(circuitData);

        String json = "{\"circuitData\": {\"circuitLst\": [{\"circuit\": [{\"zEnd\": [{\"portChannel\": [{\"portRef\": [{\"clliCode\": \"12345\"}]}]}]}]}]}}";
        Gson gson = new Gson();
        CircuitDetailResponse circuitDetailResponse = gson.fromJson(json, CircuitDetailResponse.class);

        // When
        ZEnd returnedZEnd = circuitDetailsProvider.getZEnd(CIRCUIT_ID, CLLI, circuitDetailResponse);

        // Then
        assertEquals(zEnd, returnedZEnd);
    }

    @Test
    void getZEnd_whenClliCodeNotSame() {
        // Given
        PortRef portRef = new PortRef();
        portRef.setClliCode("54321");
        PortChannel portChannel = new PortChannel();
        portChannel.setPortRef(List.of(portRef));
        ZEnd zEnd = new ZEnd();
        zEnd.setPortChannel(List.of(portChannel));
        Circuit circuit = new Circuit();
        circuit.setZEnd(List.of(zEnd));
        CircuitData circuitData = new CircuitData();
        circuitData.setCircuitLst(List.of(new CircuitLst(List.of(circuit))));
        CircuitDetailResponse response = new CircuitDetailResponse();
        response.setCircuitData(circuitData);

        String json = "{\"circuitData\": {\"circuitLst\": [{\"circuit\": [{\"zEnd\": [{\"portChannel\": [{\"portRef\": [{\"clliCode\": \"54321\"}]}]}]}]}]}}";
        Gson gson = new Gson();
        CircuitDetailResponse circuitDetailResponse = gson.fromJson(json, CircuitDetailResponse.class);

        circuitData.setCircuitLst(List.of(new CircuitLst(List.of(circuit))));
        response.setCircuitData(circuitData);

        // When
        ZEnd returnedZEnd = circuitDetailsProvider.getZEnd(CIRCUIT_ID, CLLI, circuitDetailResponse);

        // Then
        assertNull(returnedZEnd);
    }

    @Test
    void getZEnd_whenCircuitClrType() {
        // Given
        PortRef portRef = new PortRef();
        portRef.setClliCode(CLLI);
        PortChannel portChannel = new PortChannel();
        portChannel.setPortRef(List.of(portRef));
        ZEnd zEnd = new ZEnd();
        zEnd.setPortChannel(List.of(portChannel));
        Circuit circuit = new Circuit();
        circuit.setZEnd(List.of(zEnd));
        CircuitInfo circuitInfo = new CircuitInfo();
        circuitInfo.setZEnd(List.of(zEnd));
        ClrComponent clrComponent = new ClrComponent();
        clrComponent.setCircuitComp(List.of(new CircuitComp(List.of(circuitInfo))));
        CircuitData circuitData = new CircuitData();
        circuitData.setCircuitLst(List.of(new CircuitLst(List.of(circuit))));
        CircuitDetailResponse response = new CircuitDetailResponse();
        response.setCircuitData(circuitData);

        String json = "{\"circuitData\": {\"circuitLst\": [{\"circuit\": [{\"clr\": [{\"circuitComp\": [{\"circuitInfo\": [{\"zEnd\": [{\"portChannel\": [{\"portRef\": [{\"clliCode\": \"12345\"}]}]}]}]}]}]}]}]}}";
        Gson gson = new Gson();
        CircuitDetailResponse circuitDetailResponse = gson.fromJson(json, CircuitDetailResponse.class);

        // When
        ZEnd returnedZEnd = circuitDetailsProvider.getZEnd(CIRCUIT_ID, CLLI, circuitDetailResponse);

        // Then
        assertEquals(zEnd, returnedZEnd);
    }

    @Test
    void getZEnd_whenCircuitTrailType() {
        // Given
        PortRef portRef = new PortRef();
        portRef.setClliCode(CLLI);
        PortChannel portChannel = new PortChannel();
        portChannel.setPortRef(List.of(portRef));
        ZEnd zEnd = new ZEnd();
        zEnd.setPortChannel(List.of(portChannel));
        Circuit circuit = new Circuit();
        circuit.setZEnd(List.of(zEnd));
        CircuitInfo circuitInfo = new CircuitInfo();
        circuitInfo.setZEnd(List.of(zEnd));
        ClrComponent clrComponent = new ClrComponent();
        clrComponent.setCircuitComp(List.of(new CircuitComp(List.of(circuitInfo))));
        CircuitData circuitData = new CircuitData();
        circuitData.setCircuitLst(List.of(new CircuitLst(List.of(circuit))));
        CircuitDetailResponse response = new CircuitDetailResponse();
        response.setCircuitData(circuitData);

        String json = "{\"circuitData\": {\"circuitLst\": [{\"circuit\": [{\"clr\": [{\"circuitComp\": [{\"circuitInfo\": [{\"zEnd\": [{\"portChannel\": [{\"portRef\": [{\"clliCode\": \"12345\"}]}]}]}]}]}]}]}]}}";
        Gson gson = new Gson();
        CircuitDetailResponse circuitDetailResponse = gson.fromJson(json, CircuitDetailResponse.class);

        // When
        ZEnd returnedZEnd = circuitDetailsProvider.getZEnd(CIRCUIT_ID, CLLI, circuitDetailResponse);

        // Then