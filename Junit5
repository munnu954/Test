import org.junit.jupiter.api.Test;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import java.util.HashMap;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class AlarmOperationsAPITest {

    @Test
    public void testGetAlarmedObjectListWithTopologyTraversal() {
        // Setup
        AlarmOperationsAPI alarmOperationsAPI = new AlarmOperationsAPI();
        List<String> alarmedObjectList = List.of("object1", "object2");
        String componentId = "comp1";
        String topologyTraversal = "traversal1";
        HashMap<String, Object> alarmTagValueMap = new HashMap<>();

        // Create a mocked ResponseEntity with HttpStatus.CREATED status
        ResponseEntity responseEntity = mock(ResponseEntity.class);
        when(responseEntity.getStatusCode()).thenReturn(HttpStatus.CREATED);

        // Test when response status code is CREATED
        assertTrue(alarmOperationsAPI.getAlarmedObjectListWithTopologyTraversal(alarmedObjectList, componentId, topologyTraversal, alarmTagValueMap, responseEntity));

        // Update status code to HttpStatus.NOT_FOUND
        when(responseEntity.getStatusCode()).thenReturn(HttpStatus.NOT_FOUND);

        // Test when response status code is NOT_FOUND
        assertTrue(alarmOperationsAPI.getAlarmedObjectListWithTopologyTraversal(alarmedObjectList, componentId, topologyTraversal, alarmTagValueMap, responseEntity));
    }
}