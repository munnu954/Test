catch (HttpStatusCodeException ex) {
    ex.printStackTrace();
    LOGGER.error("Error triggering job", ex.getMessage());

    if (ex instanceof HttpClientErrorException) {
        int statusCode = ex.getRawStatusCode();
        if (statusCode == 404 && ex.getResponseBodyAsString().contains("Non existent jar id")) {
            // Handle the non-existent jar id scenario
            int httpStatusCode = 400; // Not OK
            // Specific actions and logging for this scenario
        }
    } else if (ex instanceof HttpServerErrorException) {
        int statusCode = ex.getRawStatusCode();
        if (statusCode == 500) {
            // Handle 500 Internal Server Error scenario
            // Specific actions and logging for this scenario
        }
    }

    FileMetadata metadata = kafkaConsumer.logMetadata(collector, fileType, ex);

    kafkaInputProducer.sendFailureMessage(collector, fileType, ex);
    kafkaConsumer.writeLogToFile(metadata, destinationFolderPath);
}