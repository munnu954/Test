@Component
public class KafkaTopicUtil {

    @Value("${spring.kafka.consumer.bootstrap-servers}")
    public String bootstrapServers;

    @Value("${spring.kafka.producer.topic-name}")
    public String topicName;

    @Value("${file.csvsource}")
    private String filePath;

    public boolean isKafkaTopicPresent(String topicName) throws ExecutionException, InterruptedException {
        Properties properties = new Properties();
        properties.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);

        boolean isTopicPresent = false;

        try (AdminClient adminClient = AdminClient.create(properties)) {
            ListTopicsOptions listTopicsOptions = new ListTopicsOptions().listInternal(true);

            ListTopicsResult listTopicsResult = adminClient.listTopics(listTopicsOptions);

            Set<String> topicListings = new HashSet<>();
            Set<String> topicNames = listTopicsResult.names().get();
            if (topicNames != null) {
                topicListings.addAll(topicNames);
                isTopicPresent = topicListings.contains(topicName);
            }
        } catch (Exception e) {
            // Handle exception here
        }
        return isTopicPresent;
    }
}
