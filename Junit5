@RunWith(MockitoJUnitRunner.class)
public class CBRSSuppressionApplicationTest {

    @Mock
    private ConfigurableApplicationContext mockContext;

    @Mock
    private AlarmConsumer mockConsumer;

    @Mock
    private MessageReaderService mockReaderService;

    @Test
    public void testMainSuccess() {
        // Arrange
        CBRSSuppressionApplication application = Mockito.spy(new CBRSSuppressionApplication(mock(Environment.class));
        Mockito.when(application.run(Mockito.any())).thenReturn(mockContext);
        Mockito.when(mockContext.getBean(AlarmConsumer.class)).thenReturn(mockConsumer);
        Mockito.when(mockContext.getBean(MessageReaderService.class)).thenReturn(mockReaderService);

        // Act
        application.main(new String[]{});

        // Assert
        Mockito.verify(mockConsumer).setName("Suppression_ConsumerThread");
        Mockito.verify(mockConsumer).start();
        Mockito.verify(mockReaderService).setName("Suppression_ReaderThread");
        Mockito.verify(mockReaderService).start();
    }

    @Test
    public void testMainException() {
        // Arrange
        CBRSSuppressionApplication application = Mockito.spy(new CBRSSuppressionApplication(mock(Environment.class));
        Mockito.when(application.run(Mockito.any())).thenThrow(new UnsatisfiedDependencyException("Validation failed for query"));
        
        // Act
        application.main(new String[]{});

        // Assert
        Mockito.verify(CBRSSuppressionApplication.logger).error(Mockito.anyString());
    }
}