To resolve the errors in the above test code, you need to:
1. Replace `assertTrue` with `Assertions.assertTrue` and replace `assertThrows` with `Assertions.assertThrows`.
2. Import the following static classes from the `org.junit.jupiter.api.Assertions` package at the beginning of the test class: `Assertions.assertTrue`, `Assertions.assertThrows`, `Assertions.assertEquals`, and `Assertions.assertNotNull`.

Here's the updated and reformatted JUnit 5 test case:

```java
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.mock;

import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.RestTemplate;

public class FlinkApiControllerTests {

    @Test
    void testInvalidInput() {
        RestTemplate restTemplate = mock(RestTemplate.class);
        FlinkApiController flinkApi = new FlinkApiController();
        flinkApi.setRestTemplate(restTemplate);
        SpaceCollector message = new SpaceCollector();
        message.setId(0);
        message.setUrl("invalid-url");
        message.setPort(10000);
        message.setInputFilePath("/path/to/input/file");
        message.setOutputFilePath("/path/to/output/file");
        message.setDelimiters(",");
        message.setFileType("csv");
        
        Mockito.when(restTemplate.postForEntity(Mockito.anyString(), Mockito.any(), Mockito.any()))
               .thenThrow(new HttpClientErrorException(org.springframework.http.HttpStatus.BAD_REQUEST, "Invalid input"));
        
        RuntimeException exception = assertThrows(RuntimeException.class, () -> {
            flinkApi.submitJob(message);
        });
        assertTrue(exception.getMessage().contains("Invalid input"));
    }
}
```

Additionally, I have included the mock definition for the `RestTemplate.postForEntity` method to throw an exception with the message "Invalid input" when it is called. Make sure to include the necessary imports as per your requirement.