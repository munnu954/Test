@Test
void testEvaluateExpressionWithException() {
    // Arrange
    AlarmPostingUtils alarmPostingUtils = new AlarmPostingUtils(env);
    String expression = "%attribute1:details.unknown%";
    Map<String, Object> topoMap = new HashMap<>();
    topoMap.put("details", new HashMap<>());

    // Act
    String result = alarmPostingUtils.evaluateExpression(expression, topoMap);

    // Assert
    assertEquals("", result);
    // Verify that the error message is logged
    assertThat(alarmPostingUtils.LOG.getMessage()).contains("Exception occurred while Parsing Expression:");
}

@Test
void testEvaluateExpressionWithNullExpression() {
    // Arrange
    AlarmPostingUtils alarmPostingUtils = new AlarmPostingUtils(env);
    String expression = null;
    Map<String, Object> topoMap = new HashMap<>();

    // Act
    String result = alarmPostingUtils.evaluateExpression(expression, topoMap);

    // Assert
    assertEquals("", result);
    // Verify that the error message is logged
    assertThat(alarmPostingUtils.LOG.getMessage()).contains("Exception occurred while Parsing Expression:");
}

@Test
void testEvaluateExpressionWithEmptyExpression() {
    // Arrange
    AlarmPostingUtils alarmPostingUtils = new AlarmPostingUtils(env);
    String expression = "";
    Map<String, Object> topoMap = new HashMap<>();

    // Act
    String result = alarmPostingUtils.evaluateExpression(expression, topoMap);

    // Assert
    assertEquals("", result);
    // Verify that the error message is logged
    assertThat(alarmPostingUtils.LOG.getMessage()).contains("Exception occurred while Parsing Expression:");
}