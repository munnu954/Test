To cover the mentioned else if block of the createAlarm method in AlarmRepositoryImpl class using JUnit5, you can create a test class as follows:

```java
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import com.fasterxml.jackson.databind.JsonNode;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

public class AlarmRepositoryImplTest {

    private AlarmRepositoryImpl alarmRepository;
    private PostGreDataBaseConfig postgresConf;

    @BeforeEach
    public void setup() {
        alarmRepository = new AlarmRepositoryImpl();
        postgresConf = Mockito.mock(PostGreDataBaseConfig.class);

        // Mocking relevant methods from PostGreDataBaseConfig
        when(postgresConf.getPerceivedSeverityMap()).thenReturn(new HashMap<>());
        when(postgresConf.getAlarmStateMap()).thenReturn(new HashMap<>());
        when(postgresConf.getAlarmTypeMap()).thenReturn(new HashMap<>());
        when(postgresConf.getAlarmTypeOther()).thenReturn("Other");
        when(postgresConf.getAlarmStateNew()).thenReturn("New");
        when(postgresConf.getPerceivedSeverityIndeterminate()).thenReturn("Indeterminate");
    }

    @Test
    void testCreateAlarmPerceivedSeverityNull() throws Exception {
        String msg = "{ \"externalAlarmId\": \"123\", \"sourceSystemId\": \"567\", \"alarmType\": \"456\", "
                   + "\"clearTime\": \"2022-01-01\", \"svcAffecting\": \"true\", \"State\": \"Active\", "
                   + "\"probableCause\": \"Cause\", \"alarmRaisedTime\": \"2022-01-01\", "
                   + "\"alarmReportingTime\": \"2022-01-01\", \"alarmUpdatedTime\": \"2022-01-01\", "
                   + "\"alarmDetails\": \"Details\", \"alarmIdentity\": \"Identity\", \"alarmedObject\": \"Object\", "
                   + "\"alarmedObjectType\": \"Type\", \"TID\": \"T123\", \"reportingObject\": \"Reporting\", "
                   + "\"specificProblem\": \"Problem\", \"AID\": \"A123\", \"componentID\": \"C123\", "
                   + "\"rawMessage\": \"Message\", \"extTopologyDetails\": \"ExtDetails\", \"topologyDetails\": \"Details\", "
                   + "\"Count\": \"1\", \"sequenceID\": \"123\", \"tag\": [\"tag1\"] }";

        Alarm alarm = alarmRepository.createAlarm(msg);

        assertNotNull(alarm);
        assertEquals(-1, alarm.getPerceivedSeverity());
    }

    @Test
    void testCreateAlarmPerceivedSeverityEmpty() throws Exception {
        String msg = "{ \"externalAlarmId\": \"123\", \"sourceSystemId\": \"567\", \"alarmType\": \"456\", "
                   + "\"clearTime\": \"2022-01-01\", \"svcAffecting\": \"true\", \"State\": \"Active\", "
                   + "\"probableCause\": \"Cause\", \"alarmRaisedTime\": \"2022-01-01\", "
                   + "\"alarmReportingTime\": \"2022-01-01\", \"alarmUpdatedTime\": \"2022-01-01\", "
                   + "\"alarmDetails\": \"Details\", \"alarmIdentity\": \"Identity\", \"alarmedObject\": \"Object\", "
                   + "\"alarmedObjectType\": \"Type\", \"TID\": \"T123\", \"reportingObject\": \"Reporting\", "
                   + "\"specificProblem\": \"Problem\", \"AID\": \"A123\", \"componentID\": \"C123\", "
                   + "\"rawMessage\": \"Message\", \"extTopologyDetails\": \"ExtDetails\", \"topologyDetails\": \"Details\", "
                   + "\"Count\": \"1\", \"sequenceID\": \"123\", \"tag\": [\"tag1\"], \"perceivedSeverity\": \"\" }";

        Alarm alarm = alarmRepository.createAlarm(msg);

        assertNotNull(alarm);
        assertEquals(-1, alarm.getPerceivedSeverity());
    }
}
```

In the above test class, we have covered two scenarios where the perceivedSeverity is either null or empty in the input message. These tests will simulate the behavior defined in the else if block of the createAlarm method and ensure that the code path is covered for 100% code coverage.