It seems like the issue you are facing is related to the `VMBConfig` object being null when calling the `getTopic()` method. One possible reason could be that the `VMBParams` object is not properly initialized with a valid `VMBConfig`.

To fix this error, make sure that the `VMBParams` class is correctly set up with a proper `VMBConfig` object during initialization. You can do this by creating a mock `VMBConfig` object and setting it in the `VMBParams` instance within your test setup method.

Here is the updated and revised JUnit 5 test cases code with the necessary modifications:

```java
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.actuate.health.Health;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.when;

public class AlarmReceiverTest {
    
    @InjectMocks
    private AlarmReceiver alarmReceiver;

    @Mock
    private VMBParams params;

    @Mock
    private VMBConfig vmbConfig; // Add mock for VMBConfig

    @Mock
    private AlarmPostGreService alarmPostGreService;

    @Mock
    private PostingService alarmPointLookupService;

    @BeforeEach
    void setup() {
        params = new VMBParams();
        params.setVmbConfig(vmbConfig); // Set the mock VMBConfig in VMBParams
        when(vmbConfig.getTopic()).thenReturn("testTopic"); // Mock behavior for getTopic() method
    }

    @Test
    void testGetConnection() {
        alarmReceiver = new AlarmReceiver(params, alarmPostGreService, alarmPointLookupService);
        assertNotNull(alarmReceiver);

        // Test getConnection method as before
    }

    @Test
    void testRun() {
        alarmReceiver = new AlarmReceiver(params, alarmPostGreService, alarmPointLookupService);
        assertNotNull(alarmReceiver);

        // Test receiveMessages method as before
    }

    @Test
    void testHealth() {
        alarmReceiver = new AlarmReceiver(params, alarmPostGreService, alarmPointLookupService);
        assertNotNull(alarmReceiver);

        Health health = alarmReceiver.health();

        assertEquals(Health.up().build().getStatus(), health.getStatus());
    }
}
```

In this updated code, we have added a mock `VMBConfig` object in the test class and set it in the `VMBParams` instance during the setup method. Additionally, we have defined the behavior of the `getTopic()` method in the mock object to return a test topic name.

Please try running the test cases with these modifications, and it should help resolve the NullPointerException related to `VMBConfig`. Let me know if you need further assistance!