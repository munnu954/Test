import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

@ExtendWith(MockitoExtension.class)
public class MessageReaderServiceTest {

    @Mock
    VMBParams params;
    @Mock
    ApolloServiceHealth healthChecker;
    @Mock
    RuleLoadingService rulesLoadingService;

    @Test
    public void testInitializeMessageReaderService() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        MessageReaderService messageReaderService = new MessageReaderService();
        Method method = MessageReaderService.class.getDeclaredMethod("initializeMessageReaderService");
        method.setAccessible(true);

        method.invoke(messageReaderService);

        assertNotNull(messageReaderService.getRuleUpdateNotifierVmbConfig());
        assertNotNull(messageReaderService.getReader());
    }

    @Test
    public void testRun() {
        MessageReaderService messageReaderService = new MessageReaderService();
        assertFalse(messageReaderService.isRun());
        messageReaderService.run();
    }

    @Test
    public void testProcessMessageFromRuleNotifierVMB() {
        MessageReaderService messageReaderService = new MessageReaderService();
        messageReaderService.setRun(true);
        messageReaderService.setRuleUpdateNotifierVmbConfig(new VMBConfig());
        messageReaderService.setReader(mock(Reader.class));

        messageReaderService.processMessageFromRuleNotifierVMB();

        assertTrue(messageReaderService.getFailureRuleUpdateVMBConnectionCount() >= 0);
    }

    @Test
    public void testRetryReaderConnection() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        MessageReaderService messageReaderService = new MessageReaderService();
        messageReaderService.setFailureRuleUpdateVMBConnectionCount(3);
        messageReaderService.setParams(params);

        Method method = MessageReaderService.class.getDeclaredMethod("retryReaderConnection");
        method.setAccessible(true);
        method.invoke(messageReaderService);

        assertNotNull(messageReaderService.getReader());
    }

    @Test
    public void testCloseReader() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        MessageReaderService messageReaderService = new MessageReaderService();
        messageReaderService.setReader(mock(Reader.class));

        Method method = MessageReaderService.class.getDeclaredMethod("closeReader");
        method.setAccessible(true);
        method.invoke(messageReaderService);

        assertNull(messageReaderService.getReader());
    }
}

In this test class, we have covered the test cases for initializing the MessageReaderService, running the service, processing messages, retrying reader connection, and closing the reader. We have used reflection to test private methods.