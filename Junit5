@Test
public void testQueryBasedOnParameterWithLocationCLLI() throws Exception {
    CoconutServiceVersion3 coconutServiceVersion3 = new CoconutServiceVersion3();
    Method method = CoconutServiceVersion3.class.getDeclaredMethod("queryBasedOnParameter", Map.class);
    method.setAccessible(true);

    Map<String, Object> queryParams = new HashMap<>();
    queryParams.put("locationCLLI", "testCLLI");

    String result = (String) method.invoke(coconutServiceVersion3, queryParams);

    assertTrue(result.contains("site.clli_code") && result.contains("testCLLI"));
}

@Test
public void testQueryBasedOnParameterWithSiteName() throws Exception {
    CoconutServiceVersion3 coconutServiceVersion3 = new CoconutServiceVersion3();
    Method method = CoconutServiceVersion3.class.getDeclaredMethod("queryBasedOnParameter", Map.class);
    method.setAccessible(true);

    Map<String, Object> queryParams = new HashMap<>();
    queryParams.put("siteName", "testSiteName");

    String result = (String) method.invoke(coconutServiceVersion3, queryParams);

    assertTrue(result.contains("site.site_name") && result.contains("testSiteName"));
}

@Test
public void testQueryBasedOnParameterWithLocationCLLIAndSiteName() throws Exception {
    CoconutServiceVersion3 coconutServiceVersion3 = new CoconutServiceVersion3();
    Method method = CoconutServiceVersion3.class.getDeclaredMethod("queryBasedOnParameter", Map.class);
    method.setAccessible(true);

    Map<String, Object> queryParams = new HashMap<>();
    queryParams.put("locationCLLI", "testCLLI");
    queryParams.put("siteName", "testSiteName");

    String result = (String) method.invoke(coconutServiceVersion3, queryParams);

    assertTrue(result.contains("site.clli_code") && result.contains("testCLLI") &&
               result.contains("site.site_name") && result.contains("testSiteName"));
}

@Test
public void testQueryBasedOnParameterWithoutLocationCLLIAndSiteName() throws Exception {
    CoconutServiceVersion3 coconutServiceVersion3 = new CoconutServiceVersion3();
    Method method = CoconutServiceVersion3.class.getDeclaredMethod("queryBasedOnParameter", Map.class);
    method.setAccessible(true);

    Map<String, Object> queryParams = new HashMap<>();

    String result = (String) method.invoke(coconutServiceVersion3, queryParams);

    assertTrue(result.contains("site.clli_code") && !result.contains("testCLLI") &&
               result.contains("site.site_name") && !result.contains("testSiteName"));
}