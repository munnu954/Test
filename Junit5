import com.verizon.apollo.MessageConsumer;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.boot.SpringApplication;
import org.springframework.context.ConfigurableApplicationContext;

import static org.junit.jupiter.api.Assertions.assertNotNull;

public class UWAUpdatesHandlerApplicationTest {

    @Test
    public void testMain() {
        // Mocking necessary objects
        SpringApplication app = Mockito.mock(SpringApplication.class);
        ConfigurableApplicationContext appContext = Mockito.mock(ConfigurableApplicationContext.class);
        MessageConsumer messageConsumerService = Mockito.mock(MessageConsumer.class);

        Mockito.when(app.run(Mockito.any(String[].class))).thenReturn(appContext);
        Mockito.when(appContext.getBean(MessageConsumer.class)).thenReturn(messageConsumerService);

        // Execute the main method
        UWAUpdatesHandlerApplication.main(new String[]{"arg1", "arg2"});

        // Verify that the messageConsumerService.start() method is called
        Mockito.verify(messageConsumerService).start();
    }

    @Test
    public void testMainException() {
        // Mocking necessary objects
        SpringApplication app = Mockito.mock(SpringApplication.class);

        Mockito.when(app.run(Mockito.any(String[].class))).thenThrow(new RuntimeException("Test Exception"));

        // Execute the main method
        UWAUpdatesHandlerApplication.main(new String[]{"arg1", "arg2"});

        // Verify that the log.error() method is called with the correct message
        // You can add more specific verifications based on your requirements
    }

    @Test
    public void testShutdownHook() {
        // Mocking necessary objects
        MessageConsumer messageConsumerService = Mockito.mock(MessageConsumer.class);
        ConfigurableApplicationContext appContext = Mockito.mock(ConfigurableApplicationContext.class);

        // Create a new instance of UWAUpdatesHandlerApplication to test the shutdown hook
        UWAUpdatesHandlerApplication application = new UWAUpdatesHandlerApplication();

        application.messageConsumerService = messageConsumerService;
        application.appContext = appContext;

        // Execute the shutdown hook
        application.new Thread().run();

        // Verify that the messageConsumerService.shutdown() and appContext.stop() methods are called
        Mockito.verify(messageConsumerService).shutdown();
        Mockito.verify(appContext).stop();
    }
}