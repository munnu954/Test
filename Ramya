import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;
import org.json.JSONArray;
import org.json.JSONObject;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    private JSONObject jsonObject;
    private JSONArray jsonArray;
    private String currentObjectName;

    @Override
    public void flatMap(String input, Collector<String> collector) {
        String[] arr = input.split(",");
        String firstCell = arr[0].trim();

        if (firstCell.equals("Begin Date")) {
            // New object starts, save the current one and start a new one
            if (jsonObject != null) {
                jsonArray.put(jsonObject);
            }
            currentObjectName = arr[1].trim();
            jsonObject = new JSONObject();
            jsonObject.put("ObjectName", currentObjectName);
        } else if (firstCell.equals("Min")) {
            // Process Min, Average, Max, Cumulative counter value row
            for (int i = 1; i < arr.length; i += 4) {
                JSONObject subObject = new JSONObject();
                subObject.put("Min", arr[i].trim());
                subObject.put("Average", arr[i + 1].trim());
                subObject.put("Max", arr[i + 2].trim());
                subObject.put("Cumulative counter value", arr[i + 3].trim());

                String key = arr[i - 1].trim().toLowerCase().replace(" ", "_");
                jsonObject.put(key, subObject);
            }
        } else {
            // Process other rows
            for (int i = 1; i < arr.length; i++) {
                String key = arr[i - 1].trim().toLowerCase().replace(" ", "_");
                String value = arr[i].trim();
                jsonObject.put(key, value);
            }
        }
    }

    @Override
    public void close() {
        // Collect the last object
        if (jsonObject != null) {
            jsonArray.put(jsonObject);
        }
        collector.collect(jsonArray.toString());
    }
}
