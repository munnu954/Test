```java
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

@ExtendWith(MockitoExtension.class)
class MessageReaderServiceTest {

    @Mock
    private VMBParams vmbParams;

    @Mock
    private ApolloServiceHealth healthChecker;

    @Mock
    private RuleLoadingService rulesLoadingService;

    @Mock
    private Reader<byte[]> reader;

    @Test
    void testInitializeMessageReaderServiceWithNonNullReader() throws Exception {
        MessageReaderService messageReaderService = new MessageReaderService();
        messageReaderService.params = vmbParams;
        messageReaderService.healthChecker = healthChecker;
        messageReaderService.rulesLoadingService = rulesLoadingService;

        when(vmbParams.getReaderVMBConfig()).thenReturn(new VMBConfig());
        when(VMBUtil.createReaderConnection(any(VMBConfig.class), eq(MessageId.latest))).thenReturn(reader);

        messageReaderService.intialializeMessageReaderService();

        assertNotNull(messageReaderService.reader);
    }

    @Test
    void testInitializeMessageReaderServiceWithNullReader() {
        MessageReaderService messageReaderService = new MessageReaderService();
        messageReaderService.params = vmbParams;
        messageReaderService.healthChecker = healthChecker;

        when(vmbParams.getReaderVMBConfig()).thenReturn(new VMBConfig());
        when(VMBUtil.createReaderConnection(any(VMBConfig.class), eq(MessageId.latest))).thenReturn(null);

        assertThrows(IllegalStateException.class, () -> {
            messageReaderService.intialializeMessageReaderService();
        });
    }
}
```

In the above test class, we are using Mockito to mock the dependencies and set up the test scenarios for testing the `intialializeMessageReaderService` method of the `MessageReaderService` class. The first test covers the scenario when the reader is successfully created, and the second test covers the scenario when the reader is null. This way, we achieve 100% code coverage for the `intialializeMessageReaderService` method.