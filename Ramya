import org.springframework.stereotype.Repository;

@Repository
public class CollectionAuditLuceneRepository extends LuceneRepository<CollectionAudit, String> {

    public CollectionAudit findFirstByHostAndStatusOrderByLastSuccessfulCollectionDesc(String host, String status) {
        String query = "{\"query\": {\"bool\": {\"must\": [{\"term\": {\"host.keyword\": \"" + host + "\"}}, {\"term\": {\"status.keyword\": \"" + status + "\"}}]}}}";

        List<CollectionAudit> audits = findByQuery(query);

        if (!audits.isEmpty()) {
            // Sort the audits by lastSuccessfulCollection in descending order
            audits.sort(Comparator.comparing(audit -> audit.getLastSuccessfulCollection()).reversed());
            // Return the first audit in the sorted list
            return audits.get(0);
        } else {
            // No matching audits found
            return null;
        }
    }
}
