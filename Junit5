Here are the JUnit5 test cases for the `createConsumerConnection(String, String)` method of the `KafkaMessageConsumer` class:

```java
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.apache.kafka.clients.consumer.Consumer;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.apache.kafka.common.KafkaException;
import org.apache.kafka.common.errors.RebalanceInProgressException;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;

import java.util.Properties;

public class KafkaMessageConsumerTest {

    private KafkaMessageConsumer kafkaMessageConsumer;

    @BeforeEach
    void setUp() {
        kafkaMessageConsumer = new KafkaMessageConsumer();
    }

    @Test
    void testCreateConsumerConnection_Success() {
        KafkaConsumer<String, String> consumer = mock(KafkaConsumer.class);
        Properties properties = new Properties();
        properties.setProperty("bootstrap.servers", "localhost:9092");

        KafkaConsumer<String, String> result = kafkaMessageConsumer.createConsumerConnection("testTopic", "testGroupId");

        assertNotNull(result);
        assertEquals(properties, result);
    }

    @ParameterizedTest
    @ValueSource(strings = {"", "testGroupId"})
    void testCreateConsumerConnection_Failure(String groupId) {
        KafkaConsumer<String, String> consumer = mock(KafkaConsumer.class);
        Properties properties = new Properties();
        properties.setProperty("bootstrap.servers", "localhost:9092");

        KafkaConsumer<String, String> result = kafkaMessageConsumer.createConsumerConnection("testTopic", groupId);

        assertNull(result);
    }

    @Test
    void testCreateConsumerConnection_Exception() {
        KafkaConsumer<String, String> consumer = mock(KafkaConsumer.class);
        Properties properties = new Properties();
        properties.setProperty("bootstrap.servers", "localhost:9092");

        assertThrows(KafkaException.class, () -> {
            KafkaConsumer<String, String> result = kafkaMessageConsumer.createConsumerConnection("testTopic", "testGroupId");
        });
   }

}
```

These test cases cover different scenarios for the `createConsumerConnection(String, String)` method to achieve 100% code coverage. Make sure to adjust the test cases based on your actual implementation and additional logic.