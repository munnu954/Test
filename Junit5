The error indicates that the `ObjectMapper` instance being used in the `when()` method is not recognized as a mock. This usually happens if the instance isn't the same one that was mocked. We need to ensure that the `ObjectMapper` used in the `MtnInsightsManager` is indeed the mock instance. You can achieve this by properly setting up the mock and injecting it into the `MtnInsightsManager`.

Here's how you can modify the test code to resolve this issue:

```java
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.doThrow;

@ExtendWith(MockitoExtension.class)
public class MtnInsightsManagerTest {

    @Mock
    private MtnInsightsRepository insightsRepository;

    @Mock
    private AggregateInsightsRepository aggrInsightRepository;

    @Mock
    private EcpdByKeyRepository ecpdByKeyRepository;

    @Mock
    private MtnInsightsValidator validator;

    @Mock
    private ObjectMapper objectMapper;

    @InjectMocks
    private MtnInsightsManager mtnInsightsManager;

    @BeforeEach
    public void setup() {
        // Inject the mock ObjectMapper into the MtnInsightsManager
        mtnInsightsManager.obj = objectMapper;
    }

    @Test
    public void testConvertAttributesArray_JsonProcessingException() throws JsonProcessingException {
        // Arrange
        MtnInsightsAttributes attr = new MtnInsightsAttributes(); // Assuming this is a valid object
        MtnInsightsAttributes[] attrsArray = {attr};

        // Mock the ObjectMapper to throw JsonProcessingException
        doThrow(new JsonProcessingException("Mocked Exception") {}).when(objectMapper).writeValueAsString(Mockito.any());

        // Act & Assert
        assertThrows(SystemException.class, () -> {
            mtnInsightsManager.convert(attrsArray);
        });
    }

    @Test
    public void testConvertEcpd_JsonProcessingException() throws JsonProcessingException {
        // Arrange
        MtnInsightsAttributes attr = new MtnInsightsAttributes(); // Assuming this is a valid object

        // Mock the ObjectMapper to throw JsonProcessingException
        doThrow(new JsonProcessingException("Mocked Exception") {}).when(objectMapper).writeValueAsString(Mockito.any());

        // Act & Assert
        assertThrows(SystemException.class, () -> {
            mtnInsightsManager.convertEcpd(attr);
        });
    }
}
```

### Key Changes:

1. **Setup Method:**
   - In the `setup()` method, ensure that the `objectMapper` mock is explicitly assigned to `mtnInsightsManager.obj`. This ensures the `ObjectMapper` used within `MtnInsightsManager` is the same mock instance.

2. **Mock Configuration:**
   - We use `doThrow()` directly on `objectMapper` to simulate the `JsonProcessingException`.

These changes ensure that the mock setup is correctly recognized, and the tests should run without the `NotAMockException` error.