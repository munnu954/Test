import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import static org.junit.Assert.assertEquals;

@Given("a csv file with MRFC data")
public void acsvFileWithMRFCData() throws IOException {
    this.MRFCFile = MRFCResource.getFile();
}

@When("CsvtoJsonMRFCnTransformer is invoked on the csv file")
public void csvtojsonmrfentransformerIsInvokedOnTheCsvFile() throws Exception {
    StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();
    final DataStream<String> stream = env.fromElements(Main.readCSVFile(this.MRFCFile.toPath().toString()));
    this.MRFCJsonStream = stream.flatMap(new CsvtoJsonConversion.CsvtoJsonMRFCnTransformer(fileName));
}

@And("the MRFC csv file content is converted to json")
public void theMRFCCsvFileContentIsConvertedToJson() throws Exception {
    Iterator<String> iterator = this.MRFCJsonStream.executeAndCollect();
    this.jsonFirstRow = iterator.next();
}

@Then("validate the converted MRFC json content")
public void validateTheConvertedMRFCJsonContent() throws JSONException {
    JSONObject firstJson = new JSONObject(jsonFirstRow);

    // Validate the converted MRFC JSON content
    assertEquals("2024-01-10 17:05:00", firstJson.getString("STARTTIMESTAMP"));
    assertEquals("2024-01-10 17:10:00", firstJson.getString("STOPTIMESTAMP"));
    assertEquals(7, firstJson.getInt("GATEWAYNUM"));
    assertEquals(0, firstJson.getInt("SERVERID"));
    assertEquals(7, firstJson.getInt("RGN"));
    assertEquals(10, firstJson.getInt("NBROFSVRAUDIT"));
    assertEquals(0, firstJson.getInt("NBROFSVRAUDITFAIL"));
    assertEquals(10, firstJson.getInt("NBROFDNSQUERY"));
    assertEquals(0, firstJson.getInt("NBROFONSQUERYFAIL"));
    assertEquals(0, firstJson.getInt("NBROFENUMQUERY"));
    assertEquals(0, firstJson.getInt("NBROFENUMQUERYFAIL"));
    assertEquals(0, firstJson.getInt("NBROFDNSARECORDQUERY"));
    assertEquals(0, firstJson.getInt("NBROFDNSARECORDQUERYFAIL"));
    assertEquals(0, firstJson.getInt("NBROFDNSAAAARECORDQUERY"));
    assertEquals(0, firstJson.getInt("NBROFDNSAAAAARECORDQUERYFAIL"));
    assertEquals(0, firstJson.getInt("NBROFDNSSRVRECORDQUERY"));
    assertEquals(0, firstJson.getInt("NBROFDNSSRVRECORDQUERYFAIL"));
    assertEquals(0, firstJson.getInt("NBROFDNSSOARECORDQUERY"));
    assertEquals(0, firstJson.getInt("NBROFDNSSOARECORDQUERYFAIL"));
}