import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertFalse;

public class SpaceCollectorTest {

    @Test
    public void testSuccessfulMessageSending() {
        SpaceCollector spaceCollector = new SpaceCollector("123", "https://example.com/api", "API", "username", "password");
        String result = spaceCollector.pushToKafkaTopic();
        assertEquals("SpaceCollector data pushed to Kafka topic successfully", result);
    }

    @Test
    public void testErrorMessageSending() {
        SpaceCollector spaceCollector = new SpaceCollector(null, "", "API", "username", "password");
        String result = spaceCollector.pushToKafkaTopic();
        assertTrue(result.contains("Error message sent to Kafka topic"));
    }

    @Test
    public void testInitializingApiReader() {
        SpaceCollector spaceCollector = new SpaceCollector("123", "https://example.com/api", "API", "username", "password");
        String result = spaceCollector.initializeApiReader();
        assertTrue(result.contains("Initialized Api Reader"));
        assertTrue(result.contains("SpaceCollector[id=123, url=https://example.com/api, connectionType=API, username=username, password=password]"));
    }

    @Test
    public void testMissingIdInSpaceCollector() {
        SpaceCollector spaceCollector = new SpaceCollector(null, "https://example.com/api", "API", "username", "password");
        String result = spaceCollector.validateSpaceCollector();
        assertTrue(result.contains("SpaceCollector json must have an id"));
    }

    @Test
    public void testMissingUrlInSpaceCollector() {
        SpaceCollector spaceCollector = new SpaceCollector("123", "", "API", "username", "password");
        String result = spaceCollector.validateSpaceCollector();
        assertTrue(result.contains("SpaceCollector json must have a non-empty url"));
    }

    @Test
    public void testInvalidConnectionTypeInSpaceCollector() {
        SpaceCollector spaceCollector = new SpaceCollector("123", "https://example.com/api", "InvalidType", "username", "password");
        String result = spaceCollector.validateSpaceCollector();
        assertTrue(result.contains("SpaceCollector json must have a connection_type of 'API'"));
    }

    @Test
    public void testMissingUsernameOrPasswordInSpaceCollector() {
        SpaceCollector spaceCollector = new SpaceCollector("123", "https://example.com/api", "API", null, "password");
        String result = spaceCollector.validateSpaceCollector();
        assertTrue(result.contains("SpaceCollector json must have a non-null username and password"));
    }
}