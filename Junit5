```java
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.test.util.ReflectionTestUtils;

import javax.sql.DataSource;
import java.util.HashMap;
import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
class DataSourceConfigTest {

    @InjectMocks
    private DataSourceConfig dataSourceConfig;

    @Mock
    private DataSourceModal dataSourceModal;

    @Mock
    private EntityManagerFactoryBuilder builder;

    @Mock
    private DataSource dataSource;

    @BeforeEach
    void setUp() {
        ReflectionTestUtils.setField(dataSourceConfig, "dataSourceModal", dataSourceModal);
    }

    @Test
    void shouldReturnEntityManagerFactoryBean() {
        // given
        Map<String, Object> properties = new HashMap<>();
        when(builder.dataSource(any(DataSource.class))).thenReturn(builder);
        when(builder.packages("com.verizon.vbg.ledger.entity")).thenReturn(builder);
        when(builder.persistenceUnit("fallout-db")).thenReturn(builder);
        when(builder.properties(properties)).thenReturn(builder);
        when(builder.build()).thenReturn(new LocalContainerEntityManagerFactoryBean());

        // when
        LocalContainerEntityManagerFactoryBean result = dataSourceConfig.entityManagerFactoryBean(builder, dataSource);

        // then
        assertThat(result).isNotNull();
    }

}
```