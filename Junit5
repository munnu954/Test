@Test
void parseWithMissingAttribute() throws Exception {
    // Arrange
    String expression = "%attribute1.unknown:%";
    Map<String, Object> srcMap = new HashMap<>();
    srcMap.put("attribute1", new HashMap<>());

    // Act
    String result = alarmPostingUtils.parse(expression, srcMap, "");

    // Assert
    assertEquals("", result);
}

@Test
void parseWithNullAttribute() throws Exception {
    // Arrange
    String expression = "%attribute1.unknown:%";
    Map<String, Object> srcMap = new HashMap<>();
    srcMap.put("attribute1", null);

    // Act
    String result = alarmPostingUtils.parse(expression, srcMap, "");

    // Assert
    assertEquals("", result);
}

@Test
void parseWithInvalidArrayIndex() throws Exception {
    // Arrange
    String expression = "%attribute1: names [-1]%";
    Map<String, Object> srcMap = new HashMap<>();
    srcMap.put("names", Arrays.asList("John", "Jane"));

    // Act
    String result = alarmPostingUtils.parse(expression, srcMap, "");

    // Assert
    assertEquals("", result);
}

@Test
void parseWithArrayIndexOutOfBounds() throws Exception {
    // Arrange
    String expression = "%attribute1: names [2]%";
    Map<String, Object> srcMap = new HashMap<>();
    srcMap.put("names", Arrays.asList("John", "Jane"));

    // Act
    String result = alarmPostingUtils.parse(expression, srcMap, "");

    // Assert
    assertEquals("", result);
}

@Test
void parseWithNullArrayElement() throws Exception {
    // Arrange
    String expression = "%attribute1: names [1]%";
    Map<String, Object> srcMap = new HashMap<>();
    srcMap.put("names", Arrays.asList("John", null));

    // Act
    String result = alarmPostingUtils.parse(expression, srcMap, "");

    // Assert
    assertEquals("", result);
}