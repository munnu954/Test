Certainly! You can create a utility method in Java to convert the format of `incomingMsg0ld` to `incomingMsgNew`. Here's a generic example using the `org.json` library, which is commonly used for handling JSON in Java:

```java
import org.json.JSONObject;

public class JsonConverter {

    public static String convertOldToNewFormat(String oldMessage) {
        // Parse the outer JSON object
        JSONObject outerObject = new JSONObject(oldMessage);

        // Extract the acknowledgment string
        String acknowledgmentString = outerObject.getString("acknowledgment");

        // Parse the acknowledgment string into a JSON object
        JSONObject acknowledgmentObject = new JSONObject(acknowledgmentString);

        // Replace the string with the JSON object
        outerObject.put("acknowledgment", acknowledgmentObject);

        // Convert the updated object back to a string
        return outerObject.toString();
    }

    public static void main(String[] args) {
        String incomingMsg0ld = "{\"acknowledgment\": \"{\\\"ackDate\\\": \\\"2021-11-02 15:54:55.0\\\", \\\"ackUser\\\": \\\"System\\\"}\"}";

        String convertedMessage = convertOldToNewFormat(incomingMsg0ld);
        System.out.println("Converted Message: " + convertedMessage);
    }
}
```

### Explanation:
- **JSONObject**: This class is used to parse and manipulate JSON data.
- **Parsing**: First, the outer JSON object is parsed. Then, the string value of the "acknowledgment" key is parsed into a JSON object.
- **Replacement**: The acknowledgment string is replaced with the parsed JSON object.
- **Output**: The modified JSON object is converted back to a string format.

This code will convert the `incomingMsg0ld` format into `incomingMsgNew`. Make sure you have the `org.json` library available in your project to use this code.