UserInsightsValidator class:-
@Component
public class UserInsightsValidator extends AbstractInsightsValidator {
public void validate (UserInsightsRequest request) throws InvalidRequestException {
validate(request.getServiceHeader());
String errorMessage = null;
if(!request.getRequestType().equals(InsightsRequestType.INSERTCUSTOMERINSIGHTS)) { errorMessage = "Invalid request type ";
}
if(request.getKeyAttributes() == null && request.getListKeyAttributes() == null){
errorMessage = "Either KeyAttributes (Single) or ListKeyAttributes (Multiple) are required.";
} else if(request.getKeyAttributes() != null){
validateIterator(errorMessage, request.getKeyAttributes(), "KeyAttributes");
} else if(request.getListKeyAttributes() != null)
{ for (int i = 0; i < request.getListKeyAttributes().length; i++) {
validateIterator(errorMessage, request.getListKeyAttributes()[i], "ListKeyAttributes");
}
}
if (errorMessage != null) {
throw new InvalidRequestException(errorMessage);
}
}

void validateIterator(String errorMessage, UserInsightsAttributes userInsightsAttributes, String logVal) throws InvalidRequestException {
JSONObject jsonObject = new JSONObject(userInsightsAttributes);
if(jsonobject.has("userId")&& jsonObject.has("ecpdId")&& jsonObject.has("insightCategory")
&& jsonObject.has("insightName")) {
if(isEmpty(userInsightsAttributes.getUserId()) || isEmpty(userInsightsAttributes.getEcpdId()) || isEmpty(userInsightsAttributes.getInsightCategory()) | |isEmpty(userInsightsAttributes.getInsightName())) {
errorMessage = USER_SEARCH_MAND_FIELDS_CHECK;
} }
else{
errorMessage = logVal+LOGGER_MESSAGE_USER_INSIGHTS;
}
if (errorMessage != null) {
throw new InvalidRequestException(errorMessage);
} }

public void validate(UserInsightsSearchRequest request) throws InvalidRequestException{
validate(request.getServiceHeader());
JSONObject jsonObject = new JSONObject(request.getServiceRequest());
String errorMessage = null;
if(jsonObject.has("userId")
&& jsonObject.has("ecpdId")
&& jsonObject.has("insightCategory")&& jsonObject.has("insightName")) {
if(request.getServiceRequest().getUserId().isEmpty() || request.getServiceRequest().getEcpdId().isEmpty()
||request.getServiceRequest().getInsightCategory()[0].isEmpty()
|| request.getServiceRequest().getInsightName()[0].isEmpty()) {
errorMessage = USER_SEARCH_MAND_FIELDS_CHECK;
}}
else {
errorMessage = "ServiceRequest Ecpd Id, User Id, Insight Category and Insight Name are required.";
}
if (errorMessage != null) {
throw new InvalidRequestException(errorMessage);
}}
}

write Junit5 testcases code covering each and every branch of UserInsightsValidator class for 100% code coverage, where
UserInsightsRequest class:-
@JsonIgnoreProperties(ignoreUnknown= false)
@JsonInclude(Include.NON_NULL)
@Schema(additionalProperties =Schema.AdditionalPropertiesValue.FALSE)
@Data
public class UserInsightsRequest {
private InsightsRequestType requestType= InsightsRequestType.INSERTCUSTOMERINSIGHTS;
private UserInsightsAttributes keyAttributes;
@ArraySchema (maxItems=500)
private UserInsightsAttributes[] listKeyAttributes;
private ServiceHeader serviceHeader;
}

InsightsRequestType class:-
public enum InsightsRequestType {
INSERTCUSTOMERINSIGHTS("SOI_InsertCustomerInsights"), INSERTMTNINSIGHTS("SOI_InsertMtnInsights"), INSERTAGGREGATEINSIGHTS("SOI_InsertAggregateInsights"), INSERTPOSBEINSIGHTS("SOI_InsertCustomerInsights"),

UNKOWN("Unknown"), VBGNxOutage("VBGNxOutage"),
CallInfo("CallInfo");

@JsonValue
private String value;
InsightsRequestType(String value) { this.value = value;
}
}

UserInsightsAttributes class:-
@JsonIgnoreProperties(ignoreUnknown = false)
@JsonInclude(Include.NON_NULL)
@Schema(additionalProperties =Schema.AdditionalPropertiesValue.FALSE)
@Data
public class UserInsightsAttributes extends InsightsAttributes{
@Schema(minLength = 0, maxLength = 20, pattern = EventLedgerConstants.STRING_PATTERN_MAX_20, example = "string", description = "header value",additionalProperties =Schema.AdditionalPropertiesValue.False)
private String userId; 

@Schema(minLength = 0, maxLength = 20, pattern = EventLedgerConstants.STRING_PATTERN_MAX_20, example = "string", description = "header value",additionalProperties =Schema.AdditionalPropertiesValue.False)
private string ecpId;
public UserInsightsAttributes() { super(); }
}


ServiceHeader class:- 
@Data
@JsonIgnoreProperties(ignoreUnknown = false)
@JsonInclude(Include.NON_NULL)
@Schema(additionalProperties =Schema.AdditionalPropertiesValue.False)
public class ServiceHeader {
@Schema(minLength = 0, maxLength = 100, pattern = EventLedgerConstants.STRING_PATTERN_MAX_100, example = "string", description = "header value",additionalProperties =Schema.AdditionalPropertiesValue.False)
private String clientId; 

@Schema(minLength = 0, maxLength = 100, pattern = EventLedgerConstants.STRING_PATTERN_MAX_100, example = "string", description = "header value",additionalProperties =Schema.AdditionalPropertiesValue.False)
private String clientTransactionId; 

@Schema(minLength = 0, maxLength = 100, pattern = EventLedgerConstants.STRING_PATTERN_MAX_100, example = "string", description = "header value",additionalProperties =Schema.AdditionalPropertiesValue.False)
private String serviceName; 
}

UserInsightsSearchRequest class:- 
@Data
@JsonIgnoreProperties(ignoreUnknown = false)
@JsonInclude(Include.NON_NULL)
@Schema(additionalProperties =Schema.AdditionalPropertiesValue.False)
public class UserInsightsSearchRequest {
private ServiceHeader serviceHeader;

private UserInsightsSearchParam serviceRequest;
}

UserInsightsSearchParam class:-
@JsonIgnoreProperties(ignoreUnknown = false)
@JsonInclude(Include.NON_NULL)
@Schema(additionalProperties =Schema.AdditionalPropertiesValue.FALSE)
@Data
public class UserInsightsSearchParam {
@Schema(minLength = 0, maxLength = 20, pattern = EventLedgerConstants.STRING_PATTERN_MAX_20, example = "string", description = "header value",additionalProperties =Schema.AdditionalPropertiesValue.False)
private String userId; 

@Schema(minLength = 0, maxLength = 20, pattern = EventLedgerConstants.STRING_PATTERN_MAX_20, example = "string", description = "header value",additionalProperties =Schema.AdditionalPropertiesValue.False)
private string ecpId;

@ArraySchema (maxItems=50)
private string[] insightCategory;

@ArraySchema (maxItems=50)
private string[] insightName;
}


note: 1) Please make sure to cover all the if, else if and else statements of validate(UserInsightsRequest request), validateIterator(String errorMessage, UserInsightsAttributes userInsightsAttributes, String logVal), validate(UserInsightsSearchRequest request) methods for 100% code coverage of UserInsightsValidator class, make sure that the all the Act and assert validations in the testcases should pass without fail. 2) Please make Sure to avoid these errors:- "java.lang.NoSuchMethodError: 'void org.json.JSONObject.<init>(java.lang.Object)*" and "java.lang.NullPointerException" while writing the Junit5 testcases code