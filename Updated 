Here is the modified code with the additional else condition for job submission failure:

```java
String jobSubmitUrl = null;
if(programArgs != null && !programArgs.isEmpty()){
    headers.setContentType(MediaType.APPLICATION_JSON);
    JSONObject requestBody = new JSONObject();

    if(fileType.equalsIgnoreCase(".csv")){
        requestBody.put("programArgs", programArgs.replace("input", collector.getInputFilePath()));
        jobSubmitUrl = flinkApiUrl + "/jars/" + flinkJobJarid + "/run";
    }
    else if(fileType.equalsIgnoreCase(".xml")){
        LOGGER.info("XML FLINK TRIGGER::");
        programXmlArgs = programXmlArgs.replace("|filePath|", collector.getInputFilePath());
        programXmlArgs = programXmlArgs.replace(" |primaryKey|", "");
        requestBody.put("programArgs", programXmlArgs);
        jobSubmitUrl = flinkApiUrl + "/jars/" + flinkJobXmlJarid + "/run";
        LOGGER.info("jobSubmitUrl:" + jobSubmitUrl);
        LOGGER.info("requestBody::" + requestBody.toString());
    }
    else if(fileType.equalsIgnoreCase(".txt")){
        LOGGER.info("TEXT FLINK TRIGGER::");
        requestBody.put("programArgs", programArgs.replace("|input|", collector.getInputFilePath()));
        jobSubmitUrl = flinkApiUrl + "/jars/" + flinkJobtxtJarid + "/run";
    }
    
    request = new HttpEntity<String>(requestBody.toString(), headers);
    ResponseEntity<String> response = null;
    try {
        response = restTemplate.postForEntity(jobSubmitUrl, request, String.class);
        if(response.getStatusCode() == HttpStatus.OK){
            // Successful job submission
            // Push the success message to Kafka topic
            FileMetadata fileMetadata = new FileMetadata();
            fileMetadata.setJob_status("SUCCESS");
            fileMetadata.setJob_id(jobId);
            fileMetadata.setJar_id(jarId);
            // Push fileMetadata to Kafka topicName
            kafkaProducer.send(topicName, fileMetadata);
        } else {
            // Job submission failure
            // Push the failure message to Kafka topic
            FileMetadata fileMetadata = new FileMetadata();
            fileMetadata.setJob_status("FAILURE");
            fileMetadata.setJob_id(jobId);
            fileMetadata.setJar_id(jarId);
            // Push fileMetadata to Kafka topicName
            kafkaProducer.send(topicName, fileMetadata);
        }
    } catch (HttpStatusCodeException e) {
        // Handle any exception in job submission
        // Push the failure message to Kafka topic
        FileMetadata fileMetadata = new FileMetadata();
        fileMetadata.setJob_status("FAILURE");
        fileMetadata.setJob_id(jobId);
        fileMetadata.setJar_id(jarId);
        fileMetadata.setExceptions(e.getMessage());
        // Push fileMetadata to Kafka topicName
        kafkaProducer.send(topicName, fileMetadata);
    }
}
```

In the modified code, I have added a `ResponseEntity<String>` object to capture the response of the job submission request. If the status code of the response is `HttpStatus.OK`, it indicates a successful job submission and the success message is pushed to the Kafka topic. If the status code is not OK, it indicates a job submission failure and the failure message is pushed to the Kafka topic. Additionally, the catch block has been added to handle any exceptions in job submission and push the failure message to the Kafka topic with the exception details.