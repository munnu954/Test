Here is the JUnit5 test code covering all possible branches for the `createConsumerConnection(String, String)` method of the `KafkaMessageConsumer` class:

```java
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import static org.mockito.Mockito.*;
import java.util.Properties;
import java.util.concurrent.atomic.AtomicBoolean;
import static org.junit.jupiter.api.Assertions.*;

public class KafkaMessageConsumerTest {

    private KafkaMessageConsumer kafkaMessageConsumer;

    @Mock
    private KafkaConsumer<String, String> kafkaConsumerMock;

    @BeforeEach
    public void setup() {
        kafkaMessageConsumer = new KafkaMessageConsumer();
        kafkaConsumerMock = mock(KafkaConsumer.class);
    }

    @Test
    void testCreateConsumerConnection_Success() {
        // Mocking the KafkaConsumer creation
        when(kafkaMessageConsumer.createConsumerConnection("testTopic", "testGroupId")).thenReturn(kafkaConsumerMock);

        // Calling the method
        KafkaConsumer<String, String> kafkaConsumer = kafkaMessageConsumer.createConsumerConnection("testTopic", "testGroupId");

        // Verifying the result
        assertNotNull(kafkaConsumer);
        verify(kafkaConsumerMock, times(1)).subscribe(anyList());
    }

    @Test
    void testCreateConsumerConnection_NullConsumer() {
        // Mocking the KafkaConsumer creation
        when(kafkaMessageConsumer.createConsumerConnection("testTopic", "testGroupId"))
                .thenReturn(null);

        // Calling the method
        KafkaConsumer<String, String> kafkaConsumer = kafkaMessageConsumer.createConsumerConnection("testTopic", "testGroupId");

        // Verifying the result
        assertNull(kafkaConsumer);
        verify(kafkaConsumerMock, never()).subscribe(anyList());
    }

    @Test
    void testCreateConsumerConnection_Exception() {
        // Mocking the KafkaConsumer creation to throw an exception
        when(kafkaMessageConsumer.createConsumerConnection("testTopic", "testGroupId"))
                .thenThrow(new KafkaException("Test Exception"));

        // Calling the method
        KafkaConsumer<String, String> kafkaConsumer = kafkaMessageConsumer.createConsumerConnection("testTopic", "testGroupId");

        // Verifying the result
        assertNull(kafkaConsumer);
        verify(kafkaConsumerMock, never()).subscribe(anyList());
    }
}
```

In this test class, we have covered various scenarios like a successful connection creation, returning null in case of a null consumer, and throwing an exception during the connection creation. This should help achieve 100% code coverage for the `createConsumerConnection(String, String)` method of the `KafkaMessageConsumer` class. Feel free to add more test cases as needed.