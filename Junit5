To write a JUnit test case that covers the scenario where the `deviceResponse` is null in the `getDeviceDetailsv3` method, you need to mock the `RestTemplate` to return null when the `exchange` method is called. Here's how you can achieve this using Mockito and JUnit:

```java
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import java.util.HashMap;
import java.util.Map;

@RunWith(MockitoJUnitRunner.class)
public class IVAPPDeviceServiceTest {

    @InjectMocks
    private IVAPPDeviceService iVAPPDeviceService;

    @Mock
    private IVAPPDeviceUtil iVAPPDeviceUtil;

    @Mock
    private RestTemplate restTemplate;

    private Map<String, Object> request;
    private UTSEquipmentList utsEquipmentList;

    @Before
    public void setUp() {
        request = new HashMap<>();
        utsEquipmentList = new UTSEquipmentList();
        
        when(iVAPPDeviceUtil.findServiceByName(any(String.class))).thenReturn("http://dummy-url");
        when(iVAPPDeviceUtil.getHttpHeaders()).thenReturn(new HttpHeaders());
    }

    @Test
    public void testGetDeviceDetailsv3_NullDeviceResponse() throws NoDataFoundException {
        // Mock RestTemplate to return null response
        when(restTemplate.exchange(any(String.class), any(HttpMethod.class), any(HttpEntity.class), any(Class.class)))
                .thenReturn(null);

        // Call the method
        UTSEquipmentList result = iVAPPDeviceService.getDeviceDetailsv3(request, utsEquipmentList);

        // Verify the result is the same as the input utsEquipmentList (since deviceResponse is null)
        assert result == utsEquipmentList;
    }
}
```

### Explanation:
1. **Setup**:
   - Use `MockitoJUnitRunner` to automatically initialize mocks.
   - Mock `IVAPPDeviceUtil` and `RestTemplate`.
   - Set up the mocks to return specific values.

2. **Test for Null `deviceResponse`**:
   - Use `when` to mock `RestTemplate`'s `exchange` method to return null.
   - Call `getDeviceDetailsv3` and ensure that the returned `UTSEquipmentList` is the same as the input `utsEquipmentList` since `deviceResponse` is null and the conversion logic is bypassed.

This test ensures that the branch where `deviceResponse` is null is executed and confirms that the method handles this scenario correctly by returning the input `UTSEquipmentList` unchanged.