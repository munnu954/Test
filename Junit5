To achieve 100% code coverage for the `ThreadPoolController` class with JUnit 5 test cases, we need to cover the scenarios where `deviceTP.getThreadPoolExecutor()` is null in `getThreadPoolExecutorStatistics`, where the `if` block for `thread.getName().startsWith("collection-orchestrator-id")` in `stopThreads`, and where `polledRecords` is empty in the `testThreads` method. Here is a template for the test class:

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.when;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
public class ThreadPoolControllerTest {

    @InjectMocks
    private ThreadPoolController threadPoolController;

    @Mock
    private ThreadPoolTaskExecutor deviceTP;

    @Mock
    private LuceneSpaceCollectorRepository luceneSpaceCollectorRepository;

    @Mock
    private KafkaProducerServiceImpl kafkaProducerService;

    @Test
    public void testGetThreadPoolExecutorStatisticsNullExecutor() {
        when(deviceTP.getThreadPoolExecutor()).thenReturn(null);

        ThreadPoolResponse response = threadPoolController.getThreadPoolExecutorStatistics(null);

        assertNotNull(response);
        assertEquals(0, response.getHistorical_thread_count());
        // Add more assertions based on the behavior when ThreadPoolExecutor is null
    }

    @Test
    public void testStopThreadsOrchestratorIdThread() {
        Thread thread1 = Mockito.mock(Thread.class);
        Mockito.when(thread1.getName()).thenReturn("collection-orchestrator-id-1");

        Set<Thread> threads = new HashSet<>();
        threads.add(thread1);

        Mockito.when(Thread.getAllStackTraces().keySet()).thenReturn(threads);

        threadPoolController.stopThreads();

        Mockito.verify(thread1, Mockito.times(1)).interrupt();
    }

    @Test
    public void testTestThreadsEmptyPolledRecords() {
        when(luceneSpaceCollectorRepository.findByQuery(Mockito.anyString())).thenReturn(new ArrayList<>());

        threadPoolController.testThreads();

        // Add assertions based on the behavior when polledRecords is empty
    }

    // Add more test cases to cover other scenarios and conditions in ThreadPoolController

}


In the above test class, we are mocking the dependencies like `ThreadPoolTaskExecutor`, `LuceneSpaceCollectorRepository`, and `KafkaProducerServiceImpl` to simulate different scenarios for testing. The provided test cases cover the scenarios where the `ThreadPoolExecutor` is null, where the thread name starts with "collection-orchestrator-id", and where `polledRecords` is empty as mentioned in the methods. Further tests can be added to cover additional branches and conditions in the `ThreadPoolController` class.