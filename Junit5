import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class CBRSSuppressionConstantsTest {

    @Test
    public void testConstants() {
        assertNotNull(CBRSSuppressionConstants.INFIELDOPERATOR);
        assertNotNull(CBRSSuppressionConstants.OUTFIELDOPERATOR);
        assertNotNull(CBRSSuppressionConstants.FIELD);
        assertNotNull(CBRSSuppressionConstants.VALUE);
        assertNotNull(CBRSSuppressionConstants.RULETYPE);
        assertNotNull(CBRSSuppressionConstants.CBRSSUPPRESSION);
        assertNotNull(CBRSSuppressionConstants.EQUAL);
        assertNotNull(CBRSSuppressionConstants.AND_OPERATOR);
        assertNotNull(CBRSSuppressionConstants.RULETYPE_RMF);
        assertNotNull(CBRSSuppressionConstants.RULEISACTIVE);
        assertNotNull(CBRSSuppressionConstants.RULECRITERIA);
        assertNotNull(CBRSSuppressionConstants.RULEID_RMF);
        assertNotNull(CBRSSuppressionConstants.RULEMATCHINGCRITERIA);
        assertNotNull(CBRSSuppressionConstants.RULEFUNCTIONPARAMETERS_RMF);
        assertNotNull(CBRSSuppressionConstants.RULEACTIONPARAMETERS_RMF);
        assertNotNull(CBRSSuppressionConstants.RULEDETAILS_RMF);
        assertNotNull(CBRSSuppressionConstants.RULENAME_RMF);
        assertNotNull(CBRSSuppressionConstants.RULEPRIORITY_RMF);
        assertNotNull(CBRSSuppressionConstants.RULEVERSION_RMF);
        assertNotNull(CBRSSuppressionConstants.RULE_DETAILS_ID_RMF);
        assertNotNull(CBRSSuppressionConstants.TIME_WINDOW);
        assertNotNull(CBRSSuppressionConstants.TIME_WINDOW_UNITS);
        assertNotNull(CBRSSuppressionConstants.SUPPRESSION_THRESHOLD_COUNT);
        assertNotNull(CBRSSuppressionConstants.SUPPRESSION_KEY);
        assertNotNull(CBRSSuppressionConstants.SUPPRESSION_INTERVAL);
        assertNotNull(CBRSSuppressionConstants.SUPPRESSION_INTERVAL_UNITS);
        assertNotNull(CBRSSuppressionConstants.SUPPRESS_PARENT_ALARMS);
        assertNotNull(CBRSSuppressionConstants.SUPPRESS_CHILD_ALARMS);
        assertNotNull(CBRSSuppressionConstants.ALARM_TEMPLATE);
        assertNotNull(CBRSSuppressionConstants.LOG_SUPPRESSION_EVENT);
    }
}