Certainly! Here are more JUnit 5 test cases covering different branches of the `createAlarm(String msg)` method for achieving 100% code coverage of the `AlarmRepositoryImpl` class:

```java
@Test
void testCreateAlarmWithInvalidJsonFormat() throws Exception {
    ObjectMapper obj = new ObjectMapper();
    
    String invalidJsonMsg = "{ \"externalAlarmId\", \"State\":\"raised\",\"severity\":\"Unknown\",\"sequenceId\":\"23423\"}";
    
    assertThrows(JsonParseException.class, () -> alarmRepositoryImpl.createAlarm(invalidJsonMsg));
}

@Test
void testCreateAlarmWithUnknownAlarmType() throws Exception {
    ObjectMapper obj = new ObjectMapper();
    
    Map<String, Integer> percMap = new HashMap<>();
    Map<String, Integer> stateMap = new HashMap<>();
    
    percMap.put("Other", 6);
    percMap.put("Indeterminate", 1);
    
    when(postgresConf.getAlarmTypeMap()).thenReturn(percMap);
    when(postgresConf.getPerceivedSeverityMap()).thenReturn(percMap);
    
    when(postgresConf.getAlarmTypeOther()).thenReturn("Other");
    when(postgresConf.getAlarmStateNew()).thenReturn("New");
    when(postgresConf.getPerceivedSeverityIndeterminate()).thenReturn("Indeterminate");
    
    String unknownAlarmTypeMsg = "{ \"externalAlarmId\":\"pqwer\", \"State\":\"raised\",\"severity\":\"Unknown\",\"sequenceId\":\"23423\"}";
    
    alarmRepositoryImpl.createAlarm(unknownAlarmTypeMsg);
    
    // Add assertions as needed to verify the behavior of the method
}

@Test
void testCreateAlarmWithRaisedStateAndNewPerceivedSeverity() throws Exception {
    ObjectMapper obj = new ObjectMapper();
    
    Alarm alarm = mock(Alarm.class);
    when(alarm.getPerceivedSeverity()).thenReturn(6); // Assuming New perceived severity
    
    Map<String, Integer> percMap = new HashMap<>();
    Map<String, Integer> stateMap = new HashMap<>();
    
    percMap.put("Other", 6);
    percMap.put("New", 1);
    
    when(postgresConf.getAlarmTypeMap()).thenReturn(percMap);
    when(postgresConf.getPerceivedSeverityMap()).thenReturn(percMap);
    
    when(postgresConf.getAlarmTypeOther()).thenReturn("Other");
    when(postgresConf.getAlarmStateNew()).thenReturn("New");
    when(postgresConf.getPerceivedSeverityIndeterminate()).thenReturn("Indeterminate");
    
    String newPerceivedSeverityMsg = "{ \"externalAlarmId\":\"pqwer\", \"State\":\"raised\",\"severity\":\"New\",\"sequenceId\":\"23423\"}";
    
    alarmRepositoryImpl.createAlarm(newPerceivedSeverityMsg);
    
    // Add assertions as needed to verify the behavior of the method
}

// Add more test cases for covering other branches and scenarios
```

Feel free to add or modify test cases to cover all branches and scenarios of the `createAlarm(String msg)` method in the `AlarmRepositoryImpl` class. This will help ensure thorough testing and achieve complete code coverage.