import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.boot.web.server.LocalServerPort;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;

@ExtendWith(SpringExtension.class)
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
public class CsvToJsonTransformerJobTest {

    @LocalServerPort
    private int port;

    @Autowired
    private TestRestTemplate restTemplate;

    private String jarId;
    private String filePath;

    @BeforeEach
    public void setup() {
        this.jarId = "valid-jar-id";
        this.filePath = "path/to/file.csv";
    }

    @Test
    public void testInvokeCsvToJsonTransformerJob_invalidJarId() {
        String invalidJarId = "invalid-jar-id";
        String url = "http://localhost:" + port + "/jars/" + invalidJarId + "/run";

        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.MULTIPART_FORM_DATA);

        MultiValueMap<String, Object> body = new LinkedMultiValueMap<>();
        body.add("programArgs", "--input" + filePath + "-fileType csv --bootstarpServer localhost:9092 --Topic COLLECTION-TOPIC");

        HttpEntity<MultiValueMap<String, Object>> requestEntity = new HttpEntity<>(body, headers);

        String response = restTemplate.exchange(url, HttpMethod.POST, requestEntity, String.class).getBody();

        Assertions.assertNotNull(response);
        Assertions.assertEquals("Invalid Jar ID", response);
    }

    @Test
    public void testInvokeCsvToJsonTransformerJob_nonExistentJarId() {
        String nonExistentJarId = "non-existent-jar-id";
        String url = "http://localhost:" + port + "/jars/" + nonExistentJarId + "/run";

        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.MULTIPART_FORM_DATA);

        MultiValueMap<String, Object> body = new LinkedMultiValueMap<>();
        body.add("programArgs", "--input" + filePath + "-fileType csv --bootstarpServer localhost:9092 --Topic COLLECTION-TOPIC");

        HttpEntity<MultiValueMap<String, Object>> requestEntity = new HttpEntity<>(body, headers);

        String response = restTemplate.exchange(url, HttpMethod.POST, requestEntity, String.class).getBody();

        Assertions.assertNotNull(response);
        Assertions.assertEquals("Jar ID does not exist", response);
    }
}