@Test
void testParseWithValidJsonFieldAndArrayIndex() throws Exception {
    // Arrange
    String expression = "%attribute1:details.names[1]%";
    srcMap.put("details", Map.of("names", List.of("John", "Jane")));

    // Act
    String result = alarmPostingUtils.parse(expression, srcMap, "");
    
    // Assert
    assertEquals("Jane", result);
}

@Test
void testParseWithInvalidJsonFieldAndArrayIndex() throws Exception {
    // Arrange
    String expression = "%attribute1:details.unknown[1]%";
    srcMap.put("details", Map.of("names", List.of("John", "Jane")));

    // Act
    String result = alarmPostingUtils.parse(expression, srcMap, "");
    
    // Assert
    assertEquals(RulesConstants.EMPTYSTRING, result);
}

@Test
void testParseWithValidJsonFieldAndInvalidArrayIndex() throws Exception {
    // Arrange
    String expression = "%attribute1:details.names[2]%";
    srcMap.put("details", Map.of("names", List.of("John", "Jane")));

    // Act
    String result = alarmPostingUtils.parse(expression, srcMap, "");
    
    // Assert
    assertEquals(RulesConstants.EMPTYSTRING, result);
}

@Test
void testParseWithInvalidJsonFieldAndValidArrayIndex() throws Exception {
    // Arrange
    String expression = "%attribute1:details.unknown[0]%";
    srcMap.put("details", Map.of("names", List.of("John", "Jane")));

    // Act
    String result = alarmPostingUtils.parse(expression, srcMap, "");
    
    // Assert
    assertEquals(RulesConstants.EMPTYSTRING, result);
}

@Test
void testParseWithValidJsonFieldAndIndexOutOfRange() throws Exception {
    // Arrange
    String expression = "%attribute1:details.names[3]%";
    srcMap.put("details", Map.of("names", List.of("John", "Jane")));

    // Act
    String result = alarmPostingUtils.parse(expression, srcMap, "");
    
    // Assert
    assertEquals(RulesConstants.EMPTYSTRING, result);
}