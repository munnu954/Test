```java
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.when;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import com.vz.s360.vbg.eventledger.exception.InvalidRequestException;
import com.vz.s360.vbg.eventledger.jmapper.mapper.v1.vbg.MtnInsightsRequestV1;
import com.vz.s360.vbg.eventledger.model.v1.vbg.MtnInsightsAttributesV1;
import com.vz.s360.vbg.eventledger.model.v1.vbg.MtnInsightsRequestV1;
import com.vz.s360.vbg.eventledger.validator.v1.vbg.MtnInsightsValidatorV1;

@ExtendWith(MockitoExtension.class)
public class MtnInsightsValidatorV1UnitTest {

    @InjectMocks
    private MtnInsightsValidatorV1 mtnInsightsValidator;

    @Mock
    private MtnInsightsRequestV1VbgMock mtnInsightsRequestV1VbgMock;

    @Test
    public void test_validate_keyAttributes_null_listKeyAttributes_null() {
        assertThrows(InvalidRequestException.class, () -> {
            MtnInsightsRequestV1 mtnInsightsRequestV1 = new MtnInsightsRequestV1();
            mtnInsightsValidator.validate(mtnInsightsRequestV1);
        });
    }

    @Test
    public void test_validate_keyAttributes_valid_listKeyAttributes_null() {
        try {
            MtnInsightsRequestV1 mtnInsightsRequestV1 = new MtnInsightsRequestV1();
            mtnInsightsRequestV1.setKeyAttributes(new MtnInsightsAttributesV1());
            mtnInsightsValidator.validate(mtnInsightsRequestV1);
        } catch (InvalidRequestException e) {
            assertEquals("ServiceHeader Client Id, Transaction Id and Service Name are required.", e.getMessage());
        }
    }

    @Test
    public void test_validate_listKeyAttributes_valid_keyAttributes_null() {
        try {
            MtnInsightsRequestV1 mtnInsightsRequestV1 = new MtnInsightsRequestV1();
            MtnInsightsAttributesV1[] mtnInsightsAttributesV1 = new MtnInsightsAttributesV1[1];
            mtnInsightsRequestV1.setListKeyAttributes(mtnInsightsAttributesV1);
            mtnInsightsValidator.validate(mtnInsightsRequestV1);
        } catch (InvalidRequestException e) {
            assertEquals("ServiceHeader Client Id, Transaction Id and Service Name are required.", e.getMessage());
        }
    }

    @Test
    public void test_validate_keyAttributes_notEmpty_allFieldsCheck_mybiz() {
        try {
            MtnInsightsRequestV1 mtnInsightsRequestV1 = new MtnInsightsRequestV1();
            mtnInsightsRequestV1.setKeyAttributes(new MtnInsightsAttributesV1());
            MtnInsightsAttributesV1 mtnInsightsAttributesV1 = mtnInsightsRequestV1.getKeyAttributes();
            mtnInsightsAttributesV1.setMtn("");
            mtnInsightsAttributesV1.setInsightCategory("");
            mtnInsightsAttributesV1.setInsightName("");
            mtnInsightsValidator.validateIterator("MTN, Insight Category and Insight Name should not be null or empty.", mtnInsightsAttributesV1, "KeyAttributes");
        } catch (InvalidRequestException e) {
            assertEquals("MTN, Insight Category and Insight Name are required.", e.getMessage());
        }
    }

    @Test
    public void test_validate_keyAttributes_notEmpty_allFieldsCheck_networkOutage() {
        try {
            MtnInsightsRequestV1 mtnInsightsRequestV1 = new MtnInsightsRequestV1();
            mtnInsightsRequestV1.setKeyAttributes(new MtnInsightsAttributesV1());
            MtnInsightsAttributesV1 mtnInsightsAttributesV1 = mtnInsightsRequestV1.getKeyAttributes();
            mtnInsightsAttributesV1.setMtn("MTN");
            mtnInsightsAttributesV1.setInsightCategory("");
            mtnInsightsAttributesV1.setInsightName("");
            mtnInsightsValidator.validateIterator("Outage id, Insight Category and Insight Name, MTN, ECPD id should not be null or empty.", mtnInsightsAttributesV1, "KeyAttributes");
        } catch (InvalidRequestException e) {
            assertEquals("Outage id, Insight Category and Insight Name, MTN, ECPD id are required.", e.getMessage());
        }
    }

    @Test
    public void test_validateIterator_ecpDId_mtn_empty_insightCategory_insightName_mybiz_requiredFields() {
        try {
            MtnInsightsRequestV1 mtnInsightsRequestV1 = new MtnInsightsRequestV1();
            mtnInsightsRequestV1.setKeyAttributes(new MtnInsightsAttributesV1());
            MtnInsightsAttributesV1 mtnInsightsAttributesV1 = mtnInsightsRequestV1.getKeyAttributes();
            mtnInsightsAttributesV1.setEcpdId("");
            mtnInsightsAttributesV1.setMtn("MTN");
            mtnInsightsAttributesV1.setInsightCategory("");
            mtnInsightsAttributesV1.setInsightName("MyBizReg");
            mtnInsightsValidator.validateIterator("MTN, Insight Category and Insight Name should not be null or empty.", mtnInsightsAttributesV1, "KeyAttributes");
        } catch (InvalidRequestException e) {
            assertEquals("MTN, Insight Category and Insight Name are required.", e.getMessage());
        }
    }

    @Test
    public void test_validateIterator_ecpDId_mtn_empty_insightCategory_emtpy_insightName_mybiz_requiredFields() {
        try {
            MtnInsightsRequestV1 mtnInsightsRequestV1 = new MtnInsightsRequestV1();
            mtnInsightsRequestV1.setKeyAttributes(new MtnInsightsAttributesV1());
            MtnInsightsAttributesV1 mtnInsightsAttributesV1 = mtnInsightsRequestV1.getKeyAttributes();
            mtnInsightsAttributesV1.setEcpdId("ECPD_ID");
            mtnInsightsAttributesV1.setMtn("MTN");
            mtnInsightsAttributesV1.setInsightCategory("");
            mtnInsightsAttributesV1.setInsightName("");
            mtnInsightsValidator.validateIterator("MTN, Insight Category and Insight Name should not be null or empty.", mtnInsightsAttributesV1, "KeyAttributes");
        } catch (InvalidRequestException e) {
            assertEquals("MTN, Insight Category and Insight Name are required.", e.getMessage());
        }
    }

    @Test
    public void test_validateIterator_ecpDId_not_emtpy_mtn_emtpy_insightCategory_insightName_mybiz_allFieldsCheck() {
        try {
            MtnInsightsRequestV1 mtnInsightsRequestV1 = new MtnInsightsRequestV1();
            mtnInsightsRequestV1.setKeyAttributes(new MtnInsightsAttributesV1());
            MtnInsightsAttributesV1 mtnInsightsAttributesV1 = mtnInsightsRequestV1.getKeyAttributes();
            mtnInsightsAttributesV1.setEcpdId("ECPD_ID");
            mtnInsightsAttributesV1.setMtn("");
            mtnInsightsAttributesV1.setInsightCategory("VBGMyBiz");
            mtnInsightsAttributesV1.setInsightName("MyBizReg");
            mtnInsightsValidator.validateIterator("MTN, Insight Category and Insight Name should not be null or empty.", mtnInsightsAttributesV1, "KeyAttributes");
        } catch (InvalidRequestException e) {
            assertEquals("MTN, Insight Category and Insight Name are required.", e.getMessage());
        }
    }

    @Test
    public void test_validateIterator_ecpDId_not_emtpy_mtn_not_emtpy_insightCategory_emtpy_insightName_mybiz_allFieldsCheck() {
        try {
            MtnInsightsRequestV1 mtnInsightsRequestV1 = new MtnInsightsRequestV1();
            mtnInsightsRequestV1.setKeyAttributes(new MtnInsightsAttributesV1());
            MtnInsightsAttributesV1 mtnInsightsAttributesV1 = mtnInsightsRequestV1.getKeyAttributes();
            mtnInsightsAttributesV1.setEcpdId("ECPD_ID");
            mtnInsightsAttributesV1.setMtn("MTN");
            mtnInsightsAttributesV1.setInsightCategory("");
            mtnInsightsAttributesV1.setInsightName("MyBizReg");
            mtnInsightsValidator.validateIterator("MTN, Insight Category and Insight