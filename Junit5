import org.junit.jupiter.api.Test;
import org.mockito.MockedStatic;
import org.mockito.Mockito;

import javax.xml.bind.JAXBException;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.mock;

public class BatchLoaderUtilsTest {

    @Test
    void testConvertToObject_JAXBException() throws JAXBException {
        // Arrange
        String invalidXml = "<invalid_xml>";
        Class<?> clazz = TYSConstants.class;

        BatchLoaderUtils batchLoaderUtils = new BatchLoaderUtils();

        // Mocking the LOGGER to avoid actual logging
        try (MockedStatic<LoggerFactory> mockedLoggerFactory = Mockito.mockStatic(LoggerFactory.class)) {
            mockedLoggerFactory.when(LoggerFactory::getLogger).thenReturn(mock(org.slf4j.Logger.class));

            // Act
            TYSConstants result = batchLoaderUtils.convertToObject(invalidXml, TYSConstants.class);

            // Assert
            assertFalse(batchLoaderUtils.isValidData(result.getValue()));
        }
    }
}