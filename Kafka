public void createMessageAndLog(String inputFilePath, String url, Integer port, String outputFilePath, String delimiters, String fileType, String date_received, String date_processed, Integer no_of_records_in_the_file, Integer no_of_records_processed, Integer no_of_records_failed, UUID job_id, UUID jar_id, List<String> exceptions, UUID collector_id) {
    LocalDateTime dateProcessed = LocalDateTime.now();

    UnifiedAuditMessage auditMsg = new UnifiedAuditMessage(inputFilePath, url, port, outputFilePath, delimiters, fileType, date_received, dateProcessed.toString(), no_of_records_in_the_file, no_of_records_processed, no_of_records_failed, job_id, jar_id, exceptions, collector_id);

    try {
        ObjectMapper objectMapper = new ObjectMapper();
        String auditMsgJson = objectMapper.writeValueAsString(auditMsg);

        this.kafkaTemplate.send(topicName, auditMsgJson);

        Logger.info("Kafka status message: {}", auditMsgJson);

    } catch (Exception e) {
        Logger.error("Failed to send Kafka message: {}", e.getMessage());
    }
}

public LocalDateTime generateCurrentDateTime() {
    return LocalDateTime.now();
}


import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.time.LocalDateTime;

public void createMessageAndLog(String inputFilePath, String url, Integer port, String outputFilePath, String delimiters, String fileType, String date_received, String date_processed, Integer no_of_records_in_the_file, Integer no_of_records_processed, Integer no_of_records_failed, UUID job_id, UUID jar_id, List<String> exceptions, UUID collector_id) {
    // Function to generate and extract the current Date and time
    LocalDateTime dateProcessed = LocalDateTime.now();

    UnifiedAuditMessage auditMsg = new UnifiedAuditMessage(inputFilePath, url, port, outputFilePath, delimiters, fileType, date_received, date_processed, no_of_records_in_the_file, no_of_records_processed, no_of_records_failed, job_id, jar_id, exceptions, collector_id);

    try {
        // Convert UnifiedAuditMessage object to JSON
        ObjectMapper objectMapper = new ObjectMapper();
        String auditMsgJson = objectMapper.writeValueAsString(auditMsg);

        this.kafkaTemplate.send(topicName, auditMsgJson);

        Logger.info("Kafka status message: {}", auditMsgJson);
    } catch (JsonProcessingException e) {
        Logger.error("Failed to send Kafka message: {}", e.getMessage());
    }
}