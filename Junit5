@Getter
@Setter
public class Alarm implements Cloneable{
public Object clone() throws CloneNotSupportedException { return super.clone(); }
 private String alarmIdentity;
 private String externalAlarmId;
private String sourceSystemId="Unknown";
private int alarmType=0;
private int state=1;
private int perceived Severity=1;
private String probableCause="Unknown";
private String specificProblem;
private boolean serviceAffecting=false;
private String alarmRaisedTime;
private String alarmUpdatedTime;
private String alarmReportingTime;
private String clearTime;
private String timeStamp;
private long sequenceID;
private long count=1;
@JsonProperty("Resolved")
private boolean resolved=false;
private String alarmDetails; 
@JsonProperty("componentID")
private String componentId;
private String alarmedObject;
private String alarmedObjectType;
private String reportingObject;
private String equipmentObject;
@JsonProperty("TID")
private String tid;
@JsonProperty("AID")
private String aid;
private String rawMessage;
private String ticket;
private int stage=0;
private String parentAlarm;
@JsonProperty("USN")
private long usn=0;
private String[] tag;
private String custom;
private String neType;
private String equipClass;
private String alarmSource;
private String topologyDetails;
private String extTopologyDetails;
private String timeSequence;
private String postingEntity;
private String ticketStatus;
private int countResetFlag=0;
public Alarm(){}
}