To construct the API URL for triggering '/jars/:jarid/run along with path variables bootStrapServer, portNumber, and inputFilePath, you can use the following approach:

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

public class RestClient {
    
    @Autowired
    private AppConfig appConfig;
    
    public void triggerJarExecution(String jarId, String inputFilePath) {
        RestTemplate restTemplate = new RestTemplate();
        
        String bootstrap = appConfig.getUrl() + ":" + appConfig.getPort();
        
        // Use the parameters to build the request
        String url = bootstrap + "/jars/" + jarId + "/run?inputFilePath=" + inputFilePath;
        
        // Make the HTTP request
        ResponseEntity<String> response = restTemplate.postForEntity(url, null, String.class);
        
        // Process the response as needed
        System.out.println(response.getBody());
    }
}


In this example, we have a method triggerJarExecution that takes jarId and inputFilePath as parameters. We then use these parameters to construct the URL for triggering the execution of the jar. We use the RestTemplate to make a POST request to the constructed URL and process the response as needed.

Please note that you may need to modify the URL construction and request method based on the specific requirements of your application and the API you are interacting with.