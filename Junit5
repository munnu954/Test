Certainly! Below are the complete workable Cucumber test cases written according to the provided Gherkin scenario.

```java
Feature: Flink Job Submission

  Scenario: Submit a job to the Flink API
    Given I have a Unified AuditMessage with a "csv" file
    When I call the triggerJob method with the Unified AuditMessage and "csv" as the fileType
    Then the job should be submitted to the Flink API
    And the job status should be updated

```
FlinkJobSteps:
```java
import static org.junit.Assert.assertNotNull;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import static org.mockito.Mockito.when;

public class FlinkJobSteps {
  private UnifiedAuditMessage message;
  private String fileType;
  private String jobId;

  @InjectMocks
  private FlinkApiController controller;

  @Mock
  private KafkaAuditProducer kafkaAuditProducer;

  @Before
  public void setup() {
    MockitoAnnotations.initMocks(this);
    fileType = "csv";
    message = new UnifiedAuditMessage();
  }

  @Given("I have a Unified AuditMessage with a {string} file")
  public void i_have_a_Unified_AuditMessage_with_a_file(String fileType) {
    this.fileType = fileType; // Assuming this parameter is used for further testing
  }

  @When("I call the triggerJob method with the Unified AuditMessage and {string} as the fileType")
  public void i_call_the_triggerJob_method_with_the_UnifiedAuditMessage_and_as_the_fileType(String fileType) {
    // Set the properties of the UnifiedAuditMessage
    message.setInputFilePath("sample/path.csv");
    message.setUrl("http://example.com");
    message.setPort(8080);
    message.setFileType(fileType);

    // Mock behavior for the FlinkApiController triggerJob method
    when(controller.triggerJob(message, fileType)).thenReturn("1234"); // Assuming job id "1234" is returned
    jobId = controller.triggerJob(message, fileType);
  }

  @Then("the job should be submitted to the Flink API")
  public void the_job_should_be_submitted_to_the_Flink_API() {
    assertNotNull(jobId); // Assert that the job ID is not null
  }

  @And("the job status should be updated")
  public void the_job_status_should_be_updated() {
    assertNotNull(message.getJobStatus()); // Assert that the job status is not null
  }
}
```
For the reference provided, cucumber testing is demonstrated for the Gherkin scenario. The `FlinkJobSteps` class utilizes Mockito to mock the behavior of the `FlinkApiController` and perform assertions on the job submission and status update. Additionally, a setup method is added to initialize mocks using `MockitoAnnotations.initMocks(this)` in `@Before` annotation.

This completes the workable cucumber test cases based on the provided scenario. Let me know if you need further assistance!