@Test
void testConvertTagToStringArray_CatchBlock_Reflection() throws SQLException, SerialException {
    // Arrange
    SerialArray mockSerialArray = mock(SerialArray.class);
    when(mockSerialArray.getArray()).thenThrow(SerialException.class);
    
    Object tagFromDb = mockSerialArray;
    
    AlarmRepositoryImpl alarmRepository = new AlarmRepositoryImpl();

    // Use reflection to access the private method convertTagToStringArray
    Method convertTagToStringArrayMethod = null;
    try {
        convertTagToStringArrayMethod = AlarmRepositoryImpl.class.getDeclaredMethod("convertTagToStringArray", Object.class);
        convertTagToStringArrayMethod.setAccessible(true);
    } catch (NoSuchMethodException e) {
        e.printStackTrace();
    }

    // Act
    String[] result = null;
    try {
        if (convertTagToStringArrayMethod != null) {
            result = (String[]) convertTagToStringArrayMethod.invoke(alarmRepository, tagFromDb);
        }
    } catch (IllegalAccessException | InvocationTargetException e) {
        e.printStackTrace();
    }

    // Assert
    // Verify that LOG.error was called with the correct message
    verify(LOG).error(eq("Error while converting tag to string array "), any(SerialException.class));

    // Verify that the result is null
    assertNull(result);
}
