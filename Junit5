Sure! Here is an example of JUnit 5 test cases to cover all the branches of the builder pattern for the `CollectionAudit` class.

```java
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

public class CollectionAuditTest {

    @Test
    public void testBuilder() {
        CollectionAudit collectionAudit1 = CollectionAudit.builder()
                .id("1")
                .collectorId("123")
                .processType(ProcessType.Collector)
                .jarId("456")
                .jobId("789")
                .flinkJobId("999")
                .jobStatus("Success")
                .inputFilePath("/path/to/inputFile.txt")
                .outputFilePath("/path/to/outputFile.txt")
                .url("http://example.com")
                .flinkURL("http://flink-example.com")
                .port(8080)
                .delimiters(",")
                .fileType("CSV")
                .dateReceived("2022-01-01")
                .dateProcessed("2022-01-02")
                .noOfRecordsInTheFile(100)
                .noOfRecordsProcessed(90)
                .noOfRecordsFailed(10)
                .exceptions("None")
                .bootstrapServer("localhost:9092")
                .build();

        assertEquals("1", collectionAudit1.getId());
        assertEquals("123", collectionAudit1.getCollectorId());
        assertEquals(ProcessType.Collector, collectionAudit1.getProcessType());
        assertEquals("456", collectionAudit1.getJarId());
        assertEquals("789", collectionAudit1.getJobId());
        assertEquals("999", collectionAudit1.getFlinkJobId());
        assertEquals("Success", collectionAudit1.getJobStatus());
        assertEquals("/path/to/inputFile.txt", collectionAudit1.getInputFilePath());
        assertEquals("/path/to/outputFile.txt", collectionAudit1.getOutputFilePath());
        assertEquals("http://example.com", collectionAudit1.getUrl());
        assertEquals("http://flink-example.com", collectionAudit1.getFlinkURL());
        assertEquals(8080, collectionAudit1.getPort());
        assertEquals(",", collectionAudit1.getDelimiters());
        assertEquals("CSV", collectionAudit1.getFileType());
        assertEquals("2022-01-01", collectionAudit1.getDateReceived());
        assertEquals("2022-01-02", collectionAudit1.getDateProcessed());
        assertEquals(100, collectionAudit1.getNoOfRecordsInTheFile());
        assertEquals(90, collectionAudit1.getNoOfRecordsProcessed());
        assertEquals(10, collectionAudit1.getNoOfRecordsFailed());
        assertEquals("None", collectionAudit1.getExceptions());
        assertEquals("localhost:9092", collectionAudit1.getBootstrapServer());

        // Test for not null
        assertNotNull(collectionAudit1);

        // Test for equality with same properties
        CollectionAudit collectionAudit2 = collectionAudit1;
        assertEquals(collectionAudit1, collectionAudit2);

        // Test for equality with different properties
        CollectionAudit collectionAudit3 = CollectionAudit.builder()
                .id("2")
                .collectorId("456")
                .build();
        assertNotEquals(collectionAudit1, collectionAudit3);
    }
}
```

This example tests the building of a `CollectionAudit` object using the builder pattern and validates if the properties are set correctly. It also includes assert methods to check for equality and not null. This should help in achieving 100% code coverage for the builder pattern of the `CollectionAudit` class.