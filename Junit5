Here's the updated `CoconutServiceVersion3` class with the requested changes:

```java
@Service
public class CoconutServiceVersion3 {

    @Autowired
    CoconutDeviceDao coconutDeviceDao;

    @Autowired
    EuipmentListCoconutDeviceDao euipmentListCoconutDeviceDao;

    @Autowired
    EquipmentListCoconutDeviceV3Dao equipmentListCoconutDeviceV3Dao;

    private CoconutDeviceMSConstants coconutDeviceMSConstants;

    private static Logger logger = LoggerFactory.getLogger(CoconutServiceVersion3.class);

    // newly created for v3api
    public UTSEquipmentList getCOCONUTEquipListV3(EquipmentInputRequest request, UTSEquipmentList utsEquipmentList)
            throws InternalServerErrorException, NoDataFoundException, InterruptedException, ExecutionException, DaoException {
        try {
            String qry = null;
            String fullQuery = null;
            Map<String, Object> criteria = request.getRequestParameters();
            qry = queryBasedOnParameter(criteria);
            fullQuery = "select COUNT(*) from (" + qry + ")";
            Integer skip = 0;
            Integer limit = 10;
            if (criteria.containsKey("pageNo")) {
                if (criteria.get("pageNo").equals("1")) {
                    skip = 0;
                } else {
                    skip = (Integer.parseInt(criteria.get("pageNo").toString()) * Integer.parseInt(criteria.get("size").toString()));
                    skip = skip - Integer.parseInt(criteria.get("size").toString());
                }
            } else {
                skip = 0;
            }
            if (criteria.containsKey("size")) {
                limit = skip + Integer.parseInt(criteria.get("size").toString());
            } else {
                limit = 10;
            }
            qry = "select * from (select t.*, rownum as rn from (" + qry;
            qry = qry.concat(" ) t ) WHERE rn BETWEEN " + skip + " and " + limit + " ");
            if (criteria.containsKey("sortByField")) {
                qry = qry.concat(" order by " + criteria.get("sortByField") + " ");
            }
            if (criteria.containsKey("sortDirection")) {
                qry = qry.concat(" " + criteria.get("sortDirection") + " ");
            }
            UTSEquipmentList response = new UTSEquipmentList();
            response = equipmentListCoconutDeviceV3Dao.getEquipListDaoV3(criteria, qry, fullQuery, utsEquipmentList, request);
            return response;
        } catch (Exception ex) {
            logger.error(ex.getMessage());
            throw new InternalServerErrorException(ex.getMessage());
        }
    }

    private String queryBasedOnParameter(Map<String, Object> queryParams) {
        String query = "";
        StringJoiner finalQuery = new StringJoiner(" ");
        
        // Base query
        if ("LOCATION".equalsIgnoreCase((String) queryParams.get("outputControl"))) {
            finalQuery.add(coconutDeviceMSConstants.COCONUT_V3_SITE_QUERY);
        }

        // Build WHERE clause conditions
        if (queryParams.containsKey("locationCLLI") || queryParams.containsKey("siteName")) {
            finalQuery.add("WHERE");

            if (queryParams.containsKey("locationCLLI")) {
                finalQuery.add("site.clli_code=lower(:locationCLLI) OR site.clli_code=upper(:locationCLLI)");
            }

            if (queryParams.containsKey("siteName")) {
                if (queryParams.containsKey("locationCLLI")) {
                    finalQuery.add("AND");
                }
                finalQuery.add("site.site_name=:siteName");
            }
        }

        return finalQuery.toString();
    }
}
```

Changes made:
1. The `queryBasedOnParameter` method now conditionally appends the `locationCLLI` and `siteName` criteria to the `finalQuery` based on their presence in `queryParams`.
2. The `WHERE` clause is built dynamically to include only the conditions that are present in `queryParams`.
3. Ensured that the `AND` operator is correctly placed when both `locationCLLI` and `siteName` are present.

This way, the query will work even if either or both of `locationCLLI` and `siteName` are absent from `queryParams`.