import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;
import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;
import org.apache.flink.util.Collector;

import java.io.IOException;

public class CsvToJsonConversion implements FlatMapFunction<String, String> {

    private final ObjectMapper objectMapper = new ObjectMapper();

    @Override
    public void flatMap(String input, Collector<String> collector) {
        try {
            String[] headers = input.split("\t"); // Assuming tab-separated values

            // Read the next line
            String nextLine = collector.next();
            String[] values = nextLine.split("\t");

            // Assuming the header and value lengths are the same
            if (headers.length == values.length) {
                ObjectNode jsonNode = objectMapper.createObjectNode();

                for (int i = 0; i < headers.length; i++) {
                    String jsonKey = headers[i].trim();
                    String jsonValue = values[i].trim().replace("\"", "");

                    jsonNode.put(jsonKey, jsonValue);
                }

                collector.collect(jsonNode.toString());
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
