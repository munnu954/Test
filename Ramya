import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] lines = input.split(System.lineSeparator());
        JsonObject result = new JsonObject();
        String objectName = "";
        JsonObject objectDetails = new JsonObject();

        for (int i = 1; i < lines.length; i++) {
            String[] arr = lines[i].split(",");

            if (arr.length > 2 && !arr[2].isEmpty()) {
                objectName = arr[2].trim();
                objectDetails.addProperty("Begin Date", getCellValue(lines, i + 1, 1));
                objectDetails.addProperty("End Date", getCellValue(lines, i + 2, 1));
                objectDetails.addProperty("Ticket Number", getCellValue(lines, i + 3, 1));
            } else if (arr.length > 0 && !arr[0].isEmpty()) {
                String sectionName = arr[0].trim();
                JsonObject sectionObject = new JsonObject();

                for (int j = 3; j < arr.length; j++) {
                    sectionObject.addProperty("Min", getCellValue(lines, i, j));
                    sectionObject.addProperty("Average", getCellValue(lines, i + 1, j));
                    sectionObject.addProperty("Max", getCellValue(lines, i + 2, j));
                    sectionObject.addProperty("Cumulative Counter Value", getCellValue(lines, i + 3, j));
                }

                objectDetails.add(sectionName, sectionObject);
            }
        }

        result.add(objectName, objectDetails);
        collector.collect(result.toString());
    }

    private String getCellValue(String[] lines, int rowIndex, int columnIndex) {
        if (lines.length > rowIndex) {
            String[] rowValues = lines[rowIndex].split(",");
            if (rowValues.length > columnIndex) {
                return rowValues[columnIndex].trim();
            }
        }
        return "";
    }
}
