Certainly! To enable wildcard search for `siteName` and `locationCLLI`, you can use the `LIKE` operator with `%` wildcard characters. Here's the updated `queryBasedOnParameter` method:

```java
private String queryBasedOnParameter(Map<String, Object> queryParams) {
    String query = "";
    StringJoiner finalQuery = new StringJoiner(" ");
    
    if ("LOCATION".equalsIgnoreCase((String) queryParams.get("outputControl"))) {
        finalQuery.add(coconutDeviceMSConstants.COCONUT_V3_SITE_QUERY);
        
        if (queryParams.containsKey("locationCLLI")) {
            finalQuery.add("AND (site.clli_code LIKE '%' || :locationCLLI || '%')");
        }
        
        if (queryParams.containsKey("siteName")) {
            finalQuery.add("AND site.site_name LIKE '%' || :siteName || '%'");
        }
    }
    
    return finalQuery.toString();
}
```

In this version of the method:

- The `LIKE` operator is used instead of `=` for both `locationCLLI` and `siteName`, allowing for partial matches.
- The `|| '%'` syntax appends the wildcard character `%` to the `locationCLLI` and `siteName` values, allowing matches to occur at any position within the string.