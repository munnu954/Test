For the above code, Write Junit Test cases for ETAS fileType transformation, given an ETAS.xml is placed in "src/test/resources/files/ETAS.xml" location with 40 records present in that file, write Assertions for successIntCounter and failureIntCounter where count for successIntCounter is 40 and 0 for  failureIntCounter. 
Write Workable and executable Junit Test cases code mainly focusing on ETAS transformation.










import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.*;

import org.apache.flink.api.common.typeinfo.TypeInformation;
import org.apache.flink.streaming.api.datastream.DataStream;
import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;
import org.apache.flink.streaming.api.functions.sink.SinkFunction;
import org.apache.flink.types.StringValue;
import org.junit.Test;

public class XmlTransformerApplicationTest {

    @Test
    public void testEtasTransformation() throws Exception {
        String filePath = "src/test/resources/files/ETAS.xml";

        String primaryKey = "measInfo";
        String bootstrapServer = "localhost:9092";
        String auditTopic = "auditTopic";
        String dataTopic = "dataTopic";
        String fileName = "ETAS.xml";

        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();

        XmlToJsonConverter xmlToJsonConverter = new XmlToJsonConverter(primaryKey, filePath, fileName);

        DataStream<String> xmlDataStream = env.readTextFile(filePath);
        DataStream<String> jsonStream = xmlDataStream.flatMap(xmlToJsonConverter).name("XmlToJsonFlatMap");

        SinkFunction<String> testSink = mock(SinkFunction.class);
        jsonStream.addSink(testSink);

        env.execute();

        verify(testSink, times(40)).invoke(anyString());

        int successCount = xmlToJsonConverter.getSuccessCount();
        int failureCount = xmlToJsonConverter.getFailureCount();

        assertEquals(40, successCount);
        assertEquals(0, failureCount);
    }
}