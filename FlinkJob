public class CsvtoJsonMRFCnTransformer extends RichFlatMapFunction<String, String>{
    String[] headers;
    JSONObject obj;
    private IntCounter successIntCounter = new IntCounter();
    private IntCounter failureIntCounter = new IntCounter();

    @Override
    public void open(Configuration parameters) throws Exception {
        getRuntimeContext().addAccumulator("successIntCounter", this.successIntCounter);
        getRuntimeContext().addAccumulator("failureIntCounter", this.failureIntCounter);
    }

    @Override
    public void flatMap(String value, Collector<String> out) throws Exception {
        String[] lines = value.split(System.lineSeparator());
        for(String line: lines) {
            String[] arr = line.split(",");
            if (headers == null) {
                headers = arr;
                continue;
            }
            if(headers.length == arr.length) {
                obj = getJSONObject(headers, arr);
                this.successIntCounter.add(1);
                out.collect(obj.toString());
            } else {
                this.failureIntCounter.add(1);
            }
        }
    }
    
    JSONObject getJSONObject(String[] headerArr, String[] dataArr) throws JSONException {
        JSONObject obj = new JSONObject();
        for (int i = 0; i < dataArr.length; i++) {
            String jsonKey = headerArr[i].trim().replace("\"", "");
            String jsonValue = dataArr[i].trim().replace("\"", "");
            obj.put(jsonKey, jsonValue);
        }
        return obj;
    }
}