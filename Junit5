The error you're encountering is due to the fact that `retryReaderConnection` method is private and you're trying to invoke it directly using reflection. To fix this issue, you can make the `retryReaderConnection` method public or provide a public method that wraps the call to `retryReaderConnection`. Here's the updated code:

```java
@ExtendWith(MockitoExtension.class)
public class MessageReaderServiceTest {

    @Mock
    VMBParams params;

    @Mock
    ApolloServiceHealth healthChecker;

    @Mock
    RuleLoadingService rulesLoadingService;

    MessageReaderService messageReaderService;

    @BeforeEach
 Here is the continued code:

```java
    @BeforeEach
    public void setup() {
        messageReaderService = new MessageReaderService();
        messageReaderService.params = params;
        messageReaderService.healthChecker = healthChecker;
        messageReaderService.rulesLoadingService = rulesLoadingService;
    }

    @Test
    public void testProcessMessageFromRuleNotifierVMB() {
        // Mock behavior for successful processMessageFromRuleNotifierVMB()
        when(params.getVMBConnectionFailureThresholdCount()).thenReturn(3);

        assertDoesNotThrow(() -> messageReaderService.processMessageFromRuleNotifierVMB());
    }

    @Test
    public void testRetryReaderConnection() {
        // Mock behavior for retryReaderConnection()
        when(params.getVMBConnectionFailureThresholdCount()).thenReturn(3);

        // You can't directly invoke a private method using Mockito so you can create a public method
        // in MessageReaderService to wrap the call to retryReaderConnection
        messageReaderService.retryReaderConnection();

        // If you really need to test the retryReaderConnection method directly
        // You can create a public method in MessageReaderService to wrap the call to retryReaderConnection
        // messageReaderService.testRetryReaderConnection();
    }
}
```

In the above code, I've made the `retryReaderConnection` method public in the `MessageReaderService` class. You can also create a public method in `MessageReaderService` that wraps the call to `retryReaderConnection` if you really need to test it directly.

Also, you can use `doNothing().when()` instead of `when()` if you don't want to return any value from `retryReaderConnection` method.