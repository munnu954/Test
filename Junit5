import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.HashMap;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class PostingRuleProcessingServiceTest {

    @Mock
    private TopologyApiClient topoApiClient;

    @Mock
    private AlarmPostingUtils utils;

    @InjectMocks
    private PostingRuleProcessingService postingRuleProcessingService;

    @Test
    public void testApplyPostingRule_WhenTopologyObjectsNodeIsNull() {
        // Arrange
        Alarm alarm = new Alarm();
        PostingRule rule = new PostingRule(1, "testrule", 1, 1, "{\"key\": \"value\"}");
        HashMap<String, Object> alarmMap = new HashMap<>();
        when(topoApiClient.fetchTopologyTraversalDetails(any(Alarm.class), any(PostingRule.class), anyString())).thenReturn(null);

        // Act
        Alarm result = postingRuleProcessingService.applyPostingRule(alarm, rule, alarmMap);

        // Assert
        assertEquals(alarm, result);
        verifyNoInteractions(utils);
    }

    @Test
    public void testApplyPostingRule_WhenTopoObjectEligibilityCheckFails() {
        // Implement the test case similar to the above test case to cover another branch

    }

    // Write more test cases to cover other branches of applyPostingRule method
}