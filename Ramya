import org.apache.flink.api.common.functions.FlatMapFunction;
import org.apache.flink.util.Collector;
import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;
import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper;

public class CsvtoJsonConversion implements FlatMapFunction<String, String> {

    @Override
    public void flatMap(String input, Collector<String> collector) throws Exception {
        String[] lines = input.split(System.lineSeparator());
        ObjectMapper objectMapper = new ObjectMapper();
        JsonNode result = objectMapper.createObjectNode();
        String objectName = "";
        JsonNode objectDetails = objectMapper.createObjectNode();

        for (int i = 1; i < lines.length; i++) {
            String[] arr = lines[i].split(",");

            if (arr.length > 2 && !arr[2].isEmpty()) {
                objectName = arr[2].trim();
                ((JsonNode) objectDetails).put("Begin Date", getCellValue(lines, i + 1, 1));
                ((JsonNode) objectDetails).put("End Date", getCellValue(lines, i + 2, 1));
                ((JsonNode) objectDetails).put("Ticket Number", getCellValue(lines, i + 3, 1));
            } else if (arr.length > 0 && !arr[0].isEmpty()) {
                String sectionName = arr[0].trim();
                JsonNode sectionObject = objectMapper.createObjectNode();

                for (int j = 3; j < arr.length; j++) {
                    ((JsonNode) sectionObject).put("Min", getCellValue(lines, i, j));
                    ((JsonNode) sectionObject).put("Average", getCellValue(lines, i + 1, j));
                    ((JsonNode) sectionObject).put("Max", getCellValue(lines, i + 2, j));
                    ((JsonNode) sectionObject).put("Cumulative Counter Value", getCellValue(lines, i + 3, j));
                }

                ((JsonNode) objectDetails).set(sectionName, sectionObject);
            }
        }

        ((JsonNode) result).set(objectName, objectDetails);
        collector.collect(result.toString());
    }

    private String getCellValue(String[] lines, int rowIndex, int columnIndex) {
        if (lines.length > rowIndex) {
            String[] rowValues = lines[rowIndex].split(",");
            if (rowValues.length > columnIndex) {
                return rowValues[columnIndex].trim();
            }
        }
        return "";
    }
}
